{"mappings":"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AC,CAAC,IAAI,EAAE;IACrB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;IACrB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;IACrB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;IACrB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;IACrB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;IACrB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;IACrB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;IACrB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;IACrB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;IACrB,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAChC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAChC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAChC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAChC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAChC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAChC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE;IAC1C,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE;IAC1C,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE;IAC1C,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE;IAC1C,KAAK,CAAC,KAAK,GAAG,GAAG,GA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;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;AACN,GAAM;;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,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACtG,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACxG,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACxG,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACtG,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,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,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;AACrV,CAAC;SAUe,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,C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GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,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GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GACT,GAAG,GAAG,CAAC,CAAC,CAAC,GACT,GAAG,GAAG,CAAC,CAAC,CAAC;IACb,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GACT,GAAG,GAAG,CAAC,CAAC,CAAC,GACT,GAAG,GAAG,CAAC,CAAC,CAAC;IAEb,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GACT,GAAG,GAAG,CAAC,CAAC,CAAC,GACT,GAAG,GAAG,CAAC,CAAC,CAAC;IACb,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GACT,GAAG,GAAG,CAAC,CAAC,CAAC,GACT,GAAG,GAAG,CAAC,CAAC,CAAC;IACb,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GACT,GAAG,GAAG,CAAC,CAAC,CAAC,GACT,GAAG,GAAG,CAAC,CAAC,CAAC;IAEb,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAC1C,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAC1C,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAE1C,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAC1C,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAC1C,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAE1C,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAC1C,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAC1C,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GA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GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACrG,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACvG,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACtG,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAA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GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,SAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAG,EAAE,IAAI,CAAC,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","sources":["src/tessellation-worker.ts","node_modules/threads/worker.js","node_modules/threads/dist/worker/index.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/is-observable/index.js","node_modules/threads/dist/common.js","node_modules/threads/dist/serializers.js","node_modules/threads/dist/transferable.js","node_modules/threads/dist/symbols.js","node_modules/threads/dist/types/messages.js","node_modules/threads/dist/worker/implementation.browser.js","src/tessellation.ts","node_modules/@thi.ng/geom-accel/index.js","node_modules/@thi.ng/geom-accel/kd-tree-map.js","node_modules/@thi.ng/arrays/ensure-array.js","node_modules/@thi.ng/checks/is-array.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@thi.ng/checks/is-arraylike.js","node_modules/@thi.ng/arrays/ensure-iterable.js","node_modules/@thi.ng/errors/illegal-arguments.js","node_modules/@thi.ng/errors/deferror.js","node_modules/@thi.ng/heaps/heap.js","node_modules/@thi.ng/compare/compare.js","node_modules/@thi.ng/equiv/index.js","node_modules/@thi.ng/math/api.js","node_modules/@thi.ng/transducers/map.js","node_modules/@thi.ng/checks/is-iterable.js","node_modules/@thi.ng/transducers/compr.js","node_modules/@thi.ng/transducers/iterator.js","node_modules/@thi.ng/api/api.js","node_modules/@thi.ng/transducers/ensure.js","node_modules/@thi.ng/checks/implements-function.js","node_modules/@thi.ng/transducers/push.js","node_modules/@thi.ng/transducers/reduce.js","node_modules/@thi.ng/errors/illegal-arity.js","node_modules/@thi.ng/transducers/reduced.js","node_modules/@thi.ng/vectors/distsq.js","node_modules/@thi.ng/vectors/compile/emit.js","node_modules/@thi.ng/transducers/comp.js","node_modules/@thi.ng/compose/comp.js","node_modules/@thi.ng/transducers/map-indexed.js","node_modules/@thi.ng/transducers/range.js","node_modules/@thi.ng/transducers/str.js","node_modules/@thi.ng/transducers/take.js","node_modules/@thi.ng/transducers/transduce.js","node_modules/@thi.ng/transducers/zip.js","node_modules/@thi.ng/vectors/vop.js","node_modules/@thi.ng/errors/unsupported.js","node_modules/@thi.ng/vectors/compile/templates.js","node_modules/@thi.ng/geom-accel/utils.js","node_modules/@thi.ng/geom-accel/kd-tree-set.js","node_modules/@thi.ng/geom-accel/nd-quadtree-map.js","node_modules/@thi.ng/errors/assert.js","node_modules/@thi.ng/geom-isec/point.js","node_modules/@thi.ng/geom-closest-point/line.js","node_modules/@thi.ng/vectors/dist.js","node_modules/@thi.ng/vectors/dot.js","node_modules/@thi.ng/vectors/empty.js","node_modules/@thi.ng/vectors/setn.js","node_modules/@thi.ng/vectors/magsq.js","node_modules/@thi.ng/vectors/mixn.js","node_modules/@thi.ng/vectors/set.js","node_modules/@thi.ng/vectors/sub.js","node_modules/@thi.ng/math/abs.js","node_modules/@thi.ng/math/interval.js","node_modules/@thi.ng/vectors/clockwise.js","node_modules/@thi.ng/vectors/signed-area.js","node_modules/@thi.ng/geom-isec/rect-circle.js","node_modules/@thi.ng/transducers/iterate.js","node_modules/@thi.ng/transducers/permutations.js","node_modules/@thi.ng/transducers/repeat.js","node_modules/@thi.ng/vectors/addmn.js","node_modules/@thi.ng/vectors/madd.js","node_modules/@thi.ng/vectors/muln.js","node_modules/@thi.ng/vectors/submn.js","node_modules/@thi.ng/geom-accel/nd-quadtree-set.js","node_modules/@thi.ng/geom-accel/spatial-grid2.js","node_modules/@thi.ng/checks/is-number.js","node_modules/@thi.ng/vectors/addn.js","node_modules/@thi.ng/vectors/subn.js","node_modules/@thi.ng/geom-accel/aspatial-grid.js","node_modules/@thi.ng/vectors/div.js","node_modules/@thi.ng/vectors/equals.js","node_modules/@thi.ng/vectors/floor.js","node_modules/@thi.ng/geom-accel/spatial-grid3.js","node_modules/@thi.ng/poisson/index.js","node_modules/@thi.ng/poisson/api.js","node_modules/@thi.ng/poisson/poisson.js","node_modules/@thi.ng/random/system.js","node_modules/@thi.ng/random/arandom.js","node_modules/@thi.ng/vectors/jitter.js","node_modules/@thi.ng/vectors/add.js","node_modules/@thi.ng/vectors/random.js","node_modules/@thi.ng/random/distributions/normal.js","node_modules/@thi.ng/vectors/index.js","node_modules/@thi.ng/vectors/api.js","node_modules/@thi.ng/vectors/iterator.js","node_modules/@thi.ng/vectors/compile/accessors.js","node_modules/@thi.ng/vectors/avec.js","node_modules/@thi.ng/vectors/string.js","node_modules/@thi.ng/checks/is-function.js","node_modules/@thi.ng/strings/float.js","node_modules/@thi.ng/memoize/memoizej.js","node_modules/@thi.ng/strings/pad-left.js","node_modules/@thi.ng/strings/repeat.js","node_modules/@thi.ng/vectors/vec2.js","node_modules/@thi.ng/vectors/buffer.js","node_modules/@thi.ng/api/typedarray.js","node_modules/@thi.ng/vectors/eqdelta.js","node_modules/@thi.ng/math/eqdelta.js","node_modules/@thi.ng/vectors/hash.js","node_modules/@thi.ng/binary/float.js","node_modules/@thi.ng/binary/rotate.js","node_modules/@thi.ng/vectors/sets.js","node_modules/@thi.ng/vectors/vec3.js","node_modules/@thi.ng/vectors/vec4.js","node_modules/@thi.ng/vectors/abs.js","node_modules/@thi.ng/vectors/acos.js","node_modules/@thi.ng/vectors/addw.js","node_modules/@thi.ng/vectors/maddn.js","node_modules/@thi.ng/vectors/addi.js","node_modules/@thi.ng/vectors/addm.js","node_modules/@thi.ng/vectors/addms.js","node_modules/@thi.ng/vectors/addmns.js","node_modules/@thi.ng/vectors/adds.js","node_modules/@thi.ng/vectors/addns.js","node_modules/@thi.ng/vectors/angle-between.js","node_modules/@thi.ng/math/angle.js","node_modules/@thi.ng/vectors/cross.js","node_modules/@thi.ng/vectors/setc.js","node_modules/@thi.ng/vectors/mag.js","node_modules/@thi.ng/vectors/asin.js","node_modules/@thi.ng/vectors/atan.js","node_modules/@thi.ng/vectors/bisect.js","node_modules/@thi.ng/vectors/direction.js","node_modules/@thi.ng/vectors/normalize.js","node_modules/@thi.ng/vectors/heading.js","node_modules/@thi.ng/vectors/perpendicular.js","node_modules/@thi.ng/vectors/bit-and.js","node_modules/@thi.ng/vectors/bit-not.js","node_modules/@thi.ng/vectors/bit-or.js","node_modules/@thi.ng/vectors/bit-xor.js","node_modules/@thi.ng/vectors/cartesian.js","node_modules/@thi.ng/vectors/ceil.js","node_modules/@thi.ng/vectors/center.js","node_modules/@thi.ng/vectors/mean.js","node_modules/@thi.ng/vectors/internal/ensure.js","node_modules/@thi.ng/vectors/sum.js","node_modules/@thi.ng/transducers/add.js","node_modules/@thi.ng/transducers/internal/mathop.js","node_modules/@thi.ng/vectors/clamp.js","node_modules/@thi.ng/vectors/clampn.js","node_modules/@thi.ng/vectors/compare.js","node_modules/@thi.ng/vectors/convert.js","node_modules/@thi.ng/vectors/copy.js","node_modules/@thi.ng/vectors/correlation.js","node_modules/@thi.ng/vectors/mul.js","node_modules/@thi.ng/vectors/cos.js","node_modules/@thi.ng/vectors/cosh.js","node_modules/@thi.ng/vectors/covariance.js","node_modules/@thi.ng/vectors/crosss.js","node_modules/@thi.ng/vectors/setcs.js","node_modules/@thi.ng/vectors/degrees.js","node_modules/@thi.ng/vectors/dist-braycurtis.js","node_modules/@thi.ng/vectors/dist-canberra.js","node_modules/@thi.ng/vectors/dist-chebyshev.js","node_modules/@thi.ng/vectors/dist-hamming.js","node_modules/@thi.ng/vectors/dist-haversine.js","node_modules/@thi.ng/vectors/radians.js","node_modules/@thi.ng/vectors/dist-jaccard.js","node_modules/@thi.ng/vectors/dist-manhattan.js","node_modules/@thi.ng/vectors/dist-minkowski.js","node_modules/@thi.ng/vectors/dist-sorensendice.js","node_modules/@thi.ng/vectors/dist-weighted.js","node_modules/@thi.ng/vectors/divi.js","node_modules/@thi.ng/vectors/divn.js","node_modules/@thi.ng/vectors/divs.js","node_modules/@thi.ng/vectors/divns.js","node_modules/@thi.ng/vectors/dotc.js","node_modules/@thi.ng/vectors/dots.js","node_modules/@thi.ng/vectors/every.js","node_modules/@thi.ng/vectors/exp.js","node_modules/@thi.ng/vectors/exp_2.js","node_modules/@thi.ng/vectors/face-forward.js","node_modules/@thi.ng/vectors/fill.js","node_modules/@thi.ng/vectors/map.js","node_modules/@thi.ng/vectors/fit.js","node_modules/@thi.ng/math/fit.js","node_modules/@thi.ng/vectors/fmod.js","node_modules/@thi.ng/vectors/fmodn.js","node_modules/@thi.ng/vectors/fract.js","node_modules/@thi.ng/math/prec.js","node_modules/@thi.ng/vectors/gvec.js","node_modules/@thi.ng/memoize/memoize1.js","node_modules/@thi.ng/vectors/heading-segment.js","node_modules/@thi.ng/vectors/homogeneous.js","node_modules/@thi.ng/vectors/invert.js","node_modules/@thi.ng/vectors/invsqrt.js","node_modules/@thi.ng/vectors/is-inf.js","node_modules/@thi.ng/vectors/is-nan.js","node_modules/@thi.ng/vectors/limit.js","node_modules/@thi.ng/vectors/log.js","node_modules/@thi.ng/vectors/log_2.js","node_modules/@thi.ng/vectors/logic-and.js","node_modules/@thi.ng/vectors/logic-not.js","node_modules/@thi.ng/vectors/logic-or.js","node_modules/@thi.ng/vectors/lshift.js","node_modules/@thi.ng/vectors/madds.js","node_modules/@thi.ng/vectors/maddns.js","node_modules/@thi.ng/vectors/mags.js","node_modules/@thi.ng/vectors/magsqs.js","node_modules/@thi.ng/vectors/major.js","node_modules/@thi.ng/vectors/map-vectors.js","node_modules/@thi.ng/vectors/max.js","node_modules/@thi.ng/vectors/max-bounds.js","node_modules/@thi.ng/vectors/vec-of.js","node_modules/@thi.ng/vectors/median.js","node_modules/@thi.ng/vectors/min.js","node_modules/@thi.ng/vectors/min-bounds.js","node_modules/@thi.ng/vectors/minor.js","node_modules/@thi.ng/vectors/mix-bilinear.js","node_modules/@thi.ng/math/mix.js","node_modules/@thi.ng/vectors/mix-cubic.js","node_modules/@thi.ng/vectors/mix-hermite.js","node_modules/@thi.ng/vectors/mix-quadratic.js","node_modules/@thi.ng/vectors/mix.js","node_modules/@thi.ng/vectors/mixs.js","node_modules/@thi.ng/vectors/mixns.js","node_modules/@thi.ng/vectors/mod.js","node_modules/@thi.ng/vectors/modn.js","node_modules/@thi.ng/vectors/msub.js","node_modules/@thi.ng/vectors/msubn.js","node_modules/@thi.ng/vectors/msubs.js","node_modules/@thi.ng/vectors/msubns.js","node_modules/@thi.ng/vectors/muli.js","node_modules/@thi.ng/vectors/muls.js","node_modules/@thi.ng/vectors/mulns.js","node_modules/@thi.ng/vectors/neg.js","node_modules/@thi.ng/vectors/normal.js","node_modules/@thi.ng/vectors/normalizes.js","node_modules/@thi.ng/vectors/not.js","node_modules/@thi.ng/vectors/ortho-normal.js","node_modules/@thi.ng/vectors/point-on-ray.js","node_modules/@thi.ng/vectors/polar.js","node_modules/@thi.ng/vectors/pow.js","node_modules/@thi.ng/vectors/pown.js","node_modules/@thi.ng/vectors/project.js","node_modules/@thi.ng/vectors/randoms.js","node_modules/@thi.ng/vectors/reflect.js","node_modules/@thi.ng/vectors/refract.js","node_modules/@thi.ng/vectors/remainder.js","node_modules/@thi.ng/math/libc.js","node_modules/@thi.ng/vectors/remaindern.js","node_modules/@thi.ng/vectors/rotate-around-axis.js","node_modules/@thi.ng/vectors/rotate-around-point.js","node_modules/@thi.ng/vectors/rotate.js","node_modules/@thi.ng/vectors/rotates.js","node_modules/@thi.ng/vectors/round.js","node_modules/@thi.ng/vectors/rshift.js","node_modules/@thi.ng/vectors/safe-div.js","node_modules/@thi.ng/math/safe-div.js","node_modules/@thi.ng/vectors/select.js","node_modules/@thi.ng/vectors/setns.js","node_modules/@thi.ng/vectors/setvn.js","node_modules/@thi.ng/vectors/setvv.js","node_modules/@thi.ng/vectors/sign.js","node_modules/@thi.ng/vectors/signed-volume.js","node_modules/@thi.ng/vectors/sin.js","node_modules/@thi.ng/vectors/sinh.js","node_modules/@thi.ng/vectors/softmax.js","node_modules/@thi.ng/vectors/some.js","node_modules/@thi.ng/vectors/sqrt.js","node_modules/@thi.ng/vectors/step.js","node_modules/@thi.ng/math/step.js","node_modules/@thi.ng/vectors/smoothstep.js","node_modules/@thi.ng/vectors/standardize.js","node_modules/@thi.ng/vectors/variance.js","node_modules/@thi.ng/vectors/subi.js","node_modules/@thi.ng/vectors/subm.js","node_modules/@thi.ng/vectors/subms.js","node_modules/@thi.ng/vectors/submns.js","node_modules/@thi.ng/vectors/subs.js","node_modules/@thi.ng/vectors/subns.js","node_modules/@thi.ng/vectors/swizzle.js","node_modules/@thi.ng/vectors/tan.js","node_modules/@thi.ng/vectors/tanh.js","node_modules/@thi.ng/vectors/tensor.js","node_modules/@thi.ng/vectors/trunc.js","node_modules/@thi.ng/vectors/wrap.js","node_modules/@thi.ng/vectors/eq.js","node_modules/@thi.ng/vectors/neq.js","node_modules/@thi.ng/vectors/gt.js","node_modules/@thi.ng/vectors/gte.js","node_modules/@thi.ng/vectors/lt.js","node_modules/@thi.ng/vectors/lte.js","node_modules/@thi.ng/poisson/stratified.js","node_modules/@thi.ng/transducers/mapcat.js","node_modules/@thi.ng/transducers/cat.js","node_modules/@thi.ng/transducers/range-nd.js","node_modules/@thi.ng/transducers/repeatedly.js","node_modules/barycentric/barycentric.js","node_modules/robust-linear-solve/linsolve.js","node_modules/robust-determinant/robust-determinant.js","node_modules/two-product/two-product.js","node_modules/robust-sum/robust-sum.js","node_modules/robust-scale/robust-scale.js","node_modules/two-sum/two-sum.js","node_modules/robust-compress/compress.js","node_modules/delaunator/index.js","node_modules/robust-predicates/index.js","node_modules/robust-predicates/esm/orient2d.js","node_modules/robust-predicates/esm/util.js","node_modules/robust-predicates/esm/orient3d.js","node_modules/robust-predicates/esm/incircle.js","node_modules/robust-predicates/esm/insphere.js","node_modules/lodash-es/lodash.js","node_modules/lodash-es/chunk.js","node_modules/lodash-es/_baseSlice.js","node_modules/lodash-es/_isIterateeCall.js","node_modules/lodash-es/eq.js","node_modules/lodash-es/isArrayLike.js","node_modules/lodash-es/isFunction.js","node_modules/lodash-es/_baseGetTag.js","node_modules/lodash-es/_Symbol.js","node_modules/lodash-es/_root.js","node_modules/lodash-es/_freeGlobal.js","node_modules/lodash-es/_getRawTag.js","node_modules/lodash-es/_objectToString.js","node_modules/lodash-es/isObject.js","node_modules/lodash-es/isLength.js","node_modules/lodash-es/_isIndex.js","node_modules/lodash-es/toInteger.js","node_modules/lodash-es/toFinite.js","node_modules/lodash-es/toNumber.js","node_modules/lodash-es/_baseTrim.js","node_modules/lodash-es/_trimmedEndIndex.js","node_modules/lodash-es/isSymbol.js","node_modules/lodash-es/isObjectLike.js","node_modules/lodash-es/constant.js","node_modules/lodash-es/flatten.js","node_modules/lodash-es/_baseFlatten.js","node_modules/lodash-es/_arrayPush.js","node_modules/lodash-es/_isFlattenable.js","node_modules/lodash-es/isArguments.js","node_modules/lodash-es/_baseIsArguments.js","node_modules/lodash-es/isArray.js","node_modules/lodash-es/flow.js","node_modules/lodash-es/_createFlow.js","node_modules/lodash-es/_LodashWrapper.js","node_modules/lodash-es/_baseCreate.js","node_modules/lodash-es/_baseLodash.js","node_modules/lodash-es/_flatRest.js","node_modules/lodash-es/_overRest.js","node_modules/lodash-es/_apply.js","node_modules/lodash-es/_setToString.js","node_modules/lodash-es/_baseSetToString.js","node_modules/lodash-es/_defineProperty.js","node_modules/lodash-es/_getNative.js","node_modules/lodash-es/_baseIsNative.js","node_modules/lodash-es/_isMasked.js","node_modules/lodash-es/_coreJsData.js","node_modules/lodash-es/_toSource.js","node_modules/lodash-es/_getValue.js","node_modules/lodash-es/identity.js","node_modules/lodash-es/_shortOut.js","node_modules/lodash-es/_getData.js","node_modules/lodash-es/_metaMap.js","node_modules/lodash-es/_WeakMap.js","node_modules/lodash-es/noop.js","node_modules/lodash-es/_getFuncName.js","node_modules/lodash-es/_realNames.js","node_modules/lodash-es/_isLaziable.js","node_modules/lodash-es/_LazyWrapper.js","node_modules/lodash-es/wrapperLodash.js","node_modules/lodash-es/_wrapperClone.js","node_modules/lodash-es/_copyArray.js","node_modules/lodash-es/fromPairs.js","node_modules/lodash-es/get.js","node_modules/lodash-es/_baseGet.js","node_modules/lodash-es/_castPath.js","node_modules/lodash-es/_isKey.js","node_modules/lodash-es/_stringToPath.js","node_modules/lodash-es/_memoizeCapped.js","node_modules/lodash-es/memoize.js","node_modules/lodash-es/_MapCache.js","node_modules/lodash-es/_mapCacheClear.js","node_modules/lodash-es/_Hash.js","node_modules/lodash-es/_hashClear.js","node_modules/lodash-es/_nativeCreate.js","node_modules/lodash-es/_hashDelete.js","node_modules/lodash-es/_hashGet.js","node_modules/lodash-es/_hashHas.js","node_modules/lodash-es/_hashSet.js","node_modules/lodash-es/_ListCache.js","node_modules/lodash-es/_listCacheClear.js","node_modules/lodash-es/_listCacheDelete.js","node_modules/lodash-es/_assocIndexOf.js","node_modules/lodash-es/_listCacheGet.js","node_modules/lodash-es/_listCacheHas.js","node_modules/lodash-es/_listCacheSet.js","node_modules/lodash-es/_Map.js","node_modules/lodash-es/_mapCacheDelete.js","node_modules/lodash-es/_getMapData.js","node_modules/lodash-es/_isKeyable.js","node_modules/lodash-es/_mapCacheGet.js","node_modules/lodash-es/_mapCacheHas.js","node_modules/lodash-es/_mapCacheSet.js","node_modules/lodash-es/toString.js","node_modules/lodash-es/_baseToString.js","node_modules/lodash-es/_arrayMap.js","node_modules/lodash-es/_toKey.js","node_modules/lodash-es/hasIn.js","node_modules/lodash-es/_baseHasIn.js","node_modules/lodash-es/_hasPath.js","node_modules/lodash-es/isArrayLikeObject.js","node_modules/lodash-es/isBuffer.js","node_modules/lodash-es/stubFalse.js","node_modules/lodash-es/isEqual.js","node_modules/lodash-es/_baseIsEqual.js","node_modules/lodash-es/_baseIsEqualDeep.js","node_modules/lodash-es/_Stack.js","node_modules/lodash-es/_stackClear.js","node_modules/lodash-es/_stackDelete.js","node_modules/lodash-es/_stackGet.js","node_modules/lodash-es/_stackHas.js","node_modules/lodash-es/_stackSet.js","node_modules/lodash-es/_equalArrays.js","node_modules/lodash-es/_SetCache.js","node_modules/lodash-es/_setCacheAdd.js","node_modules/lodash-es/_setCacheHas.js","node_modules/lodash-es/_arraySome.js","node_modules/lodash-es/_cacheHas.js","node_modules/lodash-es/_equalByTag.js","node_modules/lodash-es/_Uint8Array.js","node_modules/lodash-es/_mapToArray.js","node_modules/lodash-es/_setToArray.js","node_modules/lodash-es/_equalObjects.js","node_modules/lodash-es/_getAllKeys.js","node_modules/lodash-es/_baseGetAllKeys.js","node_modules/lodash-es/_getSymbols.js","node_modules/lodash-es/_arrayFilter.js","node_modules/lodash-es/stubArray.js","node_modules/lodash-es/keys.js","node_modules/lodash-es/_arrayLikeKeys.js","node_modules/lodash-es/_baseTimes.js","node_modules/lodash-es/isTypedArray.js","node_modules/lodash-es/_baseIsTypedArray.js","node_modules/lodash-es/_baseUnary.js","node_modules/lodash-es/_nodeUtil.js","node_modules/lodash-es/_baseKeys.js","node_modules/lodash-es/_isPrototype.js","node_modules/lodash-es/_nativeKeys.js","node_modules/lodash-es/_overArg.js","node_modules/lodash-es/_getTag.js","node_modules/lodash-es/_DataView.js","node_modules/lodash-es/_Promise.js","node_modules/lodash-es/_Set.js","node_modules/lodash-es/property.js","node_modules/lodash-es/_baseProperty.js","node_modules/lodash-es/_basePropertyDeep.js","node_modules/lodash-es/range.js","node_modules/lodash-es/_createRange.js","node_modules/lodash-es/_baseRange.js","node_modules/lodash-es/sample.js","node_modules/lodash-es/_arraySample.js","node_modules/lodash-es/_baseRandom.js","node_modules/lodash-es/_baseSample.js","node_modules/lodash-es/values.js","node_modules/lodash-es/_baseValues.js","node_modules/lodash-es/sortBy.js","node_modules/lodash-es/_baseOrderBy.js","node_modules/lodash-es/_baseIteratee.js","node_modules/lodash-es/_baseMatches.js","node_modules/lodash-es/_baseIsMatch.js","node_modules/lodash-es/_getMatchData.js","node_modules/lodash-es/_isStrictComparable.js","node_modules/lodash-es/_matchesStrictComparable.js","node_modules/lodash-es/_baseMatchesProperty.js","node_modules/lodash-es/_baseMap.js","node_modules/lodash-es/_baseEach.js","node_modules/lodash-es/_baseForOwn.js","node_modules/lodash-es/_baseFor.js","node_modules/lodash-es/_createBaseFor.js","node_modules/lodash-es/_createBaseEach.js","node_modules/lodash-es/_baseSortBy.js","node_modules/lodash-es/_compareMultiple.js","node_modules/lodash-es/_compareAscending.js","node_modules/lodash-es/_baseRest.js","node_modules/lodash-es/sum.js","node_modules/lodash-es/_baseSum.js","node_modules/lodash-es/uniq.js","node_modules/lodash-es/_baseUniq.js","node_modules/lodash-es/_arrayIncludes.js","node_modules/lodash-es/_baseIndexOf.js","node_modules/lodash-es/_baseFindIndex.js","node_modules/lodash-es/_baseIsNaN.js","node_modules/lodash-es/_strictIndexOf.js","node_modules/lodash-es/_arrayIncludesWith.js","node_modules/lodash-es/_createSet.js","node_modules/lodash-es/uniqBy.js","node_modules/lodash-es/uniqWith.js","node_modules/lodash-es/unzip.js","node_modules/lodash-es/unzipWith.js","node_modules/lodash-es/zipWith.js","node_modules/angle-normals/angle-normals.js","node_modules/mda/index.js","node_modules/mda/mda/Core/Edge.js","node_modules/mda/mda/Core/HalfEdge.js","node_modules/mda/mda/Core/Vertex.js","node_modules/mda/node_modules/gl-matrix/lib/gl-matrix.js","node_modules/mda/node_modules/gl-matrix/lib/gl-matrix/common.js","node_modules/mda/node_modules/gl-matrix/lib/gl-matrix/mat2.js","node_modules/mda/node_modules/gl-matrix/lib/gl-matrix/mat2d.js","node_modules/mda/node_modules/gl-matrix/lib/gl-matrix/mat3.js","node_modules/mda/node_modules/gl-matrix/lib/gl-matrix/mat4.js","node_modules/mda/node_modules/gl-matrix/lib/gl-matrix/quat.js","node_modules/mda/node_modules/gl-matrix/lib/gl-matrix/vec3.js","node_modules/mda/node_modules/gl-matrix/lib/gl-matrix/vec4.js","node_modules/mda/node_modules/gl-matrix/lib/gl-matrix/quat2.js","node_modules/mda/node_modules/gl-matrix/lib/gl-matrix/vec2.js","node_modules/mda/mda/Core/Face.js","node_modules/mda/mda/Core/Mesh.js","node_modules/mda/mda/Integrity/Integrity.js","node_modules/mda/mda/Integrity/FaceIntegrity.js","node_modules/mda/mda/Integrity/EdgeIntegrity.js","node_modules/mda/mda/Integrity/VertexIntegrity.js","node_modules/mda/mda/Integrity/HalfEdgeIntegrity.js","node_modules/mda/mda/Queries/HalfEdgePrev.js","node_modules/mda/mda/Integrity/MeshIntegrity.js","node_modules/mda/mda/Queries/EdgeVertices.js","node_modules/mda/mda/Queries/FaceHalfEdges.js","node_modules/mda/mda/Queries/FaceVertices.js","node_modules/mda/mda/Queries/VertexFaces.js","node_modules/mda/mda/Queries/VertexHalfEdges.js","node_modules/mda/mda/Queries/VertexNeighbors.js","node_modules/mda/mda/Queries/MeshCentroid.js","node_modules/mda/mda/Operators/InsertVertex.js","node_modules/mda/mda/Operators/InsertEdge.js","node_modules/mda/mda/Operators/DeleteEdge.js","node_modules/mda/mda/Operators/Loop.js","node_modules/mda/mda/Operators/CatmullClark.js","node_modules/mda/mda/Operators/QuadSubdivide.js","node_modules/mda/mda/Operators/Triangulate.js","node_modules/guf/index.js","node_modules/guf/guf/normalize-array.js","node_modules/guf/guf/face-normals.js","node_modules/guf/guf/calculate-normal.js","node_modules/guf/guf/cross.js","node_modules/guf/guf/normalize.js","node_modules/guf/guf/vertex-normals.js","node_modules/cga/index.js","node_modules/cga/cga/greater-than-zero-1d.js","node_modules/cga/cga/is-equal-1d.js","node_modules/cga/cga/is-zero-1d.js","node_modules/cga/cga/area2-2d.js","node_modules/cga/cga/convex-hull-2d.js","node_modules/cga/cga/is-left-2d.js","node_modules/cga/cga/cross-2d.js","node_modules/cga/cga/expand-polygon-2d.js","node_modules/cga/node_modules/gl-matrix/lib/gl-matrix.js","node_modules/cga/node_modules/gl-matrix/lib/gl-matrix/common.js","node_modules/cga/node_modules/gl-matrix/lib/gl-matrix/mat2.js","node_modules/cga/node_modules/gl-matrix/lib/gl-matrix/mat2d.js","node_modules/cga/node_modules/gl-matrix/lib/gl-matrix/mat3.js","node_modules/cga/node_modules/gl-matrix/lib/gl-matrix/mat4.js","node_modules/cga/node_modules/gl-matrix/lib/gl-matrix/quat.js","node_modules/cga/node_modules/gl-matrix/lib/gl-matrix/vec3.js","node_modules/cga/node_modules/gl-matrix/lib/gl-matrix/vec4.js","node_modules/cga/node_modules/gl-matrix/lib/gl-matrix/quat2.js","node_modules/cga/node_modules/gl-matrix/lib/gl-matrix/vec2.js","node_modules/cga/cga/intersection-2d.js","node_modules/cga/cga/in-cone-2d.js","node_modules/cga/cga/is-left-on-2d.js","node_modules/cga/cga/intersects-2d.js","node_modules/cga/cga/intersects-proper-2d.js","node_modules/cga/cga/is-colinear-2d.js","node_modules/cga/cga/is-between-2d.js","node_modules/cga/cga/is-diagonal-2d.js","node_modules/cga/cga/is-diagonalie-2d.js","node_modules/cga/cga/is-equal-2d.js","node_modules/cga/cga/triangulate-polygon-2d.js","node_modules/cga/cga/is-colinear-3d.js","node_modules/mda/mda/Operators/Extrude.js","node_modules/mda/mda/Operators/Pipe.js","node_modules/mda/mda/Operators/CreateFace.js","node_modules/mda/mda/Operators/Duplicate.js","node_modules/mda/mda/Operators/Combine.js","node_modules/mda/mda/Operators/Scale.js","node_modules/mda/mda/Operators/Move.js","node_modules/mda/mda/Operators/Invert.js","node_modules/mda/mda/Operators/Wireframe.js","node_modules/mda/mda/Generators/Profile.js"],"sourcesContent":["// @ts-ignore\nimport { expose } from \"threads/worker\"\nimport { tessellationMesh } from './tessellation';\n\n// create a worker and register public functions\nexpose({\n  tessellationMesh: tessellationMesh,\n});\n","module.exports = require(\"./dist/worker/index\")\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expose = exports.isWorkerRuntime = exports.Transfer = exports.registerSerializer = void 0;\nconst is_observable_1 = __importDefault(require(\"is-observable\"));\nconst common_1 = require(\"../common\");\nconst transferable_1 = require(\"../transferable\");\nconst messages_1 = require(\"../types/messages\");\nconst implementation_1 = __importDefault(require(\"./implementation\"));\nvar common_2 = require(\"../common\");\nObject.defineProperty(exports, \"registerSerializer\", { enumerable: true, get: function () { return common_2.registerSerializer; } });\nvar transferable_2 = require(\"../transferable\");\nObject.defineProperty(exports, \"Transfer\", { enumerable: true, get: function () { return transferable_2.Transfer; } });\n/** Returns `true` if this code is currently running in a worker. */\nexports.isWorkerRuntime = implementation_1.default.isWorkerRuntime;\nlet exposeCalled = false;\nconst activeSubscriptions = new Map();\nconst isMasterJobCancelMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.cancel;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === messages_1.MasterMessageType.run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => is_observable_1.default(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return transferable_1.isTransferDescriptor(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: messages_1.WorkerMessageType.init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    implementation_1.default.postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: messages_1.WorkerMessageType.error,\n        uid,\n        error: common_1.serialize(error)\n    };\n    implementation_1.default.postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: messages_1.WorkerMessageType.result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    implementation_1.default.postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: messages_1.WorkerMessageType.running,\n        uid,\n        resultType\n    };\n    implementation_1.default.postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: messages_1.WorkerMessageType.uncaughtError,\n            error: common_1.serialize(error)\n        };\n        implementation_1.default.postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            const subscription = syncResult.subscribe(value => postJobResultMessage(jobUID, false, common_1.serialize(value)), error => {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n                activeSubscriptions.delete(jobUID);\n            }, () => {\n                postJobResultMessage(jobUID, true);\n                activeSubscriptions.delete(jobUID);\n            });\n            activeSubscriptions.set(jobUID, subscription);\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, common_1.serialize(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, common_1.serialize(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nfunction expose(exposed) {\n    if (!implementation_1.default.isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(common_1.deserialize));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        implementation_1.default.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(common_1.deserialize));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n    implementation_1.default.subscribeToMasterMessages(messageData => {\n        if (isMasterJobCancelMessage(messageData)) {\n            const jobUID = messageData.uid;\n            const subscription = activeSubscriptions.get(jobUID);\n            if (subscription) {\n                subscription.unsubscribe();\n                activeSubscriptions.delete(jobUID);\n            }\n        }\n    });\n}\nexports.expose = expose;\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && implementation_1.default.isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n","\"use strict\";","'use strict';\n\nmodule.exports = value => {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\tif (typeof Symbol.observable === 'symbol' && typeof value[Symbol.observable] === 'function') {\n\t\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\t\treturn value === value[Symbol.observable]();\n\t}\n\n\tif (typeof value['@@observable'] === 'function') {\n\t\treturn value === value['@@observable']();\n\t}\n\n\treturn false;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserialize = exports.registerSerializer = void 0;\nconst serializers_1 = require(\"./serializers\");\nlet registeredSerializer = serializers_1.DefaultSerializer;\nfunction registerSerializer(serializer) {\n    registeredSerializer = serializers_1.extendSerializer(registeredSerializer, serializer);\n}\nexports.registerSerializer = registerSerializer;\nfunction deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nexports.deserialize = deserialize;\nfunction serialize(input) {\n    return registeredSerializer.serialize(input);\n}\nexports.serialize = serialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultSerializer = exports.extendSerializer = void 0;\nfunction extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nexports.extendSerializer = extendSerializer;\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nexports.DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transfer = exports.isTransferDescriptor = void 0;\nconst symbols_1 = require(\"./symbols\");\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nfunction isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[symbols_1.$transferable];\n}\nexports.isTransferDescriptor = isTransferDescriptor;\nfunction Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [symbols_1.$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\nexports.Transfer = Transfer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.$worker = exports.$transferable = exports.$terminate = exports.$events = exports.$errors = void 0;\nexports.$errors = Symbol(\"thread.errors\");\nexports.$events = Symbol(\"thread.events\");\nexports.$terminate = Symbol(\"thread.terminate\");\nexports.$transferable = Symbol(\"thread.transferable\");\nexports.$worker = Symbol(\"thread.worker\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkerMessageType = exports.MasterMessageType = void 0;\n/////////////////////////////\n// Messages sent by master:\nvar MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"cancel\"] = \"cancel\";\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType = exports.MasterMessageType || (exports.MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nvar WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType = exports.WorkerMessageType || (exports.WorkerMessageType = {}));\n","\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexports.default = {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n","/* Generate a function that interpolates between edge weights of a UV square.\n\n  v\n  ^\n  | ┌──────D──────┐\n  | │             │\n  | A             C\n  | │             │\n  | └──────B──────┘\n -|------------------> u\n\n * @param {number} A - edge A weight.\n * @param {number} B - edge B weight.\n * @param {number} C - edge C weight.\n * @param {number} D - edge D weight.\n * @return {function: } an interpolation function.\n */\n\nconst product = (...a: any[][]) =>\n  a.reduce((a, b) => a.flatMap((d) => b.map((e) => [d, e].flat())));\n\nexport const uvGrid = (\n  uResolution: number,\n  vResolution: number | null = null\n) =>\n  product(\n    [...range(0, 1, 1 / uResolution), 1],\n    [...range(0, 1, 1 / (vResolution || uResolution)), 1]\n  );\n\nexport const quadEdgeWeightInterpolator =\n  (A: number, B: number, C: number, D: number, n = 1) =>\n  ([x, y]: number[]) => {\n    const z = 1 - x;\n    const w = 1 - y;\n    const e0 = y * z * w;\n    const e1 = x * z * w;\n    const e2 = x * y * w;\n    const e3 = x * y * z;\n    const sum = e0 + e1 + e2 + e3;\n\n    const c0 = A;\n    const c1 = B;\n    const c2 = C;\n    const c3 = D;\n\n    return (\n      ((e0 * c0) ** n + (e1 * c1) ** n + (e2 * c2) ** n + e3 * c3) / sum ** n\n    );\n  };\n\n/**\n * Generate a function that interpolates between edge weights of a triangle\n * in barycentric coordinates.\n * @param {number} A - edge A weight.\n * @param {number} B - edge B weight.\n * @param {number} C - edge C weight.\n * @return {function: } an interpolation function that takes barycentric coordinates.\n */\nexport const triEdgeWeightInterpolator =\n  (A: number, B: number, C: number, n = 1) =>\n  ([x, y, z]: number[]) => {\n    const e0 = y * z;\n    const e1 = x * z;\n    const e2 = x * y;\n    const sum = e0 + e1 + e2;\n\n    const c0 = A;\n    const c1 = B;\n    const c2 = C;\n\n    return ((e0 * c0) ** n + (e1 * c1) ** n + (e2 * c2) ** n) / sum ** n;\n  };\n\nimport { KdTreeSet } from \"@thi.ng/geom-accel\";\nimport { DensityFunction, samplePoisson } from \"@thi.ng/poisson\";\nimport { dist, divN2 } from \"@thi.ng/vectors\";\n// @ts-ignore\nimport barycentric from \"barycentric\";\nimport Delaunator from \"delaunator\";\nimport {\n  chunk,\n  isEqual,\n  mapKeys,\n  range,\n  sortedUniq,\n  uniq,\n  zip,\n} from \"lodash-es\";\nimport moize from \"moize\";\n\ntype Point3D = [number, number, number];\nconst cartesian = (bary: Point3D, corners: [Point2D, Point2D, Point2D]) => [\n  bary[0] * corners[0][0] + bary[1] * corners[1][0] + bary[2] * corners[2][0],\n  bary[0] * corners[0][1] + bary[1] * corners[1][1] + bary[2] * corners[2][1],\n];\n\ntype Point2D = [number, number];\n\nconst sampleTriangle = (corners: [Point2D, Point2D, Point2D]) => () => {\n  const u = [Math.random(), Math.random()];\n  const su0 = Math.sqrt(u[0]);\n  const b0 = 1 - su0;\n  const b1 = u[1] * su0;\n\n  const pt = cartesian([b0, b1, 1 - b0 - b1], corners);\n  return pt;\n};\n\nconst getRadiusTri =\n  (triangle: [Point2D, Point2D, Point2D], weights: [number, number, number]) =>\n  (pt: Point2D) => {\n    let bary = barycentric(triangle, pt);\n    const D = dist([0, 0], [0.5, 0.5]);\n    bary = [\n      divN2(null, bary[0], 1),\n      divN2(null, bary[1], D),\n      divN2(null, bary[2], D),\n    ];\n    const x = triEdgeWeightInterpolator(\n      weights[0],\n      weights[1],\n      weights[2]\n      // 0.45\n    )(bary);\n    // console.log(x, bary, pt, triangle, weights)\n    return 1 / x;\n  };\n\nconst defaultOptions = {\n  iter: 1,\n  jitter: 0.00001,\n  max: 3000000,\n  quality: 150,\n};\n\nexport const quadPatch = (\n  resA: number,\n  resB: number,\n  resC: number,\n  resD: number,\n  opts: object | null = null\n) => {\n  opts = { ...defaultOptions, ...(opts || {}) };\n  const index = new KdTreeSet(2);\n  const addPoint = (radius: number) => (x: number[]) =>\n    index.add(\n      x.map((x) => x * 1000),\n      radius\n    );\n\n  // add stitching points\n  for (let a = 0; a <= 1; a += 1 / resA) {\n    index.add([0, a]);\n  }\n  for (let b = 0; b <= 1; b += 1 / resB) {\n    index.add([b, 0]);\n  }\n  for (let c = 0; c <= 1; c += 1 / resC) {\n    index.add([1, c]);\n  }\n  for (let d = 0; d <= 1; d += 1 / resD) {\n    index.add([d, 1]);\n  }\n\n  const interpolation = (x: any) =>\n    1 / quadEdgeWeightInterpolator(resA, resB, resC, resD)(x);\n  const sample = () => {\n    const points = () => [Math.random(), Math.random()];\n    const density = interpolation as DensityFunction;\n    return samplePoisson({\n      index,\n      points,\n      density,\n      max: 0,\n      ...opts,\n    });\n  };\n  const boundaryPoints = index.keys();\n\n  const points = [\n    ...boundaryPoints, //\n    ...sample(),\n  ];\n\n  return { points, index };\n};\n\nexport const triPatch = (\n  resA: number,\n  resB: number,\n  resC: number,\n  opts: object | null = null\n) => {\n  opts = { ...defaultOptions, ...(opts || {}) };\n  const corners: [Point2D, Point2D, Point2D] = [\n    [0, 1],\n    [1, 0],\n    [0, 0],\n  ];\n\n  const index = new KdTreeSet(2);\n  const addPoint = (radius: number) => (x: number[]) =>\n    index.add(\n      x.map((x) => x * 1000),\n      radius\n    );\n\n  // add stitching points\n  for (let a = 0; a <= 1; a += 1 / resA) {\n    index.add([a, 0]);\n  }\n  for (let b = 0; b <= 1; b += 1 / resB) {\n    index.add([0, b]);\n  }\n  for (let c = 0; c <= 1; c += 1 / resC) {\n    index.add([1 - c, c]);\n  }\n\n  const interpolation = getRadiusTri(corners, [resA, resB, resC]);\n  const sampleTri = (\n    corners: [Point2D, Point2D, Point2D],\n    weights: [number, number, number]\n  ) => {\n    const points = sampleTriangle(corners);\n    const density = interpolation as DensityFunction;\n    return samplePoisson({\n      index,\n      points,\n      density,\n      max: 0,\n      ...opts,\n    });\n  };\n  const boundaryPoints = index.keys();\n\n  const points = [\n    ...boundaryPoints, //\n    ...sampleTri(corners, [resA, resB, resC]),\n  ];\n\n  return { points, index };\n};\n\nexport type triResolutions = [number, number, number];\nexport type quadResolutions = [number, number, number, number];\nexport type patchResolutions = triResolutions | quadResolutions;\n\nexport const tessellation = (sideLODs: number | patchResolutions = 8) => {\n  let points;\n  if (Array.isArray(sideLODs)) {\n    sideLODs = sideLODs as patchResolutions;\n    points = (\n      sideLODs.length === 4\n        ? quadPatch(...(sideLODs as quadResolutions))\n        : triPatch(...(sideLODs as triResolutions))\n    ).points; // uvGrid(resolution)\n  } else {\n    points = triPatch(sideLODs, sideLODs, sideLODs).points;\n  }\n  return Delaunator.from(points);\n};\n\ninterface mesh {\n  cells: number[][];\n  positions: number[][];\n  normals: number[][];\n}\n\n// @ts-ignore\nimport normals from \"angle-normals\";\n// @ts-ignore\nimport MDA from \"mda\";\n// import top from 'simplicial-complex';\n// import mergeVertices from \"merge-vertices\";\n\nexport const prepareMesh = (grid: any, includeMda = true) => {\n  let mesh: mesh | any = {};\n  const cells = chunk(grid.triangles, 3);\n  const positions = chunk(grid.coords, 2).map(([u, v]) => [\n    u,\n    v,\n    0,\n  ]) as number[][];\n  // mesh = mergeVertices(mesh.cells, mesh.positions)\n  // top.normalize(mesh.cells)\n  // mesh.incidence = top.incidence(mesh.cells, mesh.cells)\n  const M = new MDA.Mesh();\n  M.setPositions(positions);\n  M.setCells(cells);\n  M.process();\n  mesh.cells = M.getCells();\n  mesh.positions = M.getPositions();\n  mesh.normals = normals(mesh.cells, mesh.positions);\n  mesh.cellPositions = mesh.cells.map((indices: number[]) =>\n    indices.map((i) => mesh.positions[i])\n  );\n  mesh.cellNormals = mesh.cells.map((indices: number[]) =>\n    indices.map((i) => mesh.normals[i])\n  );\n  \n  if(includeMda){\n    mesh.mda = M;\n  }\n  // console.log('mesh', mesh)\n  return mesh;\n};\n\nexport function tessellationMesh(sideLODs: number | patchResolutions){\n  const mesh = prepareMesh(tessellation(sideLODs), false);\n  return mesh\n}\n","export * from \"./kd-tree-map.js\";\nexport * from \"./kd-tree-set.js\";\nexport * from \"./nd-quadtree-map.js\";\nexport * from \"./nd-quadtree-set.js\";\nexport * from \"./spatial-grid2.js\";\nexport * from \"./spatial-grid3.js\";\n","import { ensureArray } from \"@thi.ng/arrays/ensure-array\";\nimport { Heap } from \"@thi.ng/heaps/heap\";\nimport { EPS } from \"@thi.ng/math/api\";\nimport { map } from \"@thi.ng/transducers/map\";\nimport { distSq } from \"@thi.ng/vectors/distsq\";\nimport { addResults, CMP, into } from \"./utils.js\";\nexport class KdNode {\n    constructor(parent, dim, key, val) {\n        this.parent = parent;\n        this.d = dim;\n        this.k = key;\n        this.v = val;\n    }\n    get height() {\n        return (1 + Math.max(this.l ? this.l.height : 0, this.r ? this.r.height : 0));\n    }\n}\n/**\n * {@link https://en.wikipedia.org/wiki/K-d_tree}\n *\n * Partially based on:\n * {@link https://github.com/ubilabs/kd-tree-javascript}\n *\n */\nexport class KdTreeMap {\n    constructor(dim, pairs) {\n        this.dim = dim;\n        this._size = 0;\n        this.root = pairs ? this.buildTree(ensureArray(pairs), 0) : undefined;\n    }\n    *[Symbol.iterator]() {\n        let queue = this.root ? [this.root] : [];\n        while (queue.length) {\n            const n = queue.pop();\n            if (n) {\n                yield [n.k, n.v];\n                queue.push(n.r, n.l);\n            }\n        }\n    }\n    *keys() {\n        let queue = this.root ? [this.root] : [];\n        while (queue.length) {\n            const n = queue.pop();\n            if (n) {\n                yield n.k;\n                queue.push(n.r, n.l);\n            }\n        }\n    }\n    values() {\n        return map((p) => p[1], this);\n    }\n    get size() {\n        return this._size;\n    }\n    get height() {\n        return this.root ? this.root.height : 0;\n    }\n    get ratio() {\n        return this._size ? this.height / Math.log2(this._size) : 0;\n    }\n    copy() {\n        return new KdTreeMap(this.dim, this);\n    }\n    clear() {\n        delete this.root;\n        this._size = 0;\n    }\n    empty() {\n        return new KdTreeMap(this.dim);\n    }\n    set(key, val, eps = EPS) {\n        eps = Math.max(0, eps);\n        eps *= eps;\n        const search = (node, parent) => node\n            ? search(key[node.d] < node.k[node.d] ? node.l : node.r, node)\n            : parent;\n        let parent;\n        if (this.root) {\n            parent = nearest1(key, [eps, undefined], this.dim, this.root)[1];\n            if (parent) {\n                parent.v = val;\n                return false;\n            }\n            parent = search(this.root, undefined);\n            const dim = parent.d;\n            parent[key[dim] < parent.k[dim] ? \"l\" : \"r\"] = new KdNode(parent, (dim + 1) % this.dim, key, val);\n        }\n        else {\n            this.root = new KdNode(undefined, 0, key, val);\n        }\n        this._size++;\n        return true;\n    }\n    into(pairs, eps = EPS) {\n        return into(this, pairs, eps);\n    }\n    remove(key) {\n        const node = find(key, this.root, 0);\n        if (node) {\n            remove(node) && (this.root = undefined);\n            this._size--;\n            return true;\n        }\n        return false;\n    }\n    has(key, eps = EPS) {\n        return (!!this.root &&\n            !!nearest1(key, [eps * eps, undefined], this.dim, this.root)[1]);\n    }\n    get(key, eps = EPS) {\n        if (this.root) {\n            const node = nearest1(key, [eps * eps, undefined], this.dim, this.root)[1];\n            return node ? node.v : undefined;\n        }\n    }\n    query(q, maxDist, limit, acc) {\n        return this.doSelect(q, (x) => [x.k, x.v], maxDist, limit, acc);\n    }\n    queryKeys(q, maxDist, limit, acc) {\n        return this.doSelect(q, (x) => x.k, maxDist, limit, acc);\n    }\n    queryValues(q, maxDist, limit, acc) {\n        return this.doSelect(q, (x) => x.v, maxDist, limit, acc);\n    }\n    doSelect(q, f, maxDist, maxNum = 1, acc = []) {\n        if (!this.root)\n            return [];\n        maxDist *= maxDist;\n        if (maxNum === 1) {\n            const sel = nearest1(q, [maxDist, undefined], this.dim, this.root)[1];\n            sel && acc.push(f(sel));\n        }\n        else {\n            const nodes = new Heap([[maxDist, undefined]], {\n                compare: CMP,\n            });\n            nearest(q, nodes, this.dim, maxNum, this.root);\n            return addResults(f, nodes.values, acc);\n        }\n        return acc;\n    }\n    buildTree(points, depth, parent) {\n        const n = points.length;\n        if (n === 0) {\n            return;\n        }\n        this._size++;\n        let dim = depth % this.dim;\n        if (n === 1) {\n            return new KdNode(parent, dim, ...points[0]);\n        }\n        points.sort((a, b) => a[0][dim] - b[0][dim]);\n        const med = n >>> 1;\n        const node = new KdNode(parent, dim, ...points[med]);\n        node.l = this.buildTree(points.slice(0, med), depth + 1, node);\n        node.r = this.buildTree(points.slice(med + 1), depth + 1, node);\n        return node;\n    }\n}\n/**\n * Returns node for point or `undefined` if none found.\n *\n * @param p - point\n * @param node - tree node\n * @param epsSq - squared epsilon / tolerance\n */\nconst find = (p, node, epsSq) => {\n    if (!node)\n        return;\n    return distSq(p, node.k) <= epsSq\n        ? node\n        : find(p, p[node.d] < node.k[node.d] ? node.l : node.r, epsSq);\n};\nconst findMin = (node, dim) => {\n    if (!node)\n        return;\n    if (node.d === dim) {\n        return node.l ? findMin(node.l, dim) : node;\n    }\n    const q = node.k[dim];\n    const l = findMin(node.l, dim);\n    const r = findMin(node.r, dim);\n    let min = node;\n    if (l && l.k[dim] < q) {\n        min = l;\n    }\n    if (r && r.k[dim] < min.k[dim]) {\n        min = r;\n    }\n    return min;\n};\n/**\n * Returns true if root is to be deleted.\n *\n * @param node - tree node\n */\nconst remove = (node) => {\n    if (!node.l && !node.r) {\n        if (!node.parent) {\n            return true;\n        }\n        const parent = node.parent;\n        const pdim = parent.d;\n        parent[node.k[pdim] < parent.k[pdim] ? \"l\" : \"r\"] = undefined;\n        return;\n    }\n    let next;\n    let nextP;\n    if (node.r) {\n        next = findMin(node.r, node.d);\n        nextP = next.k;\n        remove(next);\n        node.k = nextP;\n    }\n    else {\n        next = findMin(node.l, node.d);\n        nextP = next.k;\n        remove(next);\n        node.r = node.l;\n        node.l = undefined;\n        node.k = nextP;\n    }\n};\nconst nearest = (q, acc, dims, maxNum, node) => {\n    const p = node.k;\n    const ndist = distSq(p, q);\n    if (!node.l && !node.r) {\n        collect(acc, maxNum, node, ndist);\n        return;\n    }\n    const tdist = nodeDist(node, dims, q, p);\n    let best = bestChild(node, q);\n    nearest(q, acc, dims, maxNum, best);\n    collect(acc, maxNum, node, ndist);\n    if (tdist < acc.values[0][0]) {\n        best = best === node.l ? node.r : node.l;\n        best && nearest(q, acc, dims, maxNum, best);\n    }\n};\n/**\n * Optimized version of {@link nearest} for single closest point search.\n *\n * @param q - search point\n * @param acc - accumulator\n * @param dims - dimensions\n * @param node - tree node\n */\nconst nearest1 = (q, acc, dims, node) => {\n    const p = node.k;\n    const ndist = distSq(p, q);\n    if (!node.l && !node.r) {\n        collect1(acc, node, ndist);\n        return acc;\n    }\n    const tdist = nodeDist(node, dims, q, p);\n    let best = bestChild(node, q);\n    nearest1(q, acc, dims, best);\n    collect1(acc, node, ndist);\n    if (tdist < acc[0]) {\n        best = best === node.l ? node.r : node.l;\n        best && nearest1(q, acc, dims, best);\n    }\n    return acc;\n};\nconst bestChild = (node, q) => {\n    const d = node.d;\n    return !node.r\n        ? node.l\n        : !node.l\n            ? node.r\n            : q[d] < node.k[d]\n                ? node.l\n                : node.r;\n};\nconst collect = (acc, maxNum, node, ndist) => (!acc.length || ndist < acc.peek()[0]) &&\n    (acc.length >= maxNum\n        ? acc.pushPop([ndist, node])\n        : acc.push([ndist, node]));\nconst collect1 = (acc, node, ndist) => ndist < acc[0] && ((acc[0] = ndist), (acc[1] = node));\nconst TMP = [];\nconst nodeDist = (node, dims, q, p) => {\n    for (let i = dims, d = node.d; i-- > 0;) {\n        TMP[i] = i === d ? q[i] : p[i];\n    }\n    return distSq(TMP, p);\n};\n","import { isArray } from \"@thi.ng/checks/is-array\";\nimport { isArrayLike } from \"@thi.ng/checks/is-arraylike\";\nimport { ensureIterable } from \"./ensure-iterable.js\";\n/**\n * Helper function to avoid unnecessary copying if `x` is already an\n * array.\n *\n * @remarks\n * First checks if `x` is an array and if so returns it. Else attempts\n * to obtain an iterator from `x` and if successful collects it as array\n * and returns it. Throws error if `x` isn't iterable.\n *\n * @param x -\n */\nexport const ensureArray = (x) => isArray(x) ? x : [...ensureIterable(x)];\n/**\n * Similar to {@link ensureArray}, but for `ArrayLike` types.\n *\n * {@link ensureArray}\n *\n * @param x -\n */\nexport const ensureArrayLike = (x) => isArrayLike(x) ? x : [...ensureIterable(x)];\n","export const isArray = Array.isArray;\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","export const isArrayLike = (x) => x != null && typeof x !== \"function\" && x.length !== undefined;\n","import { illegalArgs } from \"@thi.ng/errors/illegal-arguments\";\n/**\n * Attempts to obtain an iterator from `x` and throws error if `x` is\n * not iterable.\n *\n * @param x -\n */\nexport const ensureIterable = (x) => {\n    (x == null || !x[Symbol.iterator]) &&\n        illegalArgs(`value is not iterable: ${x}`);\n    return x;\n};\n","import { defError } from \"./deferror.js\";\nexport const IllegalArgumentError = defError(() => \"illegal argument(s)\");\nexport const illegalArgs = (msg) => {\n    throw new IllegalArgumentError(msg);\n};\n","export const defError = (prefix, suffix = (msg) => (msg !== undefined ? \": \" + msg : \"\")) => class extends Error {\n    constructor(msg) {\n        super(prefix(msg) + suffix(msg));\n    }\n};\n","import { compare } from \"@thi.ng/compare/compare\";\nimport { equiv } from \"@thi.ng/equiv\";\nexport const defHeap = (values, opts) => new Heap(values, opts);\n/**\n * Generic binary heap / priority queue with customizable ordering via\n * user-supplied comparator. By default, implements min-heap ordering\n * and uses @thi.ng/compare.\n *\n * @example\n * ```ts\n * h = new Heap([20, 5, 10]);\n * h.push(15);\n *\n * h.pop(); // 5\n * h.pop(); // 10\n * h.pop(); // 15\n * h.pop(); // 20\n * h.pop(); // undefined\n * ```\n */\nexport class Heap {\n    constructor(values, opts) {\n        opts = { compare, equiv, ...opts };\n        this.compare = opts.compare;\n        this.equiv = opts.equiv;\n        this.values = [];\n        if (values) {\n            this.into(values);\n        }\n    }\n    static parentIndex(idx) {\n        return idx > 0 ? (idx - 1) >> 1 : -1;\n    }\n    static childIndex(idx) {\n        return idx >= 0 ? (idx << 1) + 1 : -1;\n    }\n    *[Symbol.iterator]() {\n        yield* this.min();\n    }\n    get length() {\n        return this.values.length;\n    }\n    copy() {\n        const h = this.empty();\n        h.values = this.values.slice();\n        return h;\n    }\n    clear() {\n        this.values.length = 0;\n    }\n    empty() {\n        return new Heap(null, { compare: this.compare });\n    }\n    peek() {\n        return this.values[0];\n    }\n    push(val) {\n        this.values.push(val);\n        this.percolateUp(this.values.length - 1);\n        return this;\n    }\n    pop() {\n        const vals = this.values;\n        const tail = vals.pop();\n        let res;\n        if (vals.length > 0) {\n            res = vals[0];\n            vals[0] = tail;\n            this.percolateDown(0);\n        }\n        else {\n            res = tail;\n        }\n        return res;\n    }\n    pushPop(val, vals = this.values) {\n        const head = vals[0];\n        if (vals.length > 0 && this.compare(head, val) <= 0) {\n            vals[0] = val;\n            val = head;\n            this.percolateDown(0, vals);\n        }\n        return val;\n    }\n    into(vals) {\n        for (let v of vals) {\n            this.push(v);\n        }\n        return this;\n    }\n    /**\n     * Calls {@link Heap.pushPop} for each given value in `vals` and\n     * returns last result (i.e. the smallest value in heap after\n     * processing all `vals`).\n     *\n     * @param vals - values to insert\n     */\n    pushPopAll(vals) {\n        let res;\n        for (let v of vals) {\n            res = this.pushPop(v);\n        }\n        return res;\n    }\n    replaceHead(val) {\n        const res = this.values[0];\n        this.values[0] = val;\n        this.percolateDown(0);\n        return res;\n    }\n    remove(val) {\n        const { values, equiv } = this;\n        for (let i = values.length; i-- > 0;) {\n            if (equiv(values[i], val)) {\n                this.values.splice(i, 1);\n                this.heapify();\n                return true;\n            }\n        }\n        return false;\n    }\n    find(val) {\n        const { values, equiv } = this;\n        for (let i = values.length; i-- > 0;) {\n            if (equiv(values[i], val)) {\n                return values[i];\n            }\n        }\n    }\n    findWith(pred) {\n        const values = this.values;\n        for (let i = values.length; i-- > 0;) {\n            if (pred(values[i]))\n                return values[i];\n        }\n    }\n    has(val) {\n        return this.find(val) !== undefined;\n    }\n    heapify(vals = this.values) {\n        for (let i = (vals.length - 1) >> 1; i >= 0; i--) {\n            this.percolateDown(i, vals);\n        }\n    }\n    /**\n     * Returns the largest `n` values (or less) in heap, based on\n     * comparator ordering.\n     *\n     * @param n - number of values\n     */\n    max(n = this.values.length) {\n        const { compare, values } = this;\n        const res = values.slice(0, n);\n        if (!n) {\n            return res;\n        }\n        this.heapify(res);\n        for (let m = values.length; n < m; n++) {\n            this.pushPop(values[n], res);\n        }\n        return res.sort((a, b) => compare(b, a));\n    }\n    /**\n     * Returns the smallest `n` values (or less) in heap, based on\n     * comparator ordering.\n     *\n     * @param n - number of values\n     */\n    min(n = this.values.length) {\n        const { compare, values } = this;\n        const res = values.slice(0, n).sort(compare);\n        if (!n) {\n            return res;\n        }\n        let x = res[n - 1], y;\n        for (let i = n, m = values.length; i < m; i++) {\n            y = values[i];\n            if (compare(y, x) < 0) {\n                res.splice(binarySearch(y, res, 0, n, compare), 0, y);\n                res.pop();\n                x = res[n - 1];\n            }\n        }\n        return res;\n    }\n    parent(n) {\n        n = Heap.parentIndex(n);\n        return n >= 0 ? this.values[n] : undefined;\n    }\n    children(n) {\n        n = Heap.childIndex(n);\n        const vals = this.values;\n        const m = vals.length;\n        if (n >= m)\n            return;\n        if (n === m - 1)\n            return [vals[n]];\n        return [vals[n], vals[n + 1]];\n    }\n    leaves() {\n        const vals = this.values;\n        if (!vals.length) {\n            return [];\n        }\n        return vals.slice(Heap.parentIndex(vals.length - 1) + 1);\n    }\n    percolateUp(i, vals = this.values) {\n        const node = vals[i];\n        const cmp = this.compare;\n        while (i > 0) {\n            const pi = (i - 1) >> 1;\n            const parent = vals[pi];\n            if (cmp(node, parent) >= 0) {\n                break;\n            }\n            vals[pi] = node;\n            vals[i] = parent;\n            i = pi;\n        }\n    }\n    percolateDown(i, vals = this.values) {\n        const n = vals.length;\n        const node = vals[i];\n        const cmp = this.compare;\n        let child = (i << 1) + 1;\n        while (child < n) {\n            const next = child + 1;\n            if (next < n && cmp(vals[child], vals[next]) >= 0) {\n                child = next;\n            }\n            if (cmp(vals[child], node) < 0) {\n                vals[i] = vals[child];\n            }\n            else {\n                break;\n            }\n            i = child;\n            child = (i << 1) + 1;\n        }\n        vals[i] = node;\n    }\n}\nconst binarySearch = (x, vals, lo, hi, cmp) => {\n    let m;\n    while (lo < hi) {\n        m = (lo + hi) >>> 1;\n        if (cmp(x, vals[m]) < 0) {\n            hi = m;\n        }\n        else {\n            lo = m + 1;\n        }\n    }\n    return lo;\n};\n","export const compare = (a, b) => {\n    if (a === b) {\n        return 0;\n    }\n    if (a == null) {\n        return b == null ? 0 : -1;\n    }\n    if (b == null) {\n        return a == null ? 0 : 1;\n    }\n    if (typeof a.compare === \"function\") {\n        return a.compare(b);\n    }\n    if (typeof b.compare === \"function\") {\n        return -b.compare(a);\n    }\n    return a < b ? -1 : a > b ? 1 : 0;\n};\n","const OBJP = Object.getPrototypeOf({});\nconst FN = \"function\";\nconst STR = \"string\";\nexport const equiv = (a, b) => {\n    let proto;\n    if (a === b) {\n        return true;\n    }\n    if (a != null) {\n        if (typeof a.equiv === FN) {\n            return a.equiv(b);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (b != null) {\n        if (typeof b.equiv === FN) {\n            return b.equiv(a);\n        }\n    }\n    else {\n        return a == b;\n    }\n    if (typeof a === STR || typeof b === STR) {\n        return false;\n    }\n    if (((proto = Object.getPrototypeOf(a)), proto == null || proto === OBJP) &&\n        ((proto = Object.getPrototypeOf(b)), proto == null || proto === OBJP)) {\n        return equivObject(a, b);\n    }\n    if (typeof a !== FN &&\n        a.length !== undefined &&\n        typeof b !== FN &&\n        b.length !== undefined) {\n        return equivArrayLike(a, b);\n    }\n    if (a instanceof Set && b instanceof Set) {\n        return equivSet(a, b);\n    }\n    if (a instanceof Map && b instanceof Map) {\n        return equivMap(a, b);\n    }\n    if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime();\n    }\n    if (a instanceof RegExp && b instanceof RegExp) {\n        return a.toString() === b.toString();\n    }\n    // NaN\n    return a !== a && b !== b;\n};\nexport const equivArrayLike = (a, b, _equiv = equiv) => {\n    let l = a.length;\n    if (l === b.length) {\n        while (l-- > 0 && _equiv(a[l], b[l]))\n            ;\n    }\n    return l < 0;\n};\nexport const equivSet = (a, b, _equiv = equiv) => a.size === b.size && _equiv([...a.keys()].sort(), [...b.keys()].sort());\nexport const equivMap = (a, b, _equiv = equiv) => a.size === b.size && _equiv([...a].sort(), [...b].sort());\nexport const equivObject = (a, b, _equiv = equiv) => {\n    if (Object.keys(a).length !== Object.keys(b).length) {\n        return false;\n    }\n    for (let k in a) {\n        if (!b.hasOwnProperty(k) || !_equiv(a[k], b[k])) {\n            return false;\n        }\n    }\n    return true;\n};\n","export const PI = Math.PI;\nexport const TAU = PI * 2;\nexport const HALF_PI = PI / 2;\nexport const THIRD_PI = PI / 3;\nexport const QUARTER_PI = PI / 4;\nexport const SIXTH_PI = PI / 6;\nexport const INV_PI = 1 / PI;\nexport const INV_TAU = 1 / TAU;\nexport const INV_HALF_PI = 1 / HALF_PI;\nexport const DEG2RAD = PI / 180;\nexport const RAD2DEG = 180 / PI;\nexport const PHI = (1 + Math.sqrt(5)) / 2;\nexport const SQRT2 = Math.SQRT2;\nexport const SQRT3 = Math.sqrt(3);\nexport const SQRT2_2 = SQRT2 / 2;\nexport const SQRT3_2 = SQRT3 / 2;\nexport const THIRD = 1 / 3;\nexport const TWO_THIRD = 2 / 3;\nexport const SIXTH = 1 / 6;\nexport let EPS = 1e-6;\n","import { isIterable } from \"@thi.ng/checks/is-iterable\";\nimport { compR } from \"./compr.js\";\nimport { iterator1 } from \"./iterator.js\";\nexport function map(fn, src) {\n    return isIterable(src)\n        ? iterator1(map(fn), src)\n        : (rfn) => {\n            const r = rfn[2];\n            return compR(rfn, (acc, x) => r(acc, fn(x)));\n        };\n}\n/**\n * Convenience wrapper for {@link map} to transform an iterable with given `fn`\n * and immediatedly collect results into an array.\n */\nexport const mapA = (fn, src) => [\n    ...map(fn, src),\n];\n","export const isIterable = (x) => x != null && typeof x[Symbol.iterator] === \"function\";\n","/**\n * Reducer composition helper, internally used by various transducers\n * during initialization. Takes existing reducer `rfn` (a 3-tuple) and a\n * reducing function `fn`. Returns a new reducer tuple.\n *\n * @remarks\n * `rfn[2]` reduces values of type `B` into an accumulator of type `A`.\n * `fn` accepts values of type `C` and produces interim results of type\n * `B`, which are then (possibly) passed to the \"inner\" `rfn[2]`\n * function. Therefore the resulting reducer takes inputs of `C` and an\n * accumulator of type `A`.\n *\n * It is assumed that `fn` internally calls `rfn[2]` to pass its own\n * results for further processing by the nested reducer `rfn`.\n *\n * @example\n * ```ts\n * compR(rfn, fn)\n * // [rfn[0], rfn[1], fn]\n * ```\n *\n * @param rfn -\n * @param fn -\n */\nexport const compR = (rfn, fn) => [rfn[0], rfn[1], fn];\n","import { NO_OP, SEMAPHORE } from \"@thi.ng/api/api\";\nimport { isIterable } from \"@thi.ng/checks/is-iterable\";\nimport { ensureTransducer } from \"./ensure.js\";\nimport { push } from \"./push.js\";\nimport { isReduced, unreduced } from \"./reduced.js\";\n/**\n * Takes a transducer and input iterable. Returns iterator of\n * transformed results.\n *\n * @param xform -\n * @param xs -\n */\nexport function* iterator(xform, xs) {\n    const rfn = ensureTransducer(xform)(push());\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    for (let x of xs) {\n        const y = reduce([], x);\n        if (isReduced(y)) {\n            yield* unreduced(complete(y.deref()));\n            return;\n        }\n        if (y.length) {\n            yield* y;\n        }\n    }\n    yield* unreduced(complete([]));\n}\n/**\n * Optimized version of {@link iterator} for transducers which are\n * guaranteed to:\n *\n * 1) Only produce none or a single result per input\n * 2) Do not require a `completion` reduction step\n *\n * @param xform -\n * @param xs -\n */\nexport function* iterator1(xform, xs) {\n    const reduce = (ensureTransducer(xform)([NO_OP, NO_OP, (_, x) => x]))[2];\n    for (let x of xs) {\n        let y = reduce(SEMAPHORE, x);\n        if (isReduced(y)) {\n            y = unreduced(y.deref());\n            if (y !== SEMAPHORE) {\n                yield y;\n            }\n            return;\n        }\n        if (y !== SEMAPHORE) {\n            yield y;\n        }\n    }\n}\n/**\n * Helper function used by various transducers to wrap themselves as\n * transforming iterators. Delegates to {@link iterator1} by default.\n *\n * @param xform -\n * @param args -\n * @param impl -\n *\n * @internal\n */\nexport const __iter = (xform, args, impl = iterator1) => {\n    const n = args.length - 1;\n    return isIterable(args[n])\n        ? args.length > 1\n            ? impl(xform.apply(null, args.slice(0, n)), args[n])\n            : impl(xform(), args[0])\n        : undefined;\n};\n","export const DEFAULT_EPS = 1e-6;\n/**\n * Internal use only. **Do NOT use in user land code!**\n *\n * @internal\n */\nexport const SEMAPHORE = Symbol();\n/**\n * No-effect placeholder function.\n */\nexport const NO_OP = () => { };\n/**\n * Catch-all event ID\n */\nexport const EVENT_ALL = \"*\";\nexport const EVENT_ENABLE = \"enable\";\nexport const EVENT_DISABLE = \"disable\";\n","import { implementsFunction } from \"@thi.ng/checks/implements-function\";\nexport const ensureTransducer = (x) => implementsFunction(x, \"xform\") ? x.xform() : x;\n","export const implementsFunction = (x, fn) => x != null && typeof x[fn] === \"function\";\n","import { reducer } from \"./reduce.js\";\nexport function push(xs) {\n    return xs\n        ? [...xs]\n        : reducer(() => [], (acc, x) => (acc.push(x), acc));\n}\n","import { implementsFunction } from \"@thi.ng/checks/implements-function\";\nimport { isArrayLike } from \"@thi.ng/checks/is-arraylike\";\nimport { isIterable } from \"@thi.ng/checks/is-iterable\";\nimport { illegalArity } from \"@thi.ng/errors/illegal-arity\";\nimport { isReduced, unreduced } from \"./reduced.js\";\nconst parseArgs = (args) => args.length === 2\n    ? [undefined, args[1]]\n    : args.length === 3\n        ? [args[1], args[2]]\n        : illegalArity(args.length);\nexport function reduce(...args) {\n    const rfn = args[0];\n    const init = rfn[0];\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    args = parseArgs(args);\n    const acc = args[0] == null ? init() : args[0];\n    const xs = args[1];\n    return unreduced(complete(implementsFunction(xs, \"$reduce\")\n        ? xs.$reduce(reduce, acc)\n        : isArrayLike(xs)\n            ? reduceArray(reduce, acc, xs)\n            : reduceIterable(reduce, acc, xs)));\n}\nexport function reduceRight(...args) {\n    const rfn = args[0];\n    const init = rfn[0];\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    args = parseArgs(args);\n    let acc = args[0] == null ? init() : args[0];\n    const xs = args[1];\n    for (let i = xs.length; i-- > 0;) {\n        acc = reduce(acc, xs[i]);\n        if (isReduced(acc)) {\n            acc = acc.deref();\n            break;\n        }\n    }\n    return unreduced(complete(acc));\n}\nconst reduceArray = (rfn, acc, xs) => {\n    for (let i = 0, n = xs.length; i < n; i++) {\n        acc = rfn(acc, xs[i]);\n        if (isReduced(acc)) {\n            acc = acc.deref();\n            break;\n        }\n    }\n    return acc;\n};\nconst reduceIterable = (rfn, acc, xs) => {\n    for (let x of xs) {\n        acc = rfn(acc, x);\n        if (isReduced(acc)) {\n            acc = acc.deref();\n            break;\n        }\n    }\n    return acc;\n};\n/**\n * Convenience helper for building a full {@link Reducer} using the identity\n * function (i.e. `(x) => x`) as completion step (true for 90% of all\n * bundled transducers).\n *\n * @param init - init step of reducer\n * @param rfn - reduction step of reducer\n */\nexport const reducer = (init, rfn) => [init, (acc) => acc, rfn];\nexport const $$reduce = (rfn, args) => {\n    const n = args.length - 1;\n    return isIterable(args[n])\n        ? args.length > 1\n            ? reduce(rfn.apply(null, args.slice(0, n)), args[n])\n            : reduce(rfn(), args[0])\n        : undefined;\n};\n","import { defError } from \"./deferror.js\";\nexport const IllegalArityError = defError(() => \"illegal arity\");\nexport const illegalArity = (n) => {\n    throw new IllegalArityError(n);\n};\n","export class Reduced {\n    constructor(val) {\n        this.value = val;\n    }\n    deref() {\n        return this.value;\n    }\n}\nexport const reduced = (x) => new Reduced(x);\nexport const isReduced = (x) => x instanceof Reduced;\nexport const ensureReduced = (x) => x instanceof Reduced ? x : new Reduced(x);\nexport const unreduced = (x) => (x instanceof Reduced ? x.deref() : x);\n","import { compile, compileG } from \"./compile/emit.js\";\nimport { vop } from \"./vop.js\";\nconst tpl = ([a, b]) => `t=${a}-${b};s+=t*t;`;\nconst pre = \"let t,s=0;\";\nconst $ = (dim) => distSq.add(dim, compile(dim, tpl, \"a,b\", undefined, \"s\", \"\", pre));\nexport const distSq = vop();\ndistSq.default(compileG(tpl, \"a,b\", undefined, \"s\", pre));\nexport const distSq2 = $(2);\nexport const distSq3 = $(3);\nexport const distSq4 = $(4);\n","import { comp } from \"@thi.ng/transducers/comp\";\nimport { map } from \"@thi.ng/transducers/map\";\nimport { mapIndexed } from \"@thi.ng/transducers/map-indexed\";\nimport { range } from \"@thi.ng/transducers/range\";\nimport { str } from \"@thi.ng/transducers/str\";\nimport { take } from \"@thi.ng/transducers/take\";\nimport { transduce } from \"@thi.ng/transducers/transduce\";\nimport { zip } from \"@thi.ng/transducers/zip\";\nimport { vop } from \"../vop.js\";\nimport { ARGS_V, ARGS_VN, ARGS_VV, DEFAULT_OUT, FN, MATH, MATH_N, SARGS_VV, SIGNED, SIGNED_N, UNSIGNED, UNSIGNED_N, } from \"./templates.js\";\n/**\n * HOF array index lookup gen to provide optimized versions of:\n *\n * @example\n * ```ts\n * lookup(\"a\")(0) // a[ia]\n * lookup(\"a\")(1) // a[ia * sa]\n * lookup(\"a\")(2) // a[ia + 2 * sa]\n * ```\n *\n * @param sym -\n */\nconst lookup = (sym) => (i) => i > 1\n    ? `${sym}[i${sym}+${i}*s${sym}]`\n    : i == 1\n        ? `${sym}[i${sym}+s${sym}]`\n        : `${sym}[i${sym}]`;\n/**\n * Infinite iterator of strided index lookups for `sym`.\n *\n * @param sym -\n */\nconst indicesStrided = (sym) => map(lookup(sym), range());\n/**\n * Infinite iterator of simple (non-strided) index lookups for `sym`.\n *\n * @param sym -\n */\nconst indices = (sym) => map((i) => `${sym}[${i}]`, range());\n/**\n * Code generator for loop-unrolled vector operations. Takes a vector\n * size `dim`, a code template function `tpl` and an array of symbol\n * names participating in the template. For each symbol, creates\n * iterator of index lookups (e.g. `a[0]` or `a[ia+k*sa]`), forms them\n * into tuples and passes them to template to generate code and joins\n * generated result with `opJoin` separator (default:\n * `\"\"`).\n *\n * If the optional `ret` arg is not `null` (default `\"a\"`), appends a\n * `return` statement to the result array, using `ret` as return value.\n * Returns array of source code lines.\n *\n * The optional `pre` and `post` strings can be used to wrap the\n * generated code. `post` will be injected **before** the generated\n * return statement (if not suppressed).\n *\n * @param dim -\n * @param tpl -\n * @param syms -\n * @param ret -\n * @param opJoin -\n * @param pre -\n * @param post -\n * @param strided -\n */\nconst assemble = (dim, tpl, syms, ret = \"a\", opJoin = \"\", pre = \"\", post = \"\", strided = false) => [\n    pre,\n    transduce(comp(take(dim), mapIndexed((i, x) => tpl(x, i))), str(opJoin), (zip.apply(null, syms.split(\",\").map(strided ? indicesStrided : indices)))),\n    post,\n    ret !== \"\" ? `return ${ret};` : \"\",\n];\nconst assembleG = (tpl, syms, ret = \"a\", pre, post, strided = false) => [\n    pre,\n    \"for(let i=a.length;--i>=0;) {\",\n    tpl(syms\n        .split(\",\")\n        .map(strided ? (x) => `${x}[i${x}+i*s${x}]` : (x) => `${x}[i]`)),\n    \"}\",\n    post,\n    ret !== null ? `return ${ret};` : \"\",\n];\nconst assembleS = (tpl, syms = ARGS_VV, ret = \"o\", pre = DEFAULT_OUT, post) => [\n    pre,\n    \"while(k-->0) {\",\n    tpl(syms.split(\",\").map((x) => `${x}[i${x}+k*s${x}]`)),\n    \"}\",\n    post,\n    ret !== null ? `return ${ret};` : \"\",\n];\n/** @internal */\nexport const defaultOut = (o, args) => `!${o} && (${o}=${args.split(\",\")[1]});`;\n/** @internal */\nexport const compile = (dim, tpl, args, syms = args, ret = \"a\", opJoin, pre, post, strided = false) => (new Function(args, assemble(dim, tpl, syms, ret, opJoin, pre, post, strided).join(\"\")));\n/** @internal */\nexport const compileHOF = (dim, fns, tpl, hofArgs, args, syms = args, ret = \"a\", opJoin = \"\", pre, post, strided = false) => {\n    return new Function(hofArgs, `return (${args})=>{${assemble(dim, tpl, syms, ret, opJoin, pre, post, strided).join(\"\")}}`)(...fns);\n};\n/** @internal */\nexport const compileG = (tpl, args, syms = args, ret = \"a\", pre, post, strided = false) => (new Function(args, assembleG(tpl, syms, ret, pre, post, strided).join(\"\")));\n/** @internal */\nexport const compileS = (tpl, args, syms = args, ret, pre, post) => new Function(args, assembleS(tpl, syms, ret, pre, post).join(\"\"));\n/** @internal */\nexport const compileGHOF = (fns, tpl, hofArgs, args, syms = args, ret = \"a\", pre, post, strided = false) => (new Function(hofArgs, `return (${args})=>{${assembleG(tpl, syms, ret, pre, post, strided).join(\"\")}}`)(...fns));\nexport const defOp = (tpl, args = ARGS_VV, syms, ret = \"o\", dispatch = 1, pre) => {\n    syms = syms || args;\n    pre = pre != null ? pre : defaultOut(ret, args);\n    const fn = vop(dispatch);\n    const $ = (dim) => fn.add(dim, compile(dim, tpl, args, syms, ret, \"\", pre));\n    fn.default(compileG(tpl, args, syms, ret, pre));\n    return [fn, $(2), $(3), $(4)];\n};\nexport const defFnOp = (op) => defOp(FN(op), ARGS_V);\nexport const defHofOp = (op, tpl, args = ARGS_V, syms, ret = \"o\", dispatch = 1, pre) => {\n    const _tpl = tpl || FN(\"op\");\n    syms = syms || args;\n    pre = pre != null ? pre : defaultOut(ret, args);\n    const fn = vop(dispatch);\n    const $ = (dim) => fn.add(dim, compileHOF(dim, [op], _tpl, \"op\", args, syms, ret, \"\", pre));\n    fn.default(compileGHOF([op], _tpl, \"op\", args, syms, ret, pre));\n    return [fn, $(2), $(3), $(4)];\n};\nexport const defOpS = (tpl, args = ARGS_VV, idxArgs = SARGS_VV, syms = ARGS_VV, ret = \"o\", pre, sizes = [2, 3, 4]) => [\n    compileS(tpl, `${args},k,${idxArgs}`, syms, ret, pre),\n    ...sizes.map((dim) => compile(dim, tpl, `${args},${idxArgs}`, syms, ret, \"\", pre != null ? pre : defaultOut(ret, args), \"\", true)),\n];\nexport const defHofOpS = (op, tpl, args = ARGS_VV, idxArgs = SARGS_VV, syms = ARGS_VV, ret = \"o\", pre, sizes = [2, 3, 4]) => [\n    new Function(\"op\", `return (${args},k,${idxArgs})=>{${assembleS(tpl, syms, ret, pre).join(\"\")}}`)(op),\n    ...sizes.map((dim) => compileHOF(dim, [op], tpl, \"op\", `${args},${idxArgs}`, syms, ret, \"\", pre != null ? pre : defaultOut(ret, args), \"\", true)),\n];\nexport const defMathOp = (op) => defOp(MATH(op));\nexport const defMathOpN = (op) => defOp(MATH_N(op), ARGS_VN);\nexport const defBitOp = (op, signed = false) => defOp((signed ? SIGNED : UNSIGNED)(op));\nexport const defBitOpN = (op, signed = false) => defOp((signed ? SIGNED_N : UNSIGNED_N)(op), ARGS_VN);\n","import { comp as _comp } from \"@thi.ng/compose/comp\";\nimport { ensureTransducer } from \"./ensure.js\";\nexport function comp(...fns) {\n    fns = fns.map(ensureTransducer);\n    return _comp.apply(null, fns);\n}\n","import { illegalArity } from \"@thi.ng/errors/illegal-arity\";\nexport function comp(...fns) {\n    let [a, b, c, d, e, f, g, h, i, j] = fns;\n    switch (fns.length) {\n        case 0:\n            illegalArity(0);\n        case 1:\n            return a;\n        case 2:\n            return (...xs) => a(b(...xs));\n        case 3:\n            return (...xs) => a(b(c(...xs)));\n        case 4:\n            return (...xs) => a(b(c(d(...xs))));\n        case 5:\n            return (...xs) => a(b(c(d(e(...xs)))));\n        case 6:\n            return (...xs) => a(b(c(d(e(f(...xs))))));\n        case 7:\n            return (...xs) => a(b(c(d(e(f(g(...xs)))))));\n        case 8:\n            return (...xs) => a(b(c(d(e(f(g(h(...xs))))))));\n        case 9:\n            return (...xs) => a(b(c(d(e(f(g(h(i(...xs)))))))));\n        case 10:\n        default:\n            const fn = (...xs) => a(b(c(d(e(f(g(h(i(j(...xs))))))))));\n            return fns.length === 10 ? fn : comp(fn, ...fns.slice(10));\n    }\n}\nexport function compL(...fns) {\n    return comp.apply(null, fns.reverse());\n}\n/**\n * @deprecated renamed to {@link (compL:1)}\n */\nexport const compI = compL;\n","import { compR } from \"./compr.js\";\nimport { __iter } from \"./iterator.js\";\nexport function mapIndexed(...args) {\n    return (__iter(mapIndexed, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const fn = args[0];\n            let i = args[1] || 0;\n            return compR(rfn, (acc, x) => r(acc, fn(i++, x)));\n        }));\n}\n","import { isReduced } from \"./reduced.js\";\nexport function range(from, to, step) {\n    return new Range(from, to, step);\n}\n/**\n * Simple class wrapper around given range interval and implementing\n * `Iterable` and {@link IReducible} interfaces, the latter is used to\n * accelerate use with {@link (reduce:1)}.\n */\nexport class Range {\n    constructor(from, to, step) {\n        if (from === undefined) {\n            from = 0;\n            to = Infinity;\n        }\n        else if (to === undefined) {\n            to = from;\n            from = 0;\n        }\n        step = step === undefined ? (from < to ? 1 : -1) : step;\n        this.from = from;\n        this.to = to;\n        this.step = step;\n    }\n    *[Symbol.iterator]() {\n        let { from, to, step } = this;\n        if (step > 0) {\n            while (from < to) {\n                yield from;\n                from += step;\n            }\n        }\n        else if (step < 0) {\n            while (from > to) {\n                yield from;\n                from += step;\n            }\n        }\n    }\n    $reduce(rfn, acc) {\n        const step = this.step;\n        if (step > 0) {\n            for (let i = this.from, n = this.to; i < n && !isReduced(acc); i += step) {\n                acc = rfn(acc, i);\n            }\n        }\n        else {\n            for (let i = this.from, n = this.to; i > n && !isReduced(acc); i += step) {\n                acc = rfn(acc, i);\n            }\n        }\n        return acc;\n    }\n}\n","import { reducer } from \"./reduce.js\";\nexport function str(sep, xs) {\n    sep = sep || \"\";\n    let first = true;\n    return xs\n        ? [...xs].join(sep)\n        : reducer(() => \"\", (acc, x) => ((acc = first ? acc + x : acc + sep + x), (first = false), acc));\n}\n","import { isIterable } from \"@thi.ng/checks/is-iterable\";\nimport { compR } from \"./compr.js\";\nimport { iterator } from \"./iterator.js\";\nimport { ensureReduced, reduced } from \"./reduced.js\";\nexport function take(n, src) {\n    return isIterable(src)\n        ? iterator(take(n), src)\n        : (rfn) => {\n            const r = rfn[2];\n            let m = n;\n            return compR(rfn, (acc, x) => --m > 0\n                ? r(acc, x)\n                : m === 0\n                    ? ensureReduced(r(acc, x))\n                    : reduced(acc));\n        };\n}\n","import { illegalArity } from \"@thi.ng/errors/illegal-arity\";\nimport { ensureTransducer } from \"./ensure.js\";\nimport { map } from \"./map.js\";\nimport { reduce, reduceRight } from \"./reduce.js\";\nexport function transduce(...args) {\n    return $transduce(transduce, reduce, args);\n}\nexport function transduceRight(...args) {\n    return $transduce(transduceRight, reduceRight, args);\n}\nconst $transduce = (tfn, rfn, args) => {\n    let acc, xs;\n    switch (args.length) {\n        case 4:\n            xs = args[3];\n            acc = args[2];\n            break;\n        case 3:\n            xs = args[2];\n            break;\n        case 2:\n            return map((x) => tfn(args[0], args[1], x));\n        default:\n            illegalArity(args.length);\n    }\n    return rfn(ensureTransducer(args[0])(args[1]), acc, xs);\n};\n","export function* zip(...src) {\n    const iters = src.map((s) => s[Symbol.iterator]());\n    while (true) {\n        const tuple = [];\n        for (let i of iters) {\n            let v = i.next();\n            if (v.done) {\n                return;\n            }\n            tuple.push(v.value);\n        }\n        yield tuple;\n    }\n}\n","import { unsupported } from \"@thi.ng/errors/unsupported\";\n/**\n * Specialized / optimized version of {@link @thi.ng/defmulti# | @thi.ng/defmulti} for\n * vector operations. Uses simplified logic to dispatch on length\n * (vector size) of `dispatch` argument.\n *\n * @param dispatch - arg index\n */\nexport const vop = (dispatch = 0) => {\n    const impls = new Array(5);\n    let fallback;\n    const fn = (...args) => {\n        const g = impls[args[dispatch].length] || fallback;\n        return g\n            ? g(...args)\n            : unsupported(`no impl for vec size ${args[dispatch].length}`);\n    };\n    fn.add = (dim, fn) => (impls[dim] = fn);\n    fn.default = (fn) => (fallback = fn);\n    fn.impl = (dim) => impls[dim] || fallback;\n    // fn.impls = impls;\n    return fn;\n};\n","import { defError } from \"./deferror.js\";\nexport const UnsupportedOperationError = defError(() => \"unsupported operation\");\nexport const unsupported = (msg) => {\n    throw new UnsupportedOperationError(msg);\n};\n","/** @internal */\nexport const ARGS_V = \"o,a\";\n/** @internal */\nexport const ARGS_VV = \"o,a,b\";\n/** @internal */\nexport const ARGS_VVV = \"o,a,b,c\";\n/** @internal */\nexport const ARGS_VN = \"o,a,n\";\n/** @internal */\nexport const ARGS_VNV = \"o,a,n,b\";\n/** @internal */\nexport const ARGS_VVN = \"o,a,b,n\";\n/** @internal */\nexport const SARGS_V = \"io=0,ia=0,so=1,sa=1\";\n/** @internal */\nexport const SARGS_VV = \"io=0,ia=0,ib=0,so=1,sa=1,sb=1\";\n/** @internal */\nexport const SARGS_VVV = \"io=0,ia=0,ib=0,ic=0,so=1,sa=1,sb=1,sc=1\";\n/** @internal */\nexport const DEFAULT_OUT = \"!o&&(o=a);\";\n/** @internal */\nexport const NEW_OUT = \"!o&&(o=[]);\";\n/** @internal */\nexport const NEW_OUT_A = \"!a&&(a=[]);\";\n/** @internal */\n// prettier-ignore\nexport const MATH = (op) => ([o, a, b]) => `${o}=${a}${op}${b};`;\n/** @internal */\n// prettier-ignore\nexport const MATH_N = (op) => ([o, a]) => `${o}=${a}${op}n;`;\n/** @internal */\n// prettier-ignore\nexport const MATH2 = (op1, op2) => ([o, a, b, c]) => `${o}=(${a}${op1}${b})${op2}${c};`;\n/** @internal */\n// prettier-ignore\nexport const MATH2_N = (op1, op2) => ([o, a, b]) => `${o}=(${a}${op1}${b})${op2}n;`;\n/** @internal */\n// prettier-ignore\nexport const MATH2A_N = (op1, op2) => ([o, a, b]) => `${o}=(${a}${op1}n)${op2}${b};`;\n/** @internal */\n// prettier-ignore\nexport const SIGNED = (op) => ([o, a, b]) => `${o}=(${a}${op}${b})|0;`;\n/** @internal */\n// prettier-ignore\nexport const UNSIGNED = (op) => ([o, a, b]) => `${o}=(${a}${op}${b})>>>0;`;\n/** @internal */\n// prettier-ignore\nexport const SIGNED_N = (op) => ([o, a]) => `${o}=(${a}${op}n)|0;`;\n/** @internal */\n// prettier-ignore\nexport const UNSIGNED_N = (op) => ([o, a]) => `${o}=(${a}${op}n)>>>0;`;\n/** @internal */\n// prettier-ignore\nexport const FN = (op = \"op\") => ([o, a]) => `${o}=${op}(${a});`;\n/** @internal */\n// prettier-ignore\nexport const FN2 = (op = \"op\") => ([o, a, b]) => `${o}=${op}(${a},${b});`;\n/** @internal */\n// prettier-ignore\nexport const FN3 = (op = \"op\") => ([o, a, b, c]) => `${o}=${op}(${a},${b},${c});`;\n/** @internal */\n// prettier-ignore\nexport const FN5 = (op = \"op\") => ([o, a, b, c, d, e]) => `${o}=${op}(${a},${b},${c},${d},${e});`;\n/** @internal */\n// prettier-ignore\nexport const FN_N = (op = \"op\") => ([o, a]) => `${o}=${op}(${a},n);`;\n/** @internal */\nexport const DOT = ([a, b]) => `${a}*${b}`;\n/** @internal */\nexport const DOT_G = ([a, b]) => `s+=${a}*${b};`;\n/** @internal */\nexport const SET = ([o, a]) => `${o}=${a};`;\n/** @internal */\nexport const SET_N = ([a]) => `${a}=n;`;\n/** @internal */\nexport const MIX = ([o, a, b, c]) => `${o}=${a}+(${b}-${a})*${c};`;\n/** @internal */\nexport const MIX_N = ([o, a, b]) => `${o}=${a}+(${b}-${a})*n;`;\n","/** @internal */\nexport const CMP = (a, b) => b[0] - a[0];\n/** @internal */\nexport const addResults = (fn, sel, acc) => {\n    for (let n = sel.sort(CMP).length; n-- > 0;) {\n        const s = sel[n][1];\n        s && acc.push(fn(s));\n    }\n    return acc;\n};\n/**\n * Shared `into()` impl for spatial map types.\n *\n * @param map -\n * @param pairs -\n * @param eps -\n *\n * @internal\n */\nexport const into = (map, pairs, eps) => {\n    let ok = true;\n    for (let p of pairs) {\n        ok = map.set(p[0], p[1], eps) && ok;\n    }\n    return ok;\n};\n","import { KdTreeMap } from \"./kd-tree-map.js\";\nexport class KdTreeSet {\n    constructor(dim, keys) {\n        this.tree = new KdTreeMap(dim);\n        keys && this.into(keys);\n    }\n    [Symbol.iterator]() {\n        return this.tree.keys();\n    }\n    keys() {\n        return this.tree.keys();\n    }\n    values() {\n        return this.tree.keys();\n    }\n    get size() {\n        return this.tree.size;\n    }\n    get height() {\n        return this.tree.height;\n    }\n    get ratio() {\n        return this.tree.ratio;\n    }\n    copy() {\n        return new KdTreeSet(this.tree.dim, this);\n    }\n    clear() {\n        this.tree.clear();\n    }\n    empty() {\n        return new KdTreeSet(this.tree.dim);\n    }\n    add(key, eps) {\n        return this.tree.set(key, key, eps);\n    }\n    into(ks, eps) {\n        let ok = true;\n        for (let k of ks) {\n            ok = this.tree.set(k, k, eps) && ok;\n        }\n        return ok;\n    }\n    remove(key) {\n        return this.tree.remove(key);\n    }\n    has(key, eps) {\n        return this.tree.has(key, eps);\n    }\n    get(key, eps) {\n        return this.tree.get(key, eps);\n    }\n    query(q, maxDist, limit, acc) {\n        return this.tree.query(q, maxDist, limit, acc);\n    }\n    queryKeys(q, maxDist, limit, acc) {\n        return this.tree.queryKeys(q, maxDist, limit, acc);\n    }\n    queryValues(q, maxDist, limit, acc) {\n        return this.tree.queryKeys(q, maxDist, limit, acc);\n    }\n}\n","import { equivArrayLike } from \"@thi.ng/equiv\";\nimport { assert } from \"@thi.ng/errors/assert\";\nimport { pointInCenteredBox } from \"@thi.ng/geom-isec/point\";\nimport { testCenteredBoxSphere } from \"@thi.ng/geom-isec/rect-circle\";\nimport { Heap } from \"@thi.ng/heaps/heap\";\nimport { EPS } from \"@thi.ng/math/api\";\nimport { iterate } from \"@thi.ng/transducers/iterate\";\nimport { map } from \"@thi.ng/transducers/map\";\nimport { permutations } from \"@thi.ng/transducers/permutations\";\nimport { repeat } from \"@thi.ng/transducers/repeat\";\nimport { take } from \"@thi.ng/transducers/take\";\nimport { addmN } from \"@thi.ng/vectors/addmn\";\nimport { distSq } from \"@thi.ng/vectors/distsq\";\nimport { madd } from \"@thi.ng/vectors/madd\";\nimport { mulN } from \"@thi.ng/vectors/muln\";\nimport { submN } from \"@thi.ng/vectors/submn\";\nimport { vop } from \"@thi.ng/vectors/vop\";\nimport { addResults, CMP, into } from \"./utils.js\";\nexport class NdQtNode {\n    constructor(parent, pos, ext) {\n        this.parent = parent;\n        this.pos = pos;\n        this.ext = ext;\n        this.numC = 0;\n    }\n    clear() {\n        delete this.children;\n        delete this.k;\n        delete this.v;\n        this.numC = 0;\n    }\n    set(p, val, eps) {\n        return ((eps <= 0 || !this.queryKeys(p, eps, 1, []).length) &&\n            this.containsPoint(p) &&\n            this.setUnsafe(p, val));\n    }\n    setUnsafe(p, val) {\n        if (this.k) {\n            if (equivArrayLike(this.k, p)) {\n                this.v = val;\n                return false;\n            }\n            this.ensureChild(childID(this.k, this.pos)).setUnsafe(this.k, this.v);\n            delete this.k;\n            delete this.v;\n        }\n        if (this.children) {\n            return this.ensureChild(childID(p, this.pos)).setUnsafe(p, val);\n        }\n        else {\n            this.k = p;\n            this.v = val;\n        }\n        return true;\n    }\n    query(fn, p, r, max, acc) {\n        return addResults(fn, this.doQuery(p, r, max, new Heap([[r * r]], {\n            compare: CMP,\n        })).values, acc);\n    }\n    queryKeys(p, r, max, acc) {\n        return this.query((n) => n.k, p, r, max, acc);\n    }\n    queryValues(p, r, max, acc) {\n        return this.query((n) => n.v, p, r, max, acc);\n    }\n    containsPoint(p) {\n        return pointInCenteredBox(p, this.pos, this.ext);\n    }\n    nodeForPoint(p) {\n        if (this.k && equivArrayLike(this.k, p)) {\n            return this;\n        }\n        if (this.children) {\n            const child = this.children[childID(p, this.pos)];\n            return child ? child.nodeForPoint(p) : undefined;\n        }\n    }\n    doQuery(p, r, max, acc) {\n        if (testCenteredBoxSphere(this.pos, this.ext, p, r)) {\n            if (this.k) {\n                const d = distSq(this.k, p);\n                if (d <= acc.values[0][0]) {\n                    acc.length >= max\n                        ? acc.pushPop([d, this])\n                        : acc.push([d, this]);\n                }\n            }\n            else if (this.children) {\n                for (let i = MAX_CHILDREN[this.pos.length], j = this.numC; i-- > 0 && j > 0;) {\n                    if (this.children[i]) {\n                        this.children[i].doQuery(p, r, max, acc);\n                        j--;\n                    }\n                }\n            }\n        }\n        return acc;\n    }\n    ensureChild(id) {\n        !this.children && (this.children = []);\n        let c = this.children[id];\n        if (!c) {\n            const csize = mulN([], this.ext, 0.5);\n            this.children[id] = c = new NdQtNode(this, madd([], csize, CHILD_OFFSETS[csize.length][id], this.pos), csize);\n            this.numC++;\n        }\n        return c;\n    }\n}\n/**\n * Point-based quadtree for nD keys and optional value association.\n * Supports radial range queries and key removal with tree pruning. See\n * {@link ndQuadtreeFromMinMax}.\n *\n * @remarks\n * Partially ported from Clojure version of {@link http://thi.ng/geom}.\n */\nexport class NdQuadtreeMap {\n    constructor(pos, ext, pairs) {\n        const dim = pos.length;\n        assert(dim > 0 && dim <= NdQuadtreeMap.MAX_DIM, `illegal dimension: ${dim}`);\n        assert(ext.length === dim, `pos/ext dimensions must be equal`);\n        initChildOffsets(dim);\n        this.root = new NdQtNode(undefined, pos, ext);\n        this._size = 0;\n        pairs && this.into(pairs, -1);\n    }\n    /**\n     * Returns a new point-based `NdQuadtreeMap` for nD keys in given\n     * region defined by `min` / `max` coordinates. The dimensionality\n     * of the tree is implicitly defined by the provided coordinates.\n     * Only points within that region can be indexed.\n     *\n     * @remarks\n     * Due to exponentially growing lookup tables, currently only\n     * supports up to 16 dimensions.\n     */\n    static fromMinMax(min, max) {\n        return new NdQuadtreeMap(addmN([], min, max, 0.5), submN([], max, min, 0.5));\n    }\n    get size() {\n        return this._size;\n    }\n    [Symbol.iterator]() {\n        return map((n) => [n.k, n.v], this.nodes());\n    }\n    keys() {\n        return map((n) => n.k, this.nodes());\n    }\n    values() {\n        return map((n) => n.v, this.nodes());\n    }\n    *nodes(all = false) {\n        let queue = [this.root];\n        while (queue.length) {\n            const n = queue.pop();\n            if (n) {\n                if (all || n.k)\n                    yield n;\n                if (n.children)\n                    queue = queue.concat(n.children);\n            }\n        }\n    }\n    copy() {\n        const tree = new NdQuadtreeMap(this.root.pos, this.root.ext, this);\n        return tree;\n    }\n    clear() {\n        this.root.clear();\n        this._size = 0;\n    }\n    empty() {\n        return new NdQuadtreeMap(this.root.pos, this.root.ext);\n    }\n    set(key, val, eps = EPS) {\n        if (this.root.set(key, val, eps)) {\n            this._size++;\n            return true;\n        }\n        return false;\n    }\n    into(pairs, eps = EPS) {\n        return into(this, pairs, eps);\n    }\n    remove(p) {\n        let node = this.root.nodeForPoint(p);\n        if (!node)\n            return false;\n        this._size--;\n        delete node.k;\n        delete node.v;\n        let doPrune = true;\n        while (node.parent) {\n            node = node.parent;\n            delete node.children[childID(p, node.pos)];\n            doPrune = --node.numC === 0;\n            if (doPrune)\n                delete node.children;\n            else\n                break;\n        }\n        return true;\n    }\n    has(p, eps = EPS) {\n        return !!(eps <= 0\n            ? this.root.nodeForPoint(p)\n            : this.root.queryKeys(p, eps, 1, []).length);\n    }\n    get(p, eps = EPS) {\n        if (eps <= 0) {\n            const node = this.root.nodeForPoint(p);\n            return node ? node.v : undefined;\n        }\n        return this.root.queryValues(p, eps, 1, [])[0];\n    }\n    query(p, r, max = 1, acc = []) {\n        return this.root.query((n) => [n.k, n.v], p, r, max, acc);\n    }\n    queryKeys(p, r, max = 1, acc = []) {\n        return this.root.queryKeys(p, r, max, acc);\n    }\n    queryValues(p, r, max = 1, acc = []) {\n        return this.root.queryValues(p, r, max, acc);\n    }\n    containsPoint(p) {\n        return this.root.containsPoint(p);\n    }\n    nodeForPoint(p) {\n        return this.root.nodeForPoint(p);\n    }\n}\nNdQuadtreeMap.MAX_DIM = 16;\nconst MAX_CHILDREN = [\n    ...take(NdQuadtreeMap.MAX_DIM + 1, iterate((x) => x * 2, 1)),\n];\nconst CHILD_OFFSETS = [];\nconst initChildOffsets = (dim) => CHILD_OFFSETS[dim] ||\n    (CHILD_OFFSETS[dim] = [...permutations(...repeat([-1, 1], dim))]);\nconst childID = vop(0);\nchildID.add(1, (p, q) => (p[0] >= q[0] ? 1 : 0));\nchildID.add(2, (p, q) => (p[0] >= q[0] ? 2 : 0) | (p[1] >= q[1] ? 1 : 0));\nchildID.add(3, (p, q) => (p[0] >= q[0] ? 4 : 0) | (p[1] >= q[1] ? 2 : 0) | (p[2] >= q[2] ? 1 : 0));\nchildID.add(4, (p, q) => (p[0] >= q[0] ? 8 : 0) |\n    (p[1] >= q[1] ? 4 : 0) |\n    (p[2] >= q[2] ? 2 : 0) |\n    (p[3] >= q[3] ? 1 : 0));\nchildID.default((p, q) => {\n    let id = 0;\n    for (let i = 0, n = p.length - 1, bit = 1 << n; i <= n; i++, bit >>>= 1) {\n        p[i] >= q[i] && (id += bit);\n    }\n    return id;\n});\n","import { defError } from \"./deferror.js\";\nexport const AssertionError = defError(() => \"Assertion failed\");\n/**\n * Takes a `test` result or predicate function without args and throws\n * error with given `msg` if test failed (i.e. is falsy).\n *\n * @remarks\n * The function is only enabled if `process.env.NODE_ENV != \"production\"`\n * or if the `UMBRELLA_ASSERTS` env var is set to 1.\n */\nexport const assert = (() => typeof process !== \"undefined\" && typeof process.env !== \"undefined\"\n    ? process.env.NODE_ENV !== \"production\" ||\n        !!process.env.UMBRELLA_ASSERTS\n    : typeof __SNOWPACK_ENV__ !== \"undefined\"\n        ? __SNOWPACK_ENV__.MODE !== \"production\" ||\n            !!__SNOWPACK_ENV__.UMBRELLA_ASSERTS ||\n            !!__SNOWPACK_ENV__.SNOWPACK_PUBLIC_UMBRELLA_ASSERTS\n        : true)()\n    ? (test, msg) => {\n        if ((typeof test === \"function\" && !test()) || !test) {\n            throw new AssertionError(typeof msg === \"function\" ? msg() : msg);\n        }\n    }\n    : () => { };\n","import { closestT } from \"@thi.ng/geom-closest-point/line\";\nimport { sign } from \"@thi.ng/math/abs\";\nimport { EPS } from \"@thi.ng/math/api\";\nimport { clamp01 } from \"@thi.ng/math/interval\";\nimport { clockwise2 } from \"@thi.ng/vectors/clockwise\";\nimport { distSq } from \"@thi.ng/vectors/distsq\";\nimport { magSq } from \"@thi.ng/vectors/magsq\";\nimport { mixN } from \"@thi.ng/vectors/mixn\";\nimport { signedArea2 } from \"@thi.ng/vectors/signed-area\";\nimport { vop } from \"@thi.ng/vectors/vop\";\nexport const pointInSegment = (p, a, b, eps = EPS) => {\n    const t = closestT(p, a, b);\n    return t !== undefined\n        ? distSq(p, mixN([], a, b, clamp01(t))) < eps * eps\n        : false;\n};\nexport const pointInCircle = (p, pos, r) => distSq(pos, p) <= r * r;\nexport const pointInSphere = pointInCircle;\nexport const classifyPointInCircle = (p, pos, r, eps = EPS) => sign(r * r - distSq(pos, p), eps);\n/**\n * Returns positive value if `p` lies inside the circle passing through a,b,c.\n * Returns negative value if `p` is outside and zero if all 4 points are\n * cocircular.\n *\n * @remarks\n * Assumes a,b,c are in ccw order or else result will be have inverted sign.\n *\n * Based on Jonathan R. Shewchuck:\n * http://www.cs.cmu.edu/afs/cs/project/quake/public/code/predicates.c\n *\n * Also see {@link pointInCircumCircle}\n *\n * @param p -\n * @param a -\n * @param b -\n * @param c -\n */\nexport const pointIn3Circle = ([px, py], a, b, c) => {\n    const apx = a[0] - px;\n    const apy = a[1] - py;\n    const bpx = b[0] - px;\n    const bpy = b[1] - py;\n    const cpx = c[0] - px;\n    const cpy = c[1] - py;\n    const abdet = apx * bpy - bpx * apy;\n    const bcdet = bpx * cpy - cpx * bpy;\n    const cadet = cpx * apy - apx * cpy;\n    const alift = apx * apx + apy * apy;\n    const blift = bpx * bpx + bpy * bpy;\n    const clift = cpx * cpx + cpy * cpy;\n    return alift * bcdet + blift * cadet + clift * abdet;\n};\n/**\n * Returns positive value if `p` lies inside the sphere passing through a,b,c,d.\n * Returns negative value if `p` is outside and zero if all 5 points are\n * cospherical.\n *\n * @remarks\n * Assumes a,b,c,d are in ccw order or else result will be have inverted sign.\n *\n * Based on Jonathan R. Shewchuck:\n * http://www.cs.cmu.edu/afs/cs/project/quake/public/code/predicates.c\n *\n * @param p -\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n */\nexport const pointIn4Sphere = ([px, py, pz], a, b, c, d) => {\n    const apx = a[0] - px;\n    const bpx = b[0] - px;\n    const cpx = c[0] - px;\n    const dpx = d[0] - px;\n    const apy = a[1] - py;\n    const bpy = b[1] - py;\n    const cpy = c[1] - py;\n    const dpy = d[1] - py;\n    const apz = a[2] - pz;\n    const bpz = b[2] - pz;\n    const cpz = c[2] - pz;\n    const dpz = d[2] - pz;\n    const ab = apx * bpy - bpx * apy;\n    const bc = bpx * cpy - cpx * bpy;\n    const cd = cpx * dpy - dpx * cpy;\n    const da = dpx * apy - apx * dpy;\n    const ac = apx * cpy - cpx * apy;\n    const bd = bpx * dpy - dpx * bpy;\n    const abc = apz * bc - bpz * ac + cpz * ab;\n    const bcd = bpz * cd - cpz * bd + dpz * bc;\n    const cda = cpz * da + dpz * ac + apz * cd;\n    const dab = dpz * ab + apz * bd + bpz * da;\n    const alift = apx * apx + apy * apy + apz * apz;\n    const blift = bpx * bpx + bpy * bpy + bpz * bpz;\n    const clift = cpx * cpx + cpy * cpy + cpz * cpz;\n    const dlift = dpx * dpx + dpy * dpy + dpz * dpz;\n    return dlift * abc - clift * dab + (blift * cda - alift * bcd);\n};\nexport const pointInCircumCircle = (a, b, c, d) => magSq(a) * signedArea2(b, c, d) -\n    magSq(b) * signedArea2(a, c, d) +\n    magSq(c) * signedArea2(a, b, d) -\n    magSq(d) * signedArea2(a, b, c) >\n    0;\nexport const pointInTriangle2 = (p, a, b, c) => {\n    const s = clockwise2(a, b, c) ? 1 : -1;\n    return (s * signedArea2(a, c, p) >= 0 &&\n        s * signedArea2(b, a, p) >= 0 &&\n        s * signedArea2(c, b, p) >= 0);\n};\nexport const classifyPointInTriangle2 = (p, a, b, c, eps = EPS) => {\n    const s = clockwise2(a, b, c) ? 1 : -1;\n    return sign(Math.min(s * signedArea2(a, c, p), s * signedArea2(b, a, p), s * signedArea2(c, b, p)), eps);\n};\nexport const pointInPolygon2 = (p, pts) => {\n    const n = pts.length - 1;\n    const px = p[0];\n    const py = p[1];\n    let a = pts[n];\n    let b = pts[0];\n    let inside = 0;\n    for (let i = 0; i <= n; a = b, b = pts[++i]) {\n        inside = classifyPointPolyPair(px, py, a[0], a[1], b[0], b[1], inside);\n    }\n    return inside;\n};\nexport const classifyPointPolyPair = (px, py, ax, ay, bx, by, inside) => ((ay < py && by >= py) || (by < py && ay >= py)) && (ax <= px || bx <= px)\n    ? inside ^ ~~(ax + ((py - ay) / (by - ay)) * (bx - ax) < px)\n    : inside;\nexport const pointInBox = vop(0);\nexport const pointInRect = pointInBox.add(2, ([x, y], pos, size) => x >= pos[0] &&\n    x <= pos[0] + size[0] &&\n    y >= pos[1] &&\n    y <= pos[1] + size[1]);\nexport const pointInAABB = pointInBox.add(3, ([x, y, z], pos, size) => x >= pos[0] &&\n    x <= pos[0] + size[0] &&\n    y >= pos[1] &&\n    y <= pos[1] + size[1] &&\n    z >= pos[2] &&\n    z <= pos[2] + size[2]);\npointInBox.default((p, boxMin, boxSize) => {\n    for (let i = p.length; i-- > 0;) {\n        const x = p[i];\n        const y = boxMin[i];\n        if (x < y || x > y + boxSize[i])\n            return false;\n    }\n    return true;\n});\nexport const pointInCenteredBox = vop(0);\nexport const pointInCenteredRect = pointInCenteredBox.add(2, ([x, y], pos, size) => x >= pos[0] - size[0] &&\n    x <= pos[0] + size[0] &&\n    y >= pos[1] - size[1] &&\n    y <= pos[1] + size[1]);\nexport const pointInCenteredAABB = pointInCenteredBox.add(3, ([x, y, z], pos, size) => x >= pos[0] - size[0] &&\n    x <= pos[0] + size[0] &&\n    y >= pos[1] - size[1] &&\n    y <= pos[1] + size[1] &&\n    z >= pos[2] - size[2] &&\n    z <= pos[2] + size[2]);\npointInCenteredBox.default((p, boxCenter, boxExtent) => {\n    for (let i = p.length; i-- > 0;) {\n        const x = p[i];\n        const y = boxCenter[i];\n        const z = boxExtent[i];\n        if (x < y - z || x > y + z)\n            return false;\n    }\n    return true;\n});\n","import { dist } from \"@thi.ng/vectors/dist\";\nimport { distSq } from \"@thi.ng/vectors/distsq\";\nimport { dot } from \"@thi.ng/vectors/dot\";\nimport { empty } from \"@thi.ng/vectors/empty\";\nimport { magSq } from \"@thi.ng/vectors/magsq\";\nimport { mixN } from \"@thi.ng/vectors/mixn\";\nimport { set } from \"@thi.ng/vectors/set\";\nimport { sub } from \"@thi.ng/vectors/sub\";\n/**\n * Computes the parametric distance `t` of point `p` projected onto line\n * `a` -> `b`, relative to `a`. I.e. the projection of `p` can then be\n * computed like so:\n *\n * @example\n * ```ts\n * mixN([], a, b, closestT(p, a, b))\n * ```\n *\n * If the return value is outside the closed [0,1] interval, the\n * projected point lies outside the line segment. Returns `undefined` if\n * `a` and `b` are coincident.\n *\n * - {@link closestPointLine}\n * - {@link closestPointSegment}\n *\n * @param p - query point\n * @param a - line point A\n * @param b - line point B\n */\nexport const closestT = (p, a, b) => {\n    const d = sub([], b, a);\n    const l = magSq(d);\n    return l > 1e-6 ? dot(sub([], p, a), d) / l : undefined;\n};\n/**\n * Returns closest point to `p` on infinite line defined by points `a`\n * and `b`. Use {@link closestPointSegment} to only consider the actual line\n * segment between these two points.\n *\n * {@link closestPointSegment}\n *\n * @param p - query point\n * @param a - line point A\n * @param b - line point B\n */\nexport const closestPointLine = (p, a, b) => mixN([], a, b, closestT(p, a, b) || 0);\n/**\n * Returns distance from `p` to closest point to infinite line `a` ->\n * `b`. Use {@link distToSegment} to only consider the actual line segment\n * between these two points.\n *\n * {@link distToSegment}\n *\n * @param p - query point\n * @param a - line point A\n * @param b - line point B\n */\nexport const distToLine = (p, a, b) => dist(p, closestPointLine(p, a, b) || a);\n/**\n * Returns closest point to `p` on line segment `a` -> `b`. By default,\n * if the result point lies outside the segment, returns a copy of the\n * closest end point. The result is written to the optional `out` vector\n * (or if omitted, a new one is created).\n *\n * If `insideOnly` is true, only returns the closest point iff it\n * actually is inside the segment. The behavior of this configurable via\n * the optional `eps` arg and by default includes both end points. This\n * function uses {@link closestT} to compute the parametric position of the\n * result point and determine if it lies within the line segment. If\n * `eps > 0`, the end points `a` and `b` will be excluded from the\n * match, effectively shortening the valid line segment from both ends,\n * i.e. the valid interval of the parametric position will be\n * [eps,1-eps]. If the result lies outside this interval, the function\n * returns `undefined`. Likewise, if `a` and `b` are coincident.\n *\n * @param p - query point\n * @param a - line point A\n * @param b - line point B\n * @param out - result\n * @param eps - epsilon value\n */\nexport const closestPointSegment = (p, a, b, out, insideOnly = false, eps = 0) => {\n    const t = closestT(p, a, b);\n    if (t !== undefined && (!insideOnly || (t >= eps && t <= 1 - eps))) {\n        out = out || empty(p);\n        return t <= 0 ? set(out, a) : t >= 1 ? set(out, b) : mixN(out, a, b, t);\n    }\n};\n/**\n * Returns distance from `p` to closest point on line segment `a` ->\n * `b`.\n *\n * @param p - query point\n * @param a - line point A\n * @param b - line point B\n */\nexport const distToSegment = (p, a, b) => dist(p, closestPointSegment(p, a, b) || a);\nexport const closestPointPolyline = (p, pts, closed = false, out = []) => {\n    if (!pts.length)\n        return;\n    const tmp = [];\n    const n = pts.length - 1;\n    let minD = Infinity, i, j;\n    if (closed) {\n        i = n;\n        j = 0;\n    }\n    else {\n        i = 0;\n        j = 1;\n    }\n    for (; j <= n; i = j, j++) {\n        if (closestPointSegment(p, pts[i], pts[j], tmp)) {\n            const d = distSq(p, tmp);\n            if (d < minD) {\n                minD = d;\n                set(out, tmp);\n            }\n        }\n    }\n    return minD < Infinity ? out : undefined;\n};\n/**\n * Returns the index of the start point containing the segment in the\n * polyline array `points` farthest away from `p` with regards to the\n * line segment `a` to `b`. `points` is only checked between indices\n * `from` and `to` (not including the latter).\n *\n * @param a - line point A\n * @param b - line point B\n * @param points - points\n * @param from - start search index\n * @param to - end search index\n */\nexport const farthestPointSegment = (a, b, points, from = 0, to = points.length) => {\n    let maxD = -1;\n    let maxIdx = -1;\n    const tmp = empty(a);\n    for (let i = from; i < to; i++) {\n        const p = points[i];\n        const d = distSq(p, closestPointSegment(p, a, b, tmp) || a);\n        if (d > maxD) {\n            maxD = d;\n            maxIdx = i;\n        }\n    }\n    return [maxIdx, Math.sqrt(maxD)];\n};\n","import { distSq, distSq2, distSq3, distSq4 } from \"./distsq.js\";\nexport const dist = (a, b) => Math.sqrt(distSq(a, b));\nexport const dist2 = (a, b) => Math.sqrt(distSq2(a, b));\nexport const dist3 = (a, b) => Math.sqrt(distSq3(a, b));\nexport const dist4 = (a, b) => Math.sqrt(distSq4(a, b));\n","import { compile, compileG } from \"./compile/emit.js\";\nimport { DOT, DOT_G } from \"./compile/templates.js\";\nimport { vop } from \"./vop.js\";\nconst $ = (dim) => dot.add(dim, compile(dim, DOT, \"a,b\", undefined, \"\", \"+\", \"return \", \";\"));\nexport const dot = vop();\ndot.default(compileG(DOT_G, \"a,b\", undefined, \"s\", \"let s=0;\"));\nexport const dot2 = $(2);\nexport const dot3 = $(3);\nexport const dot4 = $(4);\n","import { implementsFunction } from \"@thi.ng/checks/implements-function\";\nimport { zeroes } from \"./setn.js\";\nexport const empty = (v) => implementsFunction(v, \"empty\") ? v.empty() : zeroes(v.length);\n","import { defOp } from \"./compile/emit.js\";\nimport { SET_N } from \"./compile/templates.js\";\nexport const [setN, setN2, setN3, setN4] = defOp(SET_N, \"a,n\", \"a\", \"a\", 0, \"\");\nexport const zero = (a) => setN(a, 0);\nexport const one = (a) => setN(a, 1);\nexport const zeroes = (n) => new Array(n).fill(0);\nexport const ones = (n) => new Array(n).fill(1);\n","import { compile, compileG } from \"./compile/emit.js\";\nimport { vop } from \"./vop.js\";\nconst $ = (dim) => magSq.add(dim, compile(dim, ([a]) => `${a}*${a}`, \"a\", \"a\", \"\", \"+\", \"return \", \";\"));\nexport const magSq = vop();\nmagSq.default(compileG(([a]) => `sum+=${a}*${a};`, \"a\", undefined, \"sum\", \"let sum=0;\"));\nexport const magSq2 = $(2);\nexport const magSq3 = $(3);\nexport const magSq4 = $(4);\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VVN, MIX_N } from \"./compile/templates.js\";\nexport const [mixN, mixN2, mixN3, mixN4] = defOp(MIX_N, ARGS_VVN);\n","import { defOp } from \"./compile/emit.js\";\nimport { NEW_OUT, SET } from \"./compile/templates.js\";\nexport const [set, set2, set3, set4] = defOp(SET, \"o,a\", undefined, \"o\", 1, NEW_OUT);\n","import { defMathOp } from \"./compile/emit.js\";\nexport const [sub, sub2, sub3, sub4] = defMathOp(\"-\");\n","import { EPS } from \"./api.js\";\nexport const absDiff = (x, y) => Math.abs(x - y);\nexport const sign = (x, eps = EPS) => (x > eps ? 1 : x < -eps ? -1 : 0);\n","/**\n * Clamps value `x` to given closed interval.\n *\n * @param x - value to clamp\n * @param min - lower bound\n * @param max - upper bound\n */\nexport const clamp = (x, min, max) => (x < min ? min : x > max ? max : x);\n/**\n * Clamps value `x` to closed [0 .. ∞] interval.\n *\n * @param x -\n */\nexport const clamp0 = (x) => (x > 0 ? x : 0);\n/**\n * Clamps value `x` to closed [0 .. 1] interval.\n *\n * @param x -\n */\nexport const clamp01 = (x) => (x < 0 ? 0 : x > 1 ? 1 : x);\n/**\n * Clamps value `x` to closed [-1 .. 1] interval.\n *\n * @param x -\n */\nexport const clamp11 = (x) => (x < -1 ? -1 : x > 1 ? 1 : x);\n/**\n * Clamps value `x` to closed [0 .. 0.5] interval.\n *\n * @param x -\n */\nexport const clamp05 = (x) => (x < 0 ? 0 : x > 0.5 ? 0.5 : x);\n/**\n * Folds `x` back inside closed [min..max] interval. Also see\n * {@link wrapOnce}.\n *\n * @param x -\n * @param min -\n * @param max -\n */\nexport const wrap = (x, min, max) => {\n    if (min === max)\n        return min;\n    if (x > max) {\n        const d = max - min;\n        x -= d;\n        if (x > max)\n            x -= d * (((x - min) / d) | 0);\n    }\n    else if (x < min) {\n        const d = max - min;\n        x += d;\n        if (x < min)\n            x += d * (((min - x) / d + 1) | 0);\n    }\n    return x;\n};\n/**\n * Like {@link wrap}, but optimized for cases where `x` is guaranteed to\n * be in `[min - d, max + d]` interval, where `d = max - min`. Result\n * will be in closed `[min..max]` interval.\n *\n * @param x -\n * @param min -\n * @param max -\n */\nexport const wrapOnce = (x, min, max) => x < min ? x - min + max : x > max ? x - max + min : x;\n/**\n * Similar to {@link wrapOnce} for [0..1] interval.\n *\n * @param x -\n */\nexport const wrap01 = (x) => (x < 0 ? x + 1 : x > 1 ? x - 1 : x);\n/**\n * Similar to {@link wrapOnce} for [-1..1] interval.\n *\n * @param x -\n */\nexport const wrap11 = (x) => (x < -1 ? x + 2 : x > 1 ? x - 2 : x);\nexport const min2id = (a, b) => (a <= b ? 0 : 1);\nexport const min3id = (a, b, c) => a <= b ? (a <= c ? 0 : 2) : b <= c ? 1 : 2;\nexport const min4id = (a, b, c, d) => a <= b\n    ? a <= c\n        ? a <= d\n            ? 0\n            : 3\n        : c <= d\n            ? 2\n            : 3\n    : b <= c\n        ? b <= d\n            ? 1\n            : 3\n        : c <= d\n            ? 2\n            : 3;\nexport const max2id = (a, b) => (a >= b ? 0 : 1);\nexport const max3id = (a, b, c) => a >= b ? (a >= c ? 0 : 2) : b >= c ? 1 : 2;\nexport const max4id = (a, b, c, d) => a >= b\n    ? a >= c\n        ? a >= d\n            ? 0\n            : 3\n        : c >= d\n            ? 2\n            : 3\n    : b >= c\n        ? b >= d\n            ? 1\n            : 3\n        : c >= d\n            ? 2\n            : 3;\n/**\n * Returns the non-zero minimum value of the given `a`, `b` args.\n *\n * @param a -\n * @param b -\n */\nexport const minNonZero2 = (a, b) => a !== 0 ? (b !== 0 ? Math.min(a, b) : a) : b;\n/**\n * Returns the non-zero minimum value of the given `a`, `b`, `c` args.\n *\n * @param a -\n * @param b -\n * @param c -\n */\nexport const minNonZero3 = (a, b, c) => minNonZero2(minNonZero2(a, b), c);\n/**\n * See `smax()`.\n *\n * @param a -\n * @param b -\n * @param k - smooth exponent (MUST be > 0)\n */\nexport const smin = (a, b, k) => smax(a, b, -k);\n/**\n * Smooth maximum. Note: Result values will be slightly larger than max\n * value near max(a,b) + eps due to exponential decay. Higher `k` values\n * reduce the error, but also reduce the smoothing. Recommended k=16.\n *\n * {@link https://en.wikipedia.org/wiki/Smooth_maximum}\n *\n * @param a -\n * @param b -\n * @param k - smooth exponent (MUST be > 0)\n */\nexport const smax = (a, b, k) => {\n    const ea = Math.exp(a * k);\n    const eb = Math.exp(b * k);\n    return (a * ea + b * eb) / (ea + eb);\n};\n/**\n * Same as `smin(smax(x, min, k), max, k)`.\n *\n * @param x -\n * @param min -\n * @param max -\n * @param k -\n */\nexport const sclamp = (x, min, max, k) => smin(smax(x, min, k), max, k);\nexport const absMin = (a, b) => (Math.abs(a) < Math.abs(b) ? a : b);\nexport const absMax = (a, b) => (Math.abs(a) > Math.abs(b) ? a : b);\n/**\n * If `abs(x) > abs(e)`, recursively mirrors `x` back into `[-e .. +e]`\n * interval at respective positive/negative boundary.\n *\n * @remarks\n * References:\n * - https://www.desmos.com/calculator/lkyf2ag3ta\n * - https://www.musicdsp.org/en/latest/Effects/203-fold-back-distortion.html\n *\n * @param e - threshold (> 0)\n * @param x - input value\n */\nexport const foldback = (e, x) => x < -e || x > e ? Math.abs(Math.abs((x - e) % (4 * e)) - 2 * e) - e : x;\n/**\n * Returns true iff `x` is in closed interval `[min .. max]`\n *\n * @param x -\n * @param min -\n * @param max -\n */\nexport const inRange = (x, min, max) => x >= min && x <= max;\n/**\n * Returns true iff `x` is in open interval `(min .. max)`\n *\n * @param x -\n * @param min -\n * @param max -\n */\nexport const inOpenRange = (x, min, max) => x > min && x < max;\n","import { sign } from \"@thi.ng/math/abs\";\nimport { EPS } from \"@thi.ng/math/api\";\nimport { signedArea2 } from \"./signed-area.js\";\n/**\n * Syntax sugar for `sign(signedArea2(a, b, c))`.\n *\n * - {@link @thi.ng/math#sign}\n * - {@link signedArea2}\n *\n * @param a -\n * @param b -\n * @param c -\n * @param eps - zero tolerance for sign computation\n */\nexport const corner2 = (a, b, c, eps = EPS) => sign(signedArea2(a, b, c), eps);\n/**\n * Returns true, if the triangle `a`, `b`, `c` is in clockwise order,\n * i.e. if `corner2(a,b,c)` returned -1.\n *\n * @param a -\n * @param b -\n * @param c -\n * @param eps -\n */\nexport const clockwise2 = (a, b, c, eps = EPS) => corner2(a, b, c, eps) < 0;\n","/**\n * Returns 2x the signed area of the 2D triangle defined by the given points.\n *\n * @remarks\n * This is a useful classifier for many geometry processing tasks. In addition\n * to the triangle area, the result can also be interpreted as follows:\n *\n * - `> 0`: points are ordered counterclockwise\n * - `< 0`: points are ordered clockwise\n * - `0`: points are co-linear\n *\n * Functionally same as: `cross2(sub2([], b, a), sub2([], c, a))`\n *\n * - {@link corner2}\n * - {@link clockwise2}\n * - {@link cross2}\n *\n * @param a -\n * @param b -\n * @param c -\n */\nexport const signedArea2 = (a, b, c) => {\n    const ax = a[0];\n    const ay = a[1];\n    return (b[0] - ax) * (c[1] - ay) - (c[0] - ax) * (b[1] - ay);\n};\n/**\n * Same as {@link signedArea2}, but expects individual vector component args,\n * instead of vectors.\n *\n * @param ax -\n * @param ay -\n * @param bx -\n * @param by -\n * @param cx -\n * @param cy -\n */\nexport const signedAreaC2 = (ax, ay, bx, by, cx, cy) => (bx - ax) * (cy - ay) - (cx - ax) * (by - ay);\n","import { vop } from \"@thi.ng/vectors/vop\";\nexport const testBoxSphere = vop(0);\n/**\n * Returns true if given 2D rect defined by `boxMinPos` and `boxSize`\n * intersects circle.\n *\n * @param boxMinPos -\n * @param boxSize -\n * @param circlePos -\n * @param r -\n */\nexport const testRectCircle = testBoxSphere.add(2, (boxMinPos, boxSize, circlePos, r) => axis(circlePos[0], boxMinPos[0], boxSize[0]) +\n    axis(circlePos[1], boxMinPos[1], boxSize[1]) <=\n    r * r);\n/**\n * Same as {@link testRectCircle}, but for 3D AABB and sphere.\n *\n * @param boxMinPos -\n * @param boxSize -\n * @param spherePos -\n * @param r -\n */\nexport const testAABBSphere = testBoxSphere.add(3, (boxMinPos, boxSize, spherePos, r) => axis(spherePos[0], boxMinPos[0], boxSize[0]) +\n    axis(spherePos[1], boxMinPos[1], boxSize[1]) +\n    axis(spherePos[2], boxMinPos[2], boxSize[2]) <=\n    r * r);\ntestBoxSphere.default((boxPos, boxSize, spherePos, r) => {\n    let sum = 0;\n    for (let i = boxPos.length; i-- > 0;) {\n        sum += axis(spherePos[i], boxPos[i], boxSize[i]);\n    }\n    return sum <= r * r;\n});\n/**\n * Like {@link testCenteredAABBSphere}, but for arbitrary dimensions w/\n * optimized execution for 2D & 3D cases.\n *\n * @param boxCenter -\n * @param boxExtent -\n * @param spherePos -\n * @param r -\n */\nexport const testCenteredBoxSphere = vop(0);\n/**\n * Similar to {@link testRectCircle}, but for rects defined by centroid\n * and radius-like extent.\n *\n * @param rectPos -\n * @param extent -\n * @param circlePos -\n * @param r -\n */\nexport const testCenteredRectCircle = testCenteredBoxSphere.add(2, (boxPos, { 0: w, 1: h }, circlePos, r) => axis(circlePos[0], boxPos[0] - w, w * 2) +\n    axis(circlePos[1], boxPos[1] - h, h * 2) <=\n    r * r);\n/**\n * Similar to {@link testAABBSphere}, but for AABBs defined by centroid\n * and radius-like extent.\n *\n * @param boxCenter -\n * @param boxExtent -\n * @param spherePos -\n * @param r -\n */\nexport const testCenteredAABBSphere = testCenteredBoxSphere.add(3, (boxPos, { 0: w, 1: h, 2: d }, spherePos, r) => axis(spherePos[0], boxPos[0] - w, w * 2) +\n    axis(spherePos[1], boxPos[1] - h, h * 2) +\n    axis(spherePos[2], boxPos[2] - d, d * 2) <=\n    r * r);\ntestCenteredBoxSphere.default((boxPos, boxExtent, spherePos, r) => {\n    let sum = 0;\n    for (let i = boxPos.length; i-- > 0;) {\n        sum += axis(spherePos[i], boxPos[i] - boxExtent[i], boxExtent[i] * 2);\n    }\n    return sum <= r * r;\n});\nconst axis = (a, b, c) => (a < b ? a - b : a > b + c ? a - b - c : 0) ** 2;\n","/**\n * Yields an infinite iterator of the inductive sequence:\n *\n * `f(x+1) = f(f(x))`\n *\n * @remarks\n * The first value emitted always is `seed` itself, then f(seed),\n * f(f(seed, i)) etc. The given function is called with the current\n * iteration counter as 2nd arg (starting w/ i=1).\n *\n * @example\n * ```ts\n * [...iterate((x) => x * 2, 1, 5)]\n * // [ 1, 2, 4, 8, 16 ]\n *\n * [...iterate((x, i) => x * 10 + i, 0, 8)]\n * // [ 0, 1, 12, 123, 1234, 12345, 123456, 1234567 ]\n * ```\n *\n * @param fn -\n * @param seed -\n * @param num -\n */\nexport function* iterate(fn, seed, num = Infinity) {\n    for (let i = 1; i <= num; i++) {\n        yield seed;\n        seed = fn(seed, i);\n    }\n}\n","import { ensureArrayLike } from \"@thi.ng/arrays/ensure-array\";\nimport { illegalArgs } from \"@thi.ng/errors/illegal-arguments\";\nimport { range } from \"./range.js\";\nexport function* permutations(...src) {\n    const n = src.length - 1;\n    if (n < 0) {\n        return;\n    }\n    const step = new Array(n + 1).fill(0);\n    const realized = src.map(ensureArrayLike);\n    const total = realized.reduce((acc, x) => acc * x.length, 1);\n    for (let i = 0; i < total; i++) {\n        const tuple = [];\n        for (let j = n; j >= 0; j--) {\n            const r = realized[j];\n            let s = step[j];\n            if (s === r.length) {\n                step[j] = s = 0;\n                j > 0 && step[j - 1]++;\n            }\n            tuple[j] = r[s];\n        }\n        step[n]++;\n        yield tuple;\n    }\n}\n/**\n * Iterator yielding the Cartesian Product for `n` items of `m` values\n * each.\n *\n * @remarks\n * If `m` is not given, defaults to value of `n`. The range of `m` is\n * `0..m-1`. The optional `offsets` array can be used to define start\n * values for each dimension.\n *\n * @example\n * ```ts\n * [...permutationsN(2)]\n * // [ [0, 0], [0, 1], [1, 0], [1, 1] ]\n *\n * [...permutationsN(2, 3)]\n * // [ [0, 0], [0, 1], [0, 2],\n * //   [1, 0], [1, 1], [1, 2],\n * //   [2, 0], [2, 1], [2, 2] ]\n *\n * [...permutationsN(2, 2, [10, 20])]\n * // [ [ 10, 20 ], [ 10, 21 ], [ 11, 20 ], [ 11, 21 ] ]\n * ```\n *\n * @param n -\n * @param m -\n * @param offsets -\n */\nexport const permutationsN = (n, m = n, offsets) => {\n    if (offsets && offsets.length < n) {\n        illegalArgs(`insufficient offsets, got ${offsets.length}, needed ${n}`);\n    }\n    const seqs = [];\n    while (n-- > 0) {\n        const o = offsets ? offsets[n] : 0;\n        seqs[n] = range(o, o + m);\n    }\n    return permutations.apply(null, seqs);\n};\n","/**\n * Iterator yielding an infinite (by default) repetition of given value\n * `x`. If `n` is given, only produces that many values.\n *\n * See also: {@link repeatedly}\n *\n * @example\n * ```ts\n * [...repeat(42, 5)]\n * // [42, 42, 42, 42, 42]\n * ```\n *\n * @param x - value to repeat\n * @param n - num values (default: ∞)\n */\nexport function* repeat(x, n = Infinity) {\n    while (n-- > 0) {\n        yield x;\n    }\n}\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VVN, MATH2_N } from \"./compile/templates.js\";\n/**\n * Returns `out = (a + b) * n`.\n */\nexport const [addmN, addmN2, addmN3, addmN4] = defOp(MATH2_N(\"+\", \"*\"), ARGS_VVN);\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VVV, MATH2 } from \"./compile/templates.js\";\n/**\n * Returns `out = a * b + c`.\n *\n * - {@link addm}\n * - {@link maddN}\n *\n * @param out -\n * @param a -\n * @param b -\n * @param c -\n */\nexport const [madd, madd2, madd3, madd4] = defOp(MATH2(\"*\", \"+\"), ARGS_VVV);\n","import { defMathOpN } from \"./compile/emit.js\";\nexport const [mulN, mulN2, mulN3, mulN4] = defMathOpN(\"*\");\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VVN, MATH2_N } from \"./compile/templates.js\";\n/**\n * Returns `out = (a - b) * n`.\n */\nexport const [submN, submN2, submN3, submN4] = defOp(MATH2_N(\"-\", \"*\"), ARGS_VVN);\n","import { EPS } from \"@thi.ng/math/api\";\nimport { addmN } from \"@thi.ng/vectors/addmn\";\nimport { submN } from \"@thi.ng/vectors/submn\";\nimport { NdQuadtreeMap } from \"./nd-quadtree-map.js\";\nexport class NdQuadtreeSet {\n    constructor(pos, ext, keys) {\n        this.tree = new NdQuadtreeMap(pos, ext);\n        this._size = 0;\n        keys && this.into(keys);\n    }\n    /**\n     * Returns a new point-based `NdQuadtreeSet` for nD keys in given\n     * region defined by `min` / `max` coordinates. The dimensionality\n     * of the tree is implicitly defined by the provided coordinates.\n     * Only points within that region can be indexed.\n     *\n     * @remarks\n     * Due to exponentially growing lookup tables, currently only\n     * supports up to 16 dimensions.\n     */\n    static fromMinMax(min, max) {\n        return new NdQuadtreeSet(addmN([], min, max, 0.5), submN([], max, min, 0.5));\n    }\n    [Symbol.iterator]() {\n        return this.tree.keys();\n    }\n    keys() {\n        return this.tree.keys();\n    }\n    values() {\n        return this.tree.values();\n    }\n    get size() {\n        return this._size;\n    }\n    copy() {\n        return new NdQuadtreeSet(this.tree.root.pos, this.tree.root.ext, this);\n    }\n    clear() {\n        this.tree.clear();\n    }\n    empty() {\n        return new NdQuadtreeSet(this.tree.root.pos, this.tree.root.ext);\n    }\n    add(key, eps = EPS) {\n        return this.tree.set(key, key, eps);\n    }\n    into(keys, eps = EPS) {\n        let ok = true;\n        const tree = this.tree;\n        for (let k of keys) {\n            ok = tree.set(k, k, eps) && ok;\n        }\n        return ok;\n    }\n    remove(key) {\n        return this.tree.remove(key);\n    }\n    has(key, eps = EPS) {\n        return this.tree.has(key, eps);\n    }\n    get(key, eps) {\n        return this.tree.get(key, eps);\n    }\n    query(q, maxDist, limit, acc) {\n        return this.tree.query(q, maxDist, limit, acc);\n    }\n    queryKeys(q, maxDist, limit, acc) {\n        return this.tree.queryKeys(q, maxDist, limit, acc);\n    }\n    queryValues(q, maxDist, limit, acc) {\n        return this.tree.queryKeys(q, maxDist, limit, acc);\n    }\n}\n","import { isNumber } from \"@thi.ng/checks/is-number\";\nimport { Heap } from \"@thi.ng/heaps/heap\";\nimport { clamp } from \"@thi.ng/math/interval\";\nimport { addN2 } from \"@thi.ng/vectors/addn\";\nimport { distSq2 } from \"@thi.ng/vectors/distsq\";\nimport { subN2 } from \"@thi.ng/vectors/subn\";\nimport { ASpatialGrid } from \"./aspatial-grid.js\";\nimport { addResults, CMP } from \"./utils.js\";\nconst TMP = [];\nexport class SpatialGrid2 extends ASpatialGrid {\n    constructor(min, size, res) {\n        super(min, size, isNumber(res) ? [res, res] : res);\n        this._cells = new Array(this._res[0] * this._res[1]);\n    }\n    copy() {\n        return super.copy();\n    }\n    empty() {\n        return new SpatialGrid2(this._min, this._size, this._res);\n    }\n    doQuery(fn, k, r, limit = Infinity, acc = []) {\n        const id1 = this.findIndex(subN2(TMP, k, r));\n        const id2 = this.findIndex(addN2(TMP, k, r));\n        const stride = this._res[0];\n        const x1 = id1 % stride;\n        const x2 = id2 % stride;\n        const y1 = ((id1 / stride) | 0) * stride;\n        const y2 = ((id2 / stride) | 0) * stride;\n        const cells = this._cells;\n        let c;\n        let x, y;\n        r *= r;\n        const heap = new Heap([[r]], {\n            compare: CMP,\n        });\n        const sel = heap.values;\n        for (y = y1; y <= y2; y += stride) {\n            for (x = x1; x <= x2; x++) {\n                c = cells[y + x];\n                c && c.length && this.queryCell(distSq2, heap, c, k, limit);\n            }\n        }\n        return addResults(fn, sel, acc);\n    }\n    findIndex(k) {\n        const { _min: min, _res1: res1, _invSize: invSize } = this;\n        const kx = clamp((k[0] - min[0]) * invSize[0], 0, res1[0]);\n        const ky = clamp((k[1] - min[1]) * invSize[1], 0, res1[1]);\n        return (kx | 0) + (ky | 0) * this._res[0];\n    }\n}\n","export const isNumber = (x) => typeof x === \"number\";\n","import { defMathOpN } from \"./compile/emit.js\";\nexport const [addN, addN2, addN3, addN4] = defMathOpN(\"+\");\n","import { defMathOpN } from \"./compile/emit.js\";\nexport const [subN, subN2, subN3, subN4] = defMathOpN(\"-\");\n","import { EPS } from \"@thi.ng/math/api\";\nimport { map } from \"@thi.ng/transducers/map\";\nimport { div } from \"@thi.ng/vectors/div\";\nimport { equals } from \"@thi.ng/vectors/equals\";\nimport { floor } from \"@thi.ng/vectors/floor\";\nimport { subN } from \"@thi.ng/vectors/subn\";\nimport { into } from \"./utils.js\";\n/**\n * Common base class for {@link SpatialGrid2} and {@link SpatialGrid3}.\n *\n * @internal\n */\nexport class ASpatialGrid {\n    constructor(_min, _size, _res) {\n        this._min = _min;\n        this._size = _size;\n        this._res = _res;\n        floor(null, this._res);\n        this._res1 = subN([], this._res, 1);\n        this._invSize = div([], this._res, _size);\n        this._num = 0;\n    }\n    get size() {\n        return this._num;\n    }\n    *[Symbol.iterator]() {\n        const cells = this._cells;\n        for (let i = cells.length; i-- > 0;) {\n            if (cells[i])\n                yield* cells[i];\n        }\n    }\n    keys() {\n        return map((p) => p[0], this);\n    }\n    values() {\n        return map((p) => p[1], this);\n    }\n    copy() {\n        const copy = this.empty();\n        copy._num = this._num;\n        const src = this._cells;\n        const dest = copy._cells;\n        for (let i = src.length; i-- > 0;) {\n            dest[i] = src[i] ? src[i].slice() : null;\n        }\n        return copy;\n    }\n    clear() {\n        this._cells.fill(null);\n        this._num = 0;\n    }\n    has(k, eps = EPS) {\n        return !!this.find(k, eps);\n    }\n    get(k, eps = EPS) {\n        const pair = this.find(k, eps);\n        return pair ? pair[1] : undefined;\n    }\n    set(k, v, eps = EPS) {\n        if (eps >= 0 && this.query(k, eps, 1).length)\n            return false;\n        const id = this.findIndex(k);\n        const cell = this._cells[id];\n        if (!cell) {\n            this._cells[id] = [[k, v]];\n        }\n        else {\n            cell.push([k, v]);\n        }\n        this._num++;\n        return true;\n    }\n    into(pairs, eps = EPS) {\n        return into(this, pairs, eps);\n    }\n    remove(k) {\n        const id = this.findIndex(k);\n        const cell = this._cells[id];\n        if (!cell)\n            return false;\n        for (let i = cell.length; i-- > 0;) {\n            if (equals(cell[i][0], k)) {\n                cell.splice(i, 1);\n                this._num--;\n                return true;\n            }\n        }\n        return false;\n    }\n    query(q, radius, limit, acc) {\n        return this.doQuery((p) => p, q, radius, limit, acc);\n    }\n    queryKeys(q, radius, limit, acc) {\n        return this.doQuery((p) => p[0], q, radius, limit, acc);\n    }\n    queryValues(q, radius, limit, acc) {\n        return this.doQuery((p) => p[1], q, radius, limit, acc);\n    }\n    queryCell(dist, heap, c, k, limit) {\n        for (let i = c.length; i-- > 0;) {\n            const d = dist(c[i][0], k);\n            if (d <= heap.values[0][0]) {\n                heap.length >= limit\n                    ? heap.pushPop([d, c[i]])\n                    : heap.push([d, c[i]]);\n            }\n        }\n    }\n    find(k, eps) {\n        if (eps > 0) {\n            const res = this.query(k, EPS, 1);\n            return res.length ? res[0] : undefined;\n        }\n        const cell = this._cells[this.findIndex(k)];\n        if (cell) {\n            for (let i = cell.length; i-- > 0;) {\n                if (equals(cell[i][0], k))\n                    return cell[i];\n            }\n        }\n    }\n}\n","import { defMathOp } from \"./compile/emit.js\";\nexport const [div, div2, div3, div4] = defMathOp(\"/\");\n","import { equivArrayLike } from \"@thi.ng/equiv\";\nimport { vop } from \"./vop.js\";\nexport const equals = vop(0);\nexport const equals2 = equals.add(2, (a, b) => a[0] === b[0] && a[1] === b[1]);\nexport const equals3 = equals.add(3, (a, b) => a[0] === b[0] && a[1] === b[1] && a[2] === b[2]);\nexport const equals4 = equals.add(4, (a, b) => a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3]);\nequals.default(equivArrayLike);\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [floor, floor2, floor3, floor4] = defFnOp(\"Math.floor\");\n","import { isNumber } from \"@thi.ng/checks/is-number\";\nimport { Heap } from \"@thi.ng/heaps/heap\";\nimport { clamp } from \"@thi.ng/math/interval\";\nimport { addN3 } from \"@thi.ng/vectors/addn\";\nimport { distSq3 } from \"@thi.ng/vectors/distsq\";\nimport { subN3 } from \"@thi.ng/vectors/subn\";\nimport { ASpatialGrid } from \"./aspatial-grid.js\";\nimport { addResults, CMP } from \"./utils.js\";\nconst TMP = [];\nexport class SpatialGrid3 extends ASpatialGrid {\n    constructor(min, size, res) {\n        super(min, size, isNumber(res) ? [res, res, res] : res);\n        this._cells = new Array(this._res[0] * this._res[1] * this._res[2]);\n        this._stride = [this._res[0], this._res[0] * this._res[1]];\n    }\n    copy() {\n        return super.copy();\n    }\n    empty() {\n        return new SpatialGrid3(this._min, this._size, this._res);\n    }\n    doQuery(fn, k, r, limit = Infinity, acc = []) {\n        const id1 = this.findIndex(subN3(TMP, k, r));\n        const id2 = this.findIndex(addN3(TMP, k, r));\n        const [width, slice] = this._stride;\n        const x1 = id1 % width;\n        const x2 = id2 % width;\n        const y1 = ((id1 / width) | 0) * width;\n        const y2 = ((id2 / width) | 0) * width;\n        const z1 = ((id1 / slice) | 0) * slice;\n        const z2 = ((id2 / slice) | 0) * slice;\n        const cells = this._cells;\n        let c;\n        let x, y, z;\n        r *= r;\n        const heap = new Heap([[r]], {\n            compare: CMP,\n        });\n        const sel = heap.values;\n        for (z = z1; z <= z2; z += slice) {\n            for (y = y1; y <= y2; y += width) {\n                for (x = x1; x <= x2; x++) {\n                    c = cells[z + y + x];\n                    c && c.length && this.queryCell(distSq3, heap, c, k, limit);\n                }\n            }\n        }\n        return addResults(fn, sel, acc);\n    }\n    findIndex(k) {\n        const { _min: min, _res1: res1, _invSize: invSize } = this;\n        const kx = clamp((k[0] - min[0]) * invSize[0], 0, res1[0]);\n        const ky = clamp((k[1] - min[1]) * invSize[1], 0, res1[1]);\n        const kz = clamp((k[2] - min[2]) * invSize[2], 0, res1[2]);\n        return ((kx | 0) + (ky | 0) * this._stride[0] + (kz | 0) * this._stride[1]);\n    }\n}\n","export * from \"./api.js\";\nexport * from \"./poisson.js\";\nexport * from \"./stratified.js\";\n","export {};\n","import { isNumber } from \"@thi.ng/checks/is-number\";\nimport { SYSTEM } from \"@thi.ng/random/system\";\nimport { jitter as _jitter } from \"@thi.ng/vectors/jitter\";\n/**\n * Produces a number of Poisson-disk samples based on given\n * configuration.\n *\n * @param opts -\n */\nexport const samplePoisson = (_opts) => {\n    const opts = {\n        rnd: SYSTEM,\n        iter: 1,\n        jitter: 1,\n        quality: 500,\n        ..._opts,\n    };\n    const { points, index, rnd, jitter, quality, density: _d } = opts;\n    const density = isNumber(_d) ? () => _d : _d;\n    const iter = Math.max(opts.iter, 1);\n    const samples = [];\n    let failed = 0;\n    let pos;\n    let d;\n    let i;\n    outer: for (let num = opts.max; num > 0;) {\n        pos = points(rnd);\n        d = density(pos);\n        i = iter;\n        while (i-- > 0) {\n            if (!index.has(pos, d)) {\n                index.add(pos, 0);\n                samples.push(pos);\n                failed = 0;\n                num--;\n                continue outer;\n            }\n            _jitter(null, pos, jitter, rnd);\n        }\n        if (++failed > quality) {\n            break;\n        }\n    }\n    return samples;\n};\n","import { ARandom } from \"./arandom.js\";\nconst random = Math.random;\n/**\n * A `Math.random()` based {@link IRandom} implementation. Also @see\n * {@link SYSTEM}.\n */\nexport class SystemRandom extends ARandom {\n    int() {\n        return (random() * 4294967296) /* 2**32 */ >>> 0;\n    }\n    float(norm = 1) {\n        return random() * norm;\n    }\n    norm(norm = 1) {\n        return (random() - 0.5) * 2 * norm;\n    }\n}\n/**\n * Used as default PRNG throughout most other thi.ng projects, though usually is\n * configurable.\n */\nexport const SYSTEM = new SystemRandom();\n","const INV_MAX = 1 / 2 ** 32;\nexport class ARandom {\n    float(norm = 1) {\n        return this.int() * INV_MAX * norm;\n    }\n    norm(norm = 1) {\n        return (this.int() * INV_MAX - 0.5) * 2 * norm;\n    }\n    minmax(min, max) {\n        return this.float() * (max - min) + min;\n    }\n    minmaxInt(min, max) {\n        min |= 0;\n        max |= 0;\n        return min + ((this.float() * (max - min)) | 0);\n    }\n}\n","import { SYSTEM } from \"@thi.ng/random/system\";\nimport { add } from \"./add.js\";\nimport { randNorm } from \"./random.js\";\nexport const jitter = (out, a, n = 1, rnd = SYSTEM) => add(out, a, randNorm(new Array(a.length), n, rnd));\n","import { defMathOp } from \"./compile/emit.js\";\nexport const [add, add2, add3, add4] = defMathOp(\"+\");\n","import { normal } from \"@thi.ng/random/distributions/normal\";\nimport { SYSTEM } from \"@thi.ng/random/system\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { NEW_OUT_A } from \"./index.js\";\nimport { normalize } from \"./normalize.js\";\n/**\n * Sets `v` to random vector, with each component in interval `[n..m)`. If no\n * `rnd` instance is given, uses {@link @thi.ng/random#SYSTEM}, i.e.\n * `Math.random`. Creates new vector if `v` is null.\n *\n * @remarks\n * The non-fixed sized version of this function can ONLY be used if `v` is given\n * and initialized to the desired size/length.\n *\n * @param v -\n * @param n - default -1\n * @param m - default 1\n * @param rnd -\n */\nexport const [random, random2, random3, random4] = defHofOp(SYSTEM, ([a]) => `${a}=rnd.minmax(n,m);`, \"a,n=-1,m=1,rnd=op\", \"a\", \"a\", 0, NEW_OUT_A);\n/**\n * Sets `v` to random vector, with each component drawn from given random\n * distribution function (default: gaussian/normal distribution) and scaled to\n * `n` (default: 1). Creates new vector if `v` is null.\n *\n * @remarks\n * The non-fixed sized version of this function can ONLY be used if `v` is given\n * and initialized to the desired size/length.\n *\n * References:\n * - https://docs.thi.ng/umbrella/random/#random-distributions\n * - https://docs.thi.ng/umbrella/random/modules.html#normal\n *\n * @param v -\n * @param rnd -\n * @param n - default 1\n */\nexport const [randomDistrib, randomDistrib2, randomDistrib3, randomDistrib4] = defHofOp(normal, ([a]) => `${a}=rnd()*n;`, \"a,rnd=op(),n=1\", \"a\", \"a\", 0, NEW_OUT_A);\nconst $norm = (random) => (v, n = 1, rnd = SYSTEM) => normalize(null, random(v, -1, 1, rnd), n);\nconst $normDist = (random) => (v, rnd, n = 1) => normalize(null, random(v, rnd), n);\n/**\n * Sets `v` to a random vector (using {@link random}), normalized to length `n`\n * (default: 1). If no `rnd` instance is given, uses\n * {@link @thi.ng/random#SYSTEM}, i.e. `Math.random`.\n *\n * @remarks\n * The non-fixed sized version of this function can ONLY be used if `v` is given\n * and initialized to the desired size/length.\n *\n * @param v -\n * @param n -\n * @param rnd -\n */\nexport const randNorm = $norm(random);\nexport const randNorm2 = $norm(random2);\nexport const randNorm3 = $norm(random3);\nexport const randNorm4 = $norm(random4);\n/**\n * Similar to {@link randNorm} but wraps {@link randomDistrib} which draws\n * samples from given distribution function (default: gaussian/normal\n * distribution).\n *\n * @remarks\n * The non-fixed sized version of this function can ONLY be used if `v` is given\n * and initialized to the desired size/length.\n */\nexport const randNormDistrib = $normDist(randomDistrib);\nexport const randNormDistrib2 = $normDist(randomDistrib2);\nexport const randNormDistrib3 = $normDist(randomDistrib3);\nexport const randNormDistrib4 = $normDist(randomDistrib4);\n/**\n * Sets `out` to random vector with each component in the semi-open\n * interval defined by [min,max).\n *\n * @param out -\n * @param min -\n * @param max -\n * @param rnd -\n */\nexport const [randMinMax, randMinMax2, randMinMax3, randMinMax4] = defHofOp(SYSTEM, ([o, a, b]) => `${o}=rnd.minmax(${a},${b});`, \"o,a,b,rnd=op\", \"o,a,b\");\n","import { SYSTEM } from \"../system.js\";\n/**\n * HOF. Returns zero-arg function, yielding values with normal distribution\n * for given `bias` and standard deviation `sigma`.\n *\n * @remarks\n * Also see {@link gaussian} for alternative implementation.\n *\n * @param rnd -\n * @param bias -\n * @param sigma -\n */\nexport const normal = (rnd = SYSTEM, bias = 0, sigma = 1) => {\n    let a;\n    let b;\n    let r;\n    return () => {\n        if (a != null) {\n            b = a;\n            a = null;\n        }\n        else {\n            do {\n                a = rnd.norm();\n                b = rnd.norm();\n                r = a * a + b * b;\n            } while (r > 1 || r === 0);\n        }\n        return bias + sigma * b * Math.sqrt((-2 * Math.log(r)) / r);\n    };\n};\n","export * from \"./api.js\";\nexport * from \"./iterator.js\";\nexport * from \"./compile/accessors.js\";\nexport * from \"./compile/emit.js\";\nexport * from \"./compile/templates.js\";\nexport * from \"./avec.js\";\nexport * from \"./vec2.js\";\nexport * from \"./vec3.js\";\nexport * from \"./vec4.js\";\nexport * from \"./vop.js\";\nexport * from \"./abs.js\";\nexport * from \"./acos.js\";\nexport * from \"./addw.js\";\nexport * from \"./add.js\";\nexport * from \"./addi.js\";\nexport * from \"./addm.js\";\nexport * from \"./addmn.js\";\nexport * from \"./addms.js\";\nexport * from \"./addmns.js\";\nexport * from \"./addn.js\";\nexport * from \"./adds.js\";\nexport * from \"./addns.js\";\nexport * from \"./angle-between.js\";\nexport * from \"./asin.js\";\nexport * from \"./atan.js\";\nexport * from \"./bisect.js\";\nexport * from \"./bit-and.js\";\nexport * from \"./bit-not.js\";\nexport * from \"./bit-or.js\";\nexport * from \"./bit-xor.js\";\nexport * from \"./buffer.js\";\nexport * from \"./cartesian.js\";\nexport * from \"./ceil.js\";\nexport * from \"./center.js\";\nexport * from \"./clamp.js\";\nexport * from \"./clampn.js\";\nexport * from \"./clockwise.js\";\nexport * from \"./compare.js\";\nexport * from \"./convert.js\";\nexport * from \"./copy.js\";\nexport * from \"./correlation.js\";\nexport * from \"./cos.js\";\nexport * from \"./cosh.js\";\nexport * from \"./covariance.js\";\nexport * from \"./cross.js\";\nexport * from \"./crosss.js\";\nexport * from \"./degrees.js\";\nexport * from \"./direction.js\";\nexport * from \"./dist.js\";\nexport * from \"./dist-braycurtis.js\";\nexport * from \"./dist-canberra.js\";\nexport * from \"./dist-chebyshev.js\";\nexport * from \"./dist-hamming.js\";\nexport * from \"./dist-haversine.js\";\nexport * from \"./dist-jaccard.js\";\nexport * from \"./dist-manhattan.js\";\nexport * from \"./dist-minkowski.js\";\nexport * from \"./dist-sorensendice.js\";\nexport * from \"./dist-weighted.js\";\nexport * from \"./distsq.js\";\nexport * from \"./div.js\";\nexport * from \"./divi.js\";\nexport * from \"./divn.js\";\nexport * from \"./divs.js\";\nexport * from \"./divns.js\";\nexport * from \"./dot.js\";\nexport * from \"./dotc.js\";\nexport * from \"./dots.js\";\nexport * from \"./empty.js\";\nexport * from \"./eqdelta.js\";\nexport * from \"./equals.js\";\nexport * from \"./every.js\";\nexport * from \"./exp.js\";\nexport * from \"./exp_2.js\";\nexport * from \"./face-forward.js\";\nexport * from \"./fill.js\";\nexport * from \"./fit.js\";\nexport * from \"./floor.js\";\nexport * from \"./fmod.js\";\nexport * from \"./fmodn.js\";\nexport * from \"./fract.js\";\nexport * from \"./gvec.js\";\nexport * from \"./hash.js\";\nexport * from \"./heading.js\";\nexport * from \"./heading-segment.js\";\nexport * from \"./homogeneous.js\";\nexport * from \"./invert.js\";\nexport * from \"./invsqrt.js\";\nexport * from \"./is-inf.js\";\nexport * from \"./is-nan.js\";\nexport * from \"./jitter.js\";\nexport * from \"./limit.js\";\nexport * from \"./log.js\";\nexport * from \"./log_2.js\";\nexport * from \"./logic-and.js\";\nexport * from \"./logic-not.js\";\nexport * from \"./logic-or.js\";\nexport * from \"./lshift.js\";\nexport * from \"./madd.js\";\nexport * from \"./maddn.js\";\nexport * from \"./madds.js\";\nexport * from \"./maddns.js\";\nexport * from \"./mag.js\";\nexport * from \"./mags.js\";\nexport * from \"./magsq.js\";\nexport * from \"./magsqs.js\";\nexport * from \"./major.js\";\nexport * from \"./map.js\";\nexport * from \"./map-vectors.js\";\nexport * from \"./max.js\";\nexport * from \"./max-bounds.js\";\nexport * from \"./mean.js\";\nexport * from \"./median.js\";\nexport * from \"./min.js\";\nexport * from \"./min-bounds.js\";\nexport * from \"./minor.js\";\nexport * from \"./mix-bilinear.js\";\nexport * from \"./mix-cubic.js\";\nexport * from \"./mix-hermite.js\";\nexport * from \"./mix-quadratic.js\";\nexport * from \"./mix.js\";\nexport * from \"./mixn.js\";\nexport * from \"./mixs.js\";\nexport * from \"./mixns.js\";\nexport * from \"./mod.js\";\nexport * from \"./modn.js\";\nexport * from \"./msub.js\";\nexport * from \"./msubn.js\";\nexport * from \"./msubs.js\";\nexport * from \"./msubns.js\";\nexport * from \"./mul.js\";\nexport * from \"./muli.js\";\nexport * from \"./muln.js\";\nexport * from \"./muls.js\";\nexport * from \"./mulns.js\";\nexport * from \"./neg.js\";\nexport * from \"./normal.js\";\nexport * from \"./normalize.js\";\nexport * from \"./normalizes.js\";\nexport * from \"./not.js\";\nexport * from \"./ortho-normal.js\";\nexport * from \"./perpendicular.js\";\nexport * from \"./point-on-ray.js\";\nexport * from \"./polar.js\";\nexport * from \"./pow.js\";\nexport * from \"./pown.js\";\nexport * from \"./project.js\";\nexport * from \"./radians.js\";\nexport * from \"./random.js\";\nexport * from \"./randoms.js\";\nexport * from \"./reflect.js\";\nexport * from \"./refract.js\";\nexport * from \"./remainder.js\";\nexport * from \"./remaindern.js\";\nexport * from \"./rotate-around-axis.js\";\nexport * from \"./rotate-around-point.js\";\nexport * from \"./rotate.js\";\nexport * from \"./rotates.js\";\nexport * from \"./round.js\";\nexport * from \"./rshift.js\";\nexport * from \"./safe-div.js\";\nexport * from \"./select.js\";\nexport * from \"./set.js\";\nexport * from \"./setc.js\";\nexport * from \"./setn.js\";\nexport * from \"./sets.js\";\nexport * from \"./setcs.js\";\nexport * from \"./setns.js\";\nexport * from \"./setvn.js\";\nexport * from \"./setvv.js\";\nexport * from \"./sign.js\";\nexport * from \"./signed-area.js\";\nexport * from \"./signed-volume.js\";\nexport * from \"./sin.js\";\nexport * from \"./sinh.js\";\nexport * from \"./softmax.js\";\nexport * from \"./some.js\";\nexport * from \"./sqrt.js\";\nexport * from \"./step.js\";\nexport * from \"./smoothstep.js\";\nexport * from \"./standardize.js\";\nexport * from \"./string.js\";\nexport * from \"./sub.js\";\nexport * from \"./subi.js\";\nexport * from \"./subm.js\";\nexport * from \"./submn.js\";\nexport * from \"./subms.js\";\nexport * from \"./submns.js\";\nexport * from \"./subn.js\";\nexport * from \"./subs.js\";\nexport * from \"./subns.js\";\nexport * from \"./sum.js\";\nexport * from \"./swizzle.js\";\nexport * from \"./tan.js\";\nexport * from \"./tanh.js\";\nexport * from \"./tensor.js\";\nexport * from \"./trunc.js\";\nexport * from \"./variance.js\";\nexport * from \"./vec-of.js\";\nexport * from \"./wrap.js\";\nexport * from \"./eq.js\";\nexport * from \"./neq.js\";\nexport * from \"./gt.js\";\nexport * from \"./gte.js\";\nexport * from \"./lt.js\";\nexport * from \"./lte.js\";\n","const mi = -Infinity;\nconst mx = Infinity;\nexport const MIN2 = Object.freeze([mi, mi]);\nexport const MAX2 = Object.freeze([mx, mx]);\nexport const ONE2 = Object.freeze([1, 1]);\nexport const ZERO2 = Object.freeze([0, 0]);\nexport const X2 = Object.freeze([1, 0]);\nexport const Y2 = Object.freeze([0, 1]);\nexport const MIN3 = Object.freeze([mi, mi, mi]);\nexport const MAX3 = Object.freeze([mx, mx, mx]);\nexport const ONE3 = Object.freeze([1, 1, 1]);\nexport const ZERO3 = Object.freeze([0, 0, 0]);\nexport const X3 = Object.freeze([1, 0, 0]);\nexport const Y3 = Object.freeze([0, 1, 0]);\nexport const Z3 = Object.freeze([0, 0, 1]);\nexport const MIN4 = Object.freeze([mi, mi, mi, mi]);\nexport const MAX4 = Object.freeze([mx, mx, mx, mx]);\nexport const ONE4 = Object.freeze([1, 1, 1, 1]);\nexport const ZERO4 = Object.freeze([0, 0, 0, 0]);\nexport const X4 = Object.freeze([1, 0, 0, 0]);\nexport const Y4 = Object.freeze([0, 1, 0, 0]);\nexport const Z4 = Object.freeze([0, 0, 1, 0]);\nexport const W4 = Object.freeze([0, 0, 0, 1]);\n","export function* vecIterator(ctor, buf, num, start, cstride, estride) {\n    while (num-- > 0) {\n        yield new ctor(buf, start, cstride);\n        start += estride;\n    }\n}\nexport function* stridedValues(buf, num, start, stride) {\n    while (num-- > 0) {\n        yield buf[start];\n        start += stride;\n    }\n}\n","/** @internal */\nexport const declareIndex = (proto, id, idx, strided = true, defNumeric = true) => {\n    const get = idx > 0\n        ? strided\n            ? function () {\n                return this.buf[this.offset + idx * this.stride];\n            }\n            : function () {\n                return this.buf[this.offset + idx];\n            }\n        : function () {\n            return this.buf[this.offset];\n        };\n    const set = idx > 0\n        ? strided\n            ? function (n) {\n                this.buf[this.offset + idx * this.stride] = n;\n            }\n            : function (n) {\n                this.buf[this.offset + idx] = n;\n            }\n        : function (n) {\n            this.buf[this.offset] = n;\n        };\n    defNumeric &&\n        Object.defineProperty(proto, idx, {\n            get,\n            set,\n            enumerable: true,\n        });\n    Object.defineProperty(proto, id, {\n        get,\n        set,\n        enumerable: true,\n    });\n};\n/** @internal */\nexport const declareIndices = (proto, props, strided, defNumeric) => props.forEach((id, i) => declareIndex(proto, id, i, strided, defNumeric));\n","import { FORMATTER } from \"./string.js\";\nexport class AVec {\n    constructor(buf, offset = 0, stride = 1) {\n        this.buf = buf;\n        this.offset = offset;\n        this.stride = stride;\n    }\n    toString() {\n        return FORMATTER(this);\n    }\n}\n","import { isFunction } from \"@thi.ng/checks/is-function\";\nimport { float, floatFixedWidth } from \"@thi.ng/strings/float\";\n/**\n * Returns a new generic vector formatter for given options (all optional). The\n * returned function accepts a single vector(like) value and returns its\n * formatted string representation.\n *\n * @remarks\n * See {@link ToStringOpts} for further details. Also see {@link setFormat} to\n * set default formatter.\n *\n * @example\n * ```ts\n * defFormat()([1, -2, 3])\n * // [1.000, -2.000, 3.000]\n *\n * defFormat({ width: 10, wrap: \"||\", delim: \"|\\n|\" })([1, -2, 3])\n * // |     1.000|\n * // |    -2.000|\n * // |     3.000|\n *\n * defFormat({ prec: 5, delim: \" \" })([1, -2, 3])\n * // [1.00000 -2.00000 3.00000]\n * ```\n *\n * @param prec -\n * @param width -\n */\nexport const defFormat = (opts) => {\n    const { prec, width, delim, wrap } = {\n        prec: 3,\n        delim: \", \",\n        wrap: \"[]\",\n        ...opts,\n    };\n    const fmt = width ? floatFixedWidth(width, prec) : float(prec);\n    return (src) => {\n        let res = [];\n        for (let x of src)\n            res.push(fmt(x));\n        return `${wrap[0]}${res.join(delim)}${wrap[1]}`;\n    };\n};\n/**\n * Sets package-wide default vector formatter. See {@link defFormat},\n * {@link FORMATTER}.\n *\n * @param fmt -\n */\nexport const setFormat = (fmt) => {\n    FORMATTER = isFunction(fmt) ? fmt : defFormat(fmt);\n};\n/**\n * Package-wide default vector formatter.\n */\nexport let FORMATTER = defFormat();\n","export const isFunction = (x) => typeof x === \"function\";\n","import { memoizeJ } from \"@thi.ng/memoize/memoizej\";\nimport { padLeft } from \"./pad-left.js\";\n/**\n * Returns {@link Stringer} which formats numbers to given precision. If\n * `special` is true, then exceptional handling for:\n *\n * - NaN => \"NaN\"\n * - Infinity => \"+/-∞\"\n *\n * @param len - number of fractional digits\n * @param special - true, if special handling for NaN/Infinity values\n */\nexport const float = memoizeJ((prec, special = false) => special\n    ? (x) => nanOrInf(x) || x.toFixed(prec)\n    : (x) => x.toFixed(prec));\n/**\n * Similar to `float`, returns {@link Stringer} which formats numbers to given\n * character width & precision. Uses scientific notation if needed.\n *\n * Default precision: 3 fractional digits\n */\nexport const floatFixedWidth = memoizeJ((width, prec = 3) => {\n    const l = width - prec - 1;\n    const pl = Math.pow(10, l);\n    const pln = -Math.pow(10, l - 1);\n    const pr = Math.pow(10, -(prec - 1));\n    const pad = padLeft(width);\n    return (x) => {\n        const ax = Math.abs(x);\n        return pad(nanOrInf(x) ||\n            (x === 0\n                ? \"0\"\n                : ax < pr || ax >= pl\n                    ? exp(x, width)\n                    : x.toFixed(prec - (x < pln ? 1 : 0))));\n    };\n});\nconst exp = (x, w) => x.toExponential(Math.max(w -\n    4 -\n    (Math.log(Math.abs(x)) / Math.LN10 >= 10 ? 2 : 1) -\n    (x < 0 ? 1 : 0), 0));\nconst nanOrInf = (x) => isNaN(x)\n    ? \"NaN\"\n    : x === Infinity\n        ? \"+∞\"\n        : x === -Infinity\n            ? \"-∞\"\n            : undefined;\n","export function memoizeJ(fn, cache) {\n    !cache && (cache = {});\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (key !== undefined) {\n            return key in cache\n                ? cache[key]\n                : (cache[key] = fn.apply(null, args));\n        }\n        return fn.apply(null, args);\n    };\n}\n","import { memoizeJ } from \"@thi.ng/memoize/memoizej\";\nimport { repeat } from \"./repeat.js\";\n/**\n * @param n - target length\n * @param ch - pad character(s)\n */\nexport const padLeft = memoizeJ((n, ch = \" \") => {\n    const buf = repeat(String(ch), n);\n    return (x, len) => {\n        if (x == null)\n            return buf;\n        x = x.toString();\n        len = len !== undefined ? len : x.length;\n        return len < n ? buf.substring(len) + x : x;\n    };\n});\n/**\n * Zero-padded 2 digit formatter.\n */\nexport const Z2 = padLeft(2, \"0\");\n/**\n * Zero-padded 3 digit formatter.\n */\nexport const Z3 = padLeft(3, \"0\");\n/**\n * Zero-padded 4 digit formatter.\n */\nexport const Z4 = padLeft(4, \"0\");\n","import { memoizeJ } from \"@thi.ng/memoize/memoizej\";\n/**\n * @param ch - character\n * @param n - repeat count\n */\nexport const repeat = memoizeJ((ch, n) => ch.repeat(n));\n","import { EPS } from \"@thi.ng/math/api\";\nimport { declareIndices } from \"./compile/accessors.js\";\nimport { MAX2, MIN2, ONE2, X2, Y2, ZERO2, } from \"./api.js\";\nimport { AVec } from \"./avec.js\";\nimport { intoStridedBuffer, mapStridedBuffer } from \"./buffer.js\";\nimport { eqDelta2 } from \"./eqdelta.js\";\nimport { hash } from \"./hash.js\";\nimport { stridedValues, vecIterator } from \"./iterator.js\";\nimport { setS2 } from \"./sets.js\";\nexport class Vec2 extends AVec {\n    constructor(buf, offset = 0, stride = 1) {\n        super(buf || [0, 0], offset, stride);\n    }\n    /**\n     * Returns array of memory mapped {@link Vec2} instances using given\n     * backing array and stride settings: The `cstride` is the step size\n     * between individual XY vector components. `estride` is the step\n     * size between successive vectors. This arrangement allows for\n     * different storage approaches, incl. SOA, AOS, striped /\n     * interleaved etc.\n     *\n     * @param buf - backing array\n     * @param num - num vectors\n     * @param start -  start index\n     * @param cstride - component stride\n     * @param estride - element stride\n     */\n    static mapBuffer(buf, num = buf.length >> 1, start = 0, cstride = 1, estride = 2) {\n        return mapStridedBuffer(Vec2, buf, num, start, cstride, estride);\n    }\n    /**\n     * Merges given `src` iterable of {@link Vec2}s into single array `buf`.\n     * Vectors will be arranged according to given component and element\n     * strides, starting at `start` index. It's the user's\n     * responsibility to ensure the target buffer has sufficient\n     * capacity to hold the input vectors. See `Vec2.mapBuffer` for the\n     * inverse operation. Returns `buf`.\n     *\n     * @param buf -\n     * @param src -\n     * @param start -\n     * @param cstride -\n     * @param estride -\n     */\n    static intoBuffer(buf, src, start = 0, cstride = 1, estride = 2) {\n        return intoStridedBuffer(setS2, buf, src, start, cstride, estride);\n    }\n    static iterator(buf, num, start = 0, cstride = 1, estride = 2) {\n        return vecIterator(Vec2, buf, num, start, cstride, estride);\n    }\n    [Symbol.iterator]() {\n        return stridedValues(this.buf, 2, this.offset, this.stride);\n    }\n    get length() {\n        return 2;\n    }\n    copy() {\n        return new Vec2([this.x, this.y]);\n    }\n    copyView() {\n        return new Vec2(this.buf, this.offset, this.stride);\n    }\n    empty() {\n        return new Vec2();\n    }\n    eqDelta(v, eps = EPS) {\n        return eqDelta2(this, v, eps);\n    }\n    hash() {\n        return hash(this);\n    }\n    toJSON() {\n        return [this.x, this.y];\n    }\n}\nVec2.X_AXIS = new Vec2(X2);\nVec2.Y_AXIS = new Vec2(Y2);\nVec2.MIN = new Vec2(MIN2);\nVec2.MAX = new Vec2(MAX2);\nVec2.ZERO = new Vec2(ZERO2);\nVec2.ONE = new Vec2(ONE2);\ndeclareIndices(Vec2.prototype, [\"x\", \"y\"]);\nexport const vec2 = (x = 0, y = 0) => new Vec2([x, y]);\nexport const vec2n = (n) => new Vec2([n, n]);\nexport const asVec2 = (x) => x instanceof Vec2\n    ? x\n    : new Vec2(x.length >= 2 ? x : [x[0] || 0, x[1] || 0]);\n","import { SIZEOF, typedArray } from \"@thi.ng/api/typedarray\";\n/**\n * Takes an `ArrayBuffer` and creates a number of typed array vector\n * views of `type` with given `size` (number of elements per vector) and\n * spacing. `byteOffset` defines the start offset for the first vector\n * and `byteStride` the number of bytes between resulting vectors\n * (defaults to `size * SIZEOF[type]`). It's user's responsibility to\n * ensure these two values are compatible with the chosen array type\n * (i.e. for `\"f32\"`, these MUST be multiples of 4).\n *\n * @example\n * ```ts\n * mapBuffer(\"f32\", new ArrayBuffer(32), 4, 2)\n * // [\n * //   Float32Array [ 0, 0 ],\n * //   Float32Array [ 0, 0 ],\n * //   Float32Array [ 0, 0 ],\n * //   Float32Array [ 0, 0 ]\n * // ]\n * ```\n *\n * @param type -\n * @param buf -\n * @param num -\n * @param size -\n * @param byteOffset -\n * @param byteStride -\n */\nexport const mapBuffer = (type, buf, num, size, byteOffset = 0, byteStride = size * SIZEOF[type]) => {\n    const res = [];\n    for (; num-- > 0; byteOffset += byteStride) {\n        res.push(typedArray(type, buf, byteOffset, size));\n    }\n    return res;\n};\n/**\n * Writes given `src` vector values into mapped `ArrayBuffer` of stated\n * `type` and from given offset & stride/spacing.\n *\n * {@link mapBuffer}\n *\n * @param type -\n * @param buf -\n * @param src -\n * @param byteOffset -\n * @param byteStride -\n */\nexport const intoBuffer = (type, buf, src, byteOffset, byteStride) => {\n    const view = typedArray(type, buf);\n    const size = SIZEOF[type];\n    byteOffset /= size;\n    byteStride /= size;\n    for (let x of src) {\n        view.set(x, byteOffset);\n        byteOffset += byteStride;\n    }\n};\nexport const mapStridedBuffer = (ctor, buf, num, start, cstride, estride) => {\n    const res = [];\n    while (num-- > 0) {\n        res.push(new ctor(buf, start, cstride));\n        start += estride;\n    }\n    return res;\n};\nexport const intoStridedBuffer = (set, buf, src, start, cstride, estride) => {\n    for (let v of src) {\n        set(buf, v, start, 0, cstride, 1);\n        start += estride;\n    }\n    return buf;\n};\n","/**\n * WebGL numeric type constants. Use {@link GL2TYPE} to convert, if needed.\n *\n * {@link Type}\n * {@link GL2TYPE}\n * {@link TYPE2GL}\n */\nexport var GLType;\n(function (GLType) {\n    GLType[GLType[\"I8\"] = 5120] = \"I8\";\n    GLType[GLType[\"U8\"] = 5121] = \"U8\";\n    GLType[GLType[\"I16\"] = 5122] = \"I16\";\n    GLType[GLType[\"U16\"] = 5123] = \"U16\";\n    GLType[GLType[\"I32\"] = 5124] = \"I32\";\n    GLType[GLType[\"U32\"] = 5125] = \"U32\";\n    GLType[GLType[\"F32\"] = 5126] = \"F32\";\n})(GLType || (GLType = {}));\n/**\n * Conversion from {@link GLType} to {@link Type} enums.\n */\nexport const GL2TYPE = {\n    [GLType.I8]: \"i8\",\n    [GLType.U8]: \"u8\",\n    [GLType.I16]: \"i16\",\n    [GLType.U16]: \"u16\",\n    [GLType.I32]: \"i32\",\n    [GLType.U32]: \"u32\",\n    [GLType.F32]: \"f32\",\n};\n/**\n * Potentially lossy conversion from {@link Type} to {@link GLType} enums.\n *\n * Not all enums are mappable:\n *\n * - `F64` maps to `undefined`, since unsupported by WebGL\n * - `U8C` maps to \"u8\"\n */\nexport const TYPE2GL = {\n    i8: GLType.I8,\n    u8: GLType.U8,\n    u8c: GLType.U8,\n    i16: GLType.I16,\n    u16: GLType.U16,\n    i32: GLType.I32,\n    u32: GLType.U32,\n    f32: GLType.F32,\n    f64: undefined,\n};\n/**\n * Size information (in bytes) for {@link Type}. Also see {@link sizeOf}.\n */\nexport const SIZEOF = {\n    u8: 1,\n    u8c: 1,\n    i8: 1,\n    u16: 2,\n    i16: 2,\n    u32: 4,\n    i32: 4,\n    f32: 4,\n    f64: 8,\n};\nexport const FLOAT_ARRAY_CTORS = {\n    f32: Float32Array,\n    f64: Float64Array,\n};\nexport const INT_ARRAY_CTORS = {\n    i8: Int8Array,\n    i16: Int16Array,\n    i32: Int32Array,\n};\nexport const UINT_ARRAY_CTORS = {\n    u8: Uint8Array,\n    u8c: Uint8ClampedArray,\n    u16: Uint16Array,\n    u32: Uint32Array,\n};\nexport const TYPEDARRAY_CTORS = {\n    ...FLOAT_ARRAY_CTORS,\n    ...INT_ARRAY_CTORS,\n    ...UINT_ARRAY_CTORS,\n};\n/**\n * Returns canonical {@link Type} value of `type` by first\n * attempting to resolve it as {@link GLType} enum.\n *\n * @example\n * ```ts\n * asNativeType(GLType.F32) => \"f32\"\n * asNativeType(\"f32\") => \"f32\"\n * ```\n *\n * @param type -\n */\nexport const asNativeType = (type) => {\n    const t = GL2TYPE[type];\n    return t !== undefined ? t : type;\n};\n/**\n * Returns suitable {@link GLType} enum of `type`.\n *\n * @example\n * ```ts\n * asGLType(\"f32\") => GLType.F32\n * asGLType(GLType.F32) => GLType.F32\n * ```\n *\n * @param type -\n */\nexport const asGLType = (type) => {\n    const t = TYPE2GL[type];\n    return t !== undefined ? t : type;\n};\n/**\n * Coerces given numeric args to integer values.\n */\nexport const asInt = (...args) => args.map((x) => x | 0);\n/**\n * Returns byte size for given {@link Type} ID or {@link GLType} enum.\n *\n * @param type -\n */\nexport const sizeOf = (type) => SIZEOF[asNativeType(type)];\nexport function typedArray(type, ...xs) {\n    return new TYPEDARRAY_CTORS[asNativeType(type)](...xs);\n}\n/**\n * Takes an {@link NumericArray} and returns its corresponding {@link Type} ID.\n * Standard JS arrays will default to {@link \"f64\"}.\n *\n * @param x -\n */\nexport const typedArrayType = (x) => {\n    if (Array.isArray(x))\n        return \"f64\";\n    for (let id in TYPEDARRAY_CTORS) {\n        if (x instanceof TYPEDARRAY_CTORS[id])\n            return id;\n    }\n    return \"f64\";\n};\n/**\n * Returns the smallest possible *unsigned* int type enum for given `x`.\n * E.g. if `x <= 256`, the function returns `\"u8\"`.\n *\n * @param x - value to classify\n */\nexport const uintTypeForSize = (x) => x <= 0x100 ? \"u8\" : x <= 0x10000 ? \"u16\" : \"u32\";\n/**\n * Returns the smallest possible *signed* int type enum for given `x`.\n * E.g. if `x >= -128 && x < 128`, the function returns `\"i8\"`.\n *\n * @param x - value to classify\n */\nexport const intTypeForSize = (x) => x >= -0x80 && x < 0x80 ? \"i8\" : x >= -0x8000 && x < 0x8000 ? \"i16\" : \"i32\";\n/**\n * Returns suitable {@link UintType} for given bit size (`[0,32]` range)\n *\n * @param x -\n */\nexport const uintTypeForBits = (x) => x > 16 ? \"u32\" : x > 8 ? \"u16\" : \"u8\";\n/**\n * Returns suitable {@link IntType} for given bit size (`[0,32]` range)\n *\n * @param x -\n */\nexport const intTypeForBits = (x) => x > 16 ? \"i32\" : x > 8 ? \"i16\" : \"i8\";\n","import { implementsFunction } from \"@thi.ng/checks/implements-function\";\nimport { EPS } from \"@thi.ng/math/api\";\nimport { eqDelta as _eq } from \"@thi.ng/math/eqdelta\";\nimport { compileHOF } from \"./compile/emit.js\";\nimport { vop } from \"./vop.js\";\nconst $ = (dim) => eqDelta.add(dim, compileHOF(dim, [_eq, EPS], ([a, b]) => `eq(${a},${b},eps)`, \"eq,_eps\", \"a,b,eps=_eps\", \"a,b\", \"\", \"&&\", \"return a.length === b.length && \", \";\"));\n/**\n * Checks given vectors for componentwise equality, taking tolerance\n * `eps` (default: {@link @thi.ng/math#EPS}) into account.\n *\n * @param a -\n * @param b -\n * @param eps -\n */\nexport const eqDelta = vop();\neqDelta.default((v1, v2, eps = EPS) => {\n    if (implementsFunction(v1, \"eqDelta\")) {\n        return v1.eqDelta(v2, eps);\n    }\n    if (implementsFunction(v2, \"eqDelta\")) {\n        return v2.eqDelta(v1, eps);\n    }\n    return eqDeltaS(v1, v2, v1.length, eps);\n});\nexport const eqDelta2 = $(2);\nexport const eqDelta3 = $(3);\nexport const eqDelta4 = $(4);\n/**\n * Checks given strided vectors for componentwise equality, taking\n * tolerance `eps` (default: {@link @thi.ng/math#EPS}) into account.\n *\n * @param a - first vector\n * @param b - second vector\n * @param n - number of elements\n * @param eps - tolerance\n * @param ia - start index a\n * @param ib - start index b\n * @param sa - stride a\n * @param sb - stride b\n */\nexport const eqDeltaS = (a, b, n, eps = EPS, ia = 0, ib = 0, sa = 1, sb = 1) => {\n    for (; n > 0; n--, ia += sa, ib += sb) {\n        if (!_eq(a[ia], b[ib], eps)) {\n            return false;\n        }\n    }\n    return true;\n};\nexport const eqDeltaArray = (a, b, eps = EPS) => {\n    if (a === b)\n        return true;\n    if (a.length !== b.length)\n        return false;\n    for (let i = a.length; i-- > 0;) {\n        if (!eqDelta(a[i], b[i], eps)) {\n            return false;\n        }\n    }\n    return true;\n};\nexport const isInArray = (p, pts, eps = EPS) => {\n    for (let i = pts.length; i-- > 0;) {\n        if (eqDelta(p, pts[i], eps)) {\n            return true;\n        }\n    }\n    return false;\n};\n","import { EPS } from \"./api.js\";\nconst abs = Math.abs;\nconst max = Math.max;\n/**\n * Similar to {@link eqDeltaScaled}, but uses given `eps` as is.\n *\n * @param a - left value\n * @param b - right value\n * @param eps - epsilon / tolerance, default `1e-6`\n */\nexport const eqDelta = (a, b, eps = EPS) => abs(a - b) <= eps;\n/**\n * Checks if `|a - b| <= ε` and adapts given epsilon value to the given\n * arguments:\n *\n * ε is factored with the largest absolute value of `a` or `b` (but\n * never lesser than the given `eps` value):\n *\n * `ε = ε * max(1, |a|, |b|)`\n *\n * @param a - left value\n * @param b - right value\n * @param eps - epsilon / tolerance, default `1e-6`\n */\nexport const eqDeltaScaled = (a, b, eps = EPS) => abs(a - b) <= eps * max(1, abs(a), abs(b));\n","import { floatToUintBits } from \"@thi.ng/binary/float\";\nimport { rotateLeft } from \"@thi.ng/binary/rotate\";\n/**\n * Returns an unsigned 32-bit hash code for the given vector.\n *\n * @remarks\n * The hash is the reduction of `hash = H * hash + murmur(x)`, where\n * `murmur(x)` is the partial Murmur3 hash of a single vector\n * component's bitwise representation and `H` an optional hash factor,\n * by default Knuth's 0x9e3779b1 (see TAOCP, section 6.4, page 516). If\n * the vector `v` is empty (length 0), the function returns -1.\n *\n * Hashes for zero-vectors:\n *\n * - `[0]`: 1209856430\n * - `[0, 0]`: 3623989185\n * - `[0, 0, 0]`: 4192292821\n * - `[0, 0, 0, 0]`: 2558592725\n *\n * @example\n * Hash collisions:\n *\n * ```ts\n * // integer grid coords\n * uniq = tx.transduce(tx.map(v.hash32), tx.conj(), tx.range2d(0x1000, 0x1000)).size\n * // 16744420\n *\n * // collision rate\n * (1 - uniq / (0x1000 ** 2)) * 100\n * // 0.1955 %\n *\n * // normalized grid coords\n * uniq = tx.transduce(\n *   tx.map(v.hash32),\n *   tx.conj(),\n *   tx.permutations(tx.normRange(1000), tx.normRange(1000))\n * ).size\n * // 1001895\n *\n * // collision rate\n * (1 - uniq / (1001 ** 2)) * 100\n * // 0.0106 %\n * ```\n *\n * - {@link https://github.com/thi-ng/c-thing/blob/develop/src/math/hashfn.c}\n * - {@link @thi.ng/morton# | @thi.ng/morton} for Z-curve ordered hashing\n *\n * @param v - vector\n * @param hash - hash factor\n */\nexport const hash = (v, H = 0x9e3779b1) => {\n    let hash = -1;\n    for (let i = v.length; i-- > 0;) {\n        hash = (Math.imul(H, hash) + mix(hash, floatToUintBits(v[i]))) >>> 0;\n    }\n    return hash;\n};\nconst M1 = 0xcc9e2d51;\nconst M2 = 0x1b873593;\nconst M3 = 0xe6546b64;\nconst mix = (h, k) => {\n    k = Math.imul(rotateLeft(Math.imul(k, M1) >>> 0, 15), M2) >>> 0;\n    return ((Math.imul(rotateLeft(h ^ k, 13), 5) >>> 0) + M3) >>> 0;\n};\n","const F64 = new Float64Array(1);\nconst F32 = new Float32Array(F64.buffer);\nconst I32 = new Int32Array(F64.buffer);\nconst U32 = new Uint32Array(F64.buffer);\n/**\n * This value is true iff the environment is Little Endian.\n */\nexport const IS_LE = ((F64[0] = 2), U32[1] === 0x40000000);\nexport const floatToIntBits = (x) => ((F32[0] = x), I32[0]);\nexport const floatToUintBits = (x) => ((F32[0] = x), U32[0]);\nexport const intBitsToFloat = (x) => ((I32[0] = x), F32[0]);\nexport const uintBitsToFloat = (x) => ((U32[0] = x), F32[0]);\n/**\n * Returns i32 representation of f64 as [hi, lo] tuple (takes\n * environment's Little Endianess into account).\n *\n * @param x -\n */\nexport const floatToIntBits64 = (x) => ((F64[0] = x), IS_LE ? [I32[1], I32[0]] : [I32[0], I32[1]]);\n/**\n * Returns u32 representation of f64 as [hi, lo] tuple (takes\n * environment's Little Endianess into account).\n *\n * @param x -\n */\nexport const floatToUintBits64 = (x) => ((F64[0] = x), IS_LE ? [U32[1], U32[0]] : [U32[0], U32[1]]);\n/**\n * Reverse op of {@link floatToIntBits64}.\n *\n * @param hi -\n * @param lo -\n */\nexport const intBitsToFloat64 = (hi, lo) => {\n    IS_LE ? ((I32[1] = hi), (I32[0] = lo)) : ((I32[0] = hi), (I32[1] = lo));\n    return F64[0];\n};\n/**\n * Reverse op of {@link floatToUintBits64}.\n *\n * @param hi -\n * @param lo -\n */\nexport const uintBitsToFloat64 = (hi, lo) => {\n    IS_LE ? ((U32[1] = hi), (U32[0] = lo)) : ((U32[0] = hi), (U32[1] = lo));\n    return F64[0];\n};\n/**\n * Converts given float (f32) into a sortable integer representation,\n * using raw bitwise conversion via {@link floatToIntBits}.\n *\n * {@link https://github.com/tzaeschke/phtree/blob/develop/PhTreeRevisited.pdf}\n * (page 3)\n *\n * @param x - value to convert\n */\nexport const floatToSortableInt = (x) => {\n    if (x === -0)\n        x = 0;\n    const i = floatToIntBits(x);\n    return x < 0 ? ~i | (1 << 31) : i;\n};\nconst clamp11 = (x) => (x < -1 ? -1 : x > 1 ? 1 : x);\n/**\n * Converts normalized float ([-1..1] range) to u8.\n *\n * @param x -\n */\nexport const f32u8 = (x) => (clamp11(x) * 0x7f) & 0xff;\n/**\n * Converts normalized float ([-1..1] range) to u16.\n *\n * @param x -\n */\nexport const f32u16 = (x) => (clamp11(x) * 0x7fff) & 0xffff;\n/**\n * Converts normalized float ([-1..1] range) to u24.\n *\n * @param x -\n */\nexport const f32u24 = (x) => (clamp11(x) * 0x7fffff) & 0xffffff;\n/**\n * Converts normalized float ([-1..1] range) to u32.\n *\n * @param x -\n */\nexport const f32u32 = (x) => (clamp11(x) * 0x7fffffff) >>> 0;\n/**\n * Reverse op of {@link f32u8}.\n *\n * @param x -\n */\nexport const u8f32 = (x) => ((x &= 0xff), (x | ((x >> 7) * 0xffffff00)) / 0x7f);\n/**\n * Reverse op of {@link f32u16}.\n *\n * @param x -\n */\nexport const u16f32 = (x) => ((x &= 0xffff), (x | ((x >> 15) * 0xffff0000)) / 0x7fff);\n/**\n * Reverse op of {@link f32u24}.\n *\n * @param x -\n */\nexport const u24f32 = (x) => ((x &= 0xffffff), (x | ((x >> 23) * 0xff000000)) / 0x7fffff);\n/**\n * Reverse op of {@link f32u32}.\n *\n * @param x -\n */\nexport const u32f32 = (x) => (x | 0) / 0x7fffffff;\n","/**\n * Rotates `x` `n` bits to the left.\n *\n * @param x - value\n * @param n - rotation step\n */\nexport const rotateLeft = (x, n) => ((x << n) | (x >>> (32 - n))) >>> 0;\n/**\n * Rotates `x` `n` bits to the right.\n *\n * @param x - value\n * @param n - rotation step\n */\nexport const rotateRight = (x, n) => ((x >>> n) | (x << (32 - n))) >>> 0;\n/**\n * Shifts `x` by `n` bits left or right. If `n` >= 0, the value will be `>>>`\n * shifted to right, if `n` < 0 the value will be shifted left.\n *\n * @param x -\n * @param n -\n */\nexport const shiftRL = (x, n) => (n < 0 ? x << -n : x >>> n);\n","import { defOpS } from \"./compile/emit.js\";\nimport { NEW_OUT, SARGS_V, SET } from \"./compile/templates.js\";\nexport const [setS, setS2, setS3, setS4] = defOpS(SET, \"o,a\", SARGS_V, \"o,a\", \"o\", NEW_OUT);\n","import { EPS } from \"@thi.ng/math/api\";\nimport { declareIndices } from \"./compile/accessors.js\";\nimport { MAX3, MIN3, ONE3, X3, Y3, Z3, ZERO3, } from \"./api.js\";\nimport { AVec } from \"./avec.js\";\nimport { intoStridedBuffer, mapStridedBuffer } from \"./buffer.js\";\nimport { eqDelta3 } from \"./eqdelta.js\";\nimport { hash } from \"./hash.js\";\nimport { stridedValues, vecIterator } from \"./iterator.js\";\nimport { setS3 } from \"./sets.js\";\nexport class Vec3 extends AVec {\n    constructor(buf, offset = 0, stride = 1) {\n        super(buf || [0, 0, 0], offset, stride);\n    }\n    /**\n     * Returns array of memory mapped {@link Vec3} instances using given\n     * backing array and stride settings: The `cstride` is the step size\n     * between individual XYZ vector components. `estride` is the step\n     * size between successive vectors. This arrangement allows for\n     * different storage approaches, incl. SOA, AOS, striped /\n     * interleaved etc.\n     *\n     * @param buf - backing array\n     * @param num - num vectors\n     * @param start -  start index\n     * @param cstride - component stride\n     * @param estride - element stride\n     */\n    static mapBuffer(buf, num = (buf.length / 3) | 0, start = 0, cstride = 1, estride = 3) {\n        return mapStridedBuffer(Vec3, buf, num, start, cstride, estride);\n    }\n    /**\n     * Merges given `src` iterable of {@link Vec3}s into single array `buf`.\n     * Vectors will be arranged according to given component and element\n     * strides, starting at `start` index. It's the user's\n     * responsibility to ensure the target buffer has sufficient\n     * capacity to hold the input vectors. See `Vec3.mapBuffer` for the\n     * inverse operation. Returns `buf`.\n     *\n     * @param buf -\n     * @param src -\n     * @param start -\n     * @param cstride -\n     * @param estride -\n     */\n    static intoBuffer(buf, src, start = 0, cstride = 1, estride = 3) {\n        return intoStridedBuffer(setS3, buf, src, start, cstride, estride);\n    }\n    static iterator(buf, num, start = 0, cstride = 1, estride = 3) {\n        return vecIterator(Vec3, buf, num, start, cstride, estride);\n    }\n    [Symbol.iterator]() {\n        return stridedValues(this.buf, 3, this.offset, this.stride);\n    }\n    get length() {\n        return 3;\n    }\n    copy() {\n        return new Vec3([this.x, this.y, this.z]);\n    }\n    copyView() {\n        return new Vec3(this.buf, this.offset, this.stride);\n    }\n    empty() {\n        return new Vec3();\n    }\n    eqDelta(v, eps = EPS) {\n        return eqDelta3(this, v, eps);\n    }\n    hash() {\n        return hash(this);\n    }\n    toJSON() {\n        return [this.x, this.y, this.z];\n    }\n}\nVec3.X_AXIS = new Vec3(X3);\nVec3.Y_AXIS = new Vec3(Y3);\nVec3.Z_AXIS = new Vec3(Z3);\nVec3.MIN = new Vec3(MIN3);\nVec3.MAX = new Vec3(MAX3);\nVec3.ZERO = new Vec3(ZERO3);\nVec3.ONE = new Vec3(ONE3);\ndeclareIndices(Vec3.prototype, [\"x\", \"y\", \"z\"]);\nexport const vec3 = (x = 0, y = 0, z = 0) => new Vec3([x, y, z]);\nexport const vec3n = (n) => new Vec3([n, n, n]);\nexport const asVec3 = (x) => x instanceof Vec3\n    ? x\n    : new Vec3(x.length >= 3\n        ? x\n        : [x[0] || 0, x[1] || 0, x[2] || 0]);\n","import { EPS } from \"@thi.ng/math/api\";\nimport { declareIndices } from \"./compile/accessors.js\";\nimport { MAX4, MIN4, ONE4, X4, Y4, Z4, ZERO4, } from \"./api.js\";\nimport { AVec } from \"./avec.js\";\nimport { intoStridedBuffer, mapStridedBuffer } from \"./buffer.js\";\nimport { eqDelta4 } from \"./eqdelta.js\";\nimport { hash } from \"./hash.js\";\nimport { stridedValues, vecIterator } from \"./iterator.js\";\nimport { setS4 } from \"./sets.js\";\nexport class Vec4 extends AVec {\n    constructor(buf, offset = 0, stride = 1) {\n        super(buf || [0, 0, 0, 0], offset, stride);\n    }\n    /**\n     * Returns array of memory mapped {@link Vec4} instances using given\n     * backing array and stride settings: The `cstride` is the step size\n     * between individual XYZ vector components. `estride` is the step\n     * size between successive vectors. This arrangement allows for\n     * different storage approaches, incl. SOA, AOS, striped /\n     * interleaved etc.\n     *\n     * @param buf - backing array\n     * @param num - num vectors\n     * @param start -  start index\n     * @param cstride - component stride\n     * @param estride - element stride\n     */\n    static mapBuffer(buf, num = buf.length >> 2, start = 0, cstride = 1, estride = 4) {\n        return mapStridedBuffer(Vec4, buf, num, start, cstride, estride);\n    }\n    /**\n     * Merges given `src` iterable of {@link Vec4}s into single array `buf`.\n     * Vectors will be arranged according to given component and element\n     * strides, starting at `start` index. It's the user's\n     * responsibility to ensure the target buffer has sufficient\n     * capacity to hold the input vectors. See `Vec4.mapBuffer` for the\n     * inverse operation. Returns `buf`.\n     *\n     * @param buf -\n     * @param src -\n     * @param start -\n     * @param cstride -\n     * @param estride -\n     */\n    static intoBuffer(buf, src, start = 0, cstride = 1, estride = 4) {\n        return intoStridedBuffer(setS4, buf, src, start, cstride, estride);\n    }\n    static *iterator(buf, num, start = 0, cstride = 1, estride = 4) {\n        return vecIterator(Vec4, buf, num, start, cstride, estride);\n    }\n    [Symbol.iterator]() {\n        return stridedValues(this.buf, 4, this.offset, this.stride);\n    }\n    get length() {\n        return 4;\n    }\n    copy() {\n        return new Vec4([this.x, this.y, this.z, this.w]);\n    }\n    copyView() {\n        return new Vec4(this.buf, this.offset, this.stride);\n    }\n    empty() {\n        return new Vec4();\n    }\n    eqDelta(v, eps = EPS) {\n        return eqDelta4(this, v, eps);\n    }\n    hash() {\n        return hash(this);\n    }\n    toJSON() {\n        return [this.x, this.y, this.z, this.w];\n    }\n}\nVec4.X_AXIS = new Vec4(X4);\nVec4.Y_AXIS = new Vec4(Y4);\nVec4.Z_AXIS = new Vec4(Z4);\nVec4.MIN = new Vec4(MIN4);\nVec4.MAX = new Vec4(MAX4);\nVec4.ZERO = new Vec4(ZERO4);\nVec4.ONE = new Vec4(ONE4);\ndeclareIndices(Vec4.prototype, [\"x\", \"y\", \"z\", \"w\"]);\nexport const vec4 = (x = 0, y = 0, z = 0, w = 0) => new Vec4([x, y, z, w]);\nexport const vec4n = (n) => new Vec4([n, n, n, n]);\nexport const asVec4 = (x) => x instanceof Vec4\n    ? x\n    : new Vec4(x.length >= 4\n        ? x\n        : [x[0] || 0, x[1] || 0, x[2] || 0, x[3] || 0]);\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [abs, abs2, abs3, abs4] = defFnOp(\"Math.abs\");\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [acos, acos2, acos3, acos4] = defFnOp(\"Math.acos\");\n","import { maddN } from \"./maddn.js\";\nimport { mulN } from \"./muln.js\";\nexport const addW2 = (out, a, b, wa, wb) => (!out && (out = a), maddN(out, b, wb, mulN(out, a, wa)));\nexport const addW3 = (out, a, b, c, wa, wb, wc) => (!out && (out = a), maddN(out, c, wc, maddN(out, b, wb, mulN(out, a, wa))));\nexport const addW4 = (out, a, b, c, d, wa, wb, wc, wd) => (!out && (out = a),\n    maddN(out, d, wd, maddN(out, c, wc, maddN(out, b, wb, mulN(out, a, wa)))));\nexport const addW5 = (out, a, b, c, d, e, wa, wb, wc, wd, we) => (!out && (out = a),\n    maddN(out, e, we, maddN(out, d, wd, maddN(out, c, wc, maddN(out, b, wb, mulN(out, a, wa))))));\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VNV, ARGS_VV, MATH2A_N } from \"./compile/templates.js\";\n/**\n * Returns `out = a * n + b`.\n *\n * @param out - vec\n * @param a - vec\n * @param n - scalar\n * @param b - vec\n */\nexport const [maddN, maddN2, maddN3, maddN4] = defOp(MATH2A_N(\"*\", \"+\"), ARGS_VNV, ARGS_VV);\n","import { defBitOp, defBitOpN } from \"./compile/emit.js\";\nexport const [addI, addI2, addI3, addI4] = defBitOp(\"+\", true);\nexport const [addU, addU2, addU3, addU4] = defBitOp(\"+\");\nexport const [addNI, addNI2, addNI3, addNI4] = defBitOpN(\"+\", true);\nexport const [addNU, addNU2, addNU3, addNU4] = defBitOpN(\"+\");\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VVV, MATH2 } from \"./compile/templates.js\";\n/**\n * Returns `out = (a + b) * c`.\n *\n * - {@link madd}\n * - {@link subm}\n */\nexport const [addm, addm2, addm3, addm4] = defOp(MATH2(\"+\", \"*\"), ARGS_VVV);\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_VVV, MATH2, SARGS_VVV } from \"./compile/templates.js\";\nexport const [addmS, addmS2, addmS3, addmS4] = defOpS(MATH2(\"+\", \"*\"), ARGS_VVV, SARGS_VVV, ARGS_VVV);\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_VVN, MATH2_N, SARGS_VV } from \"./compile/templates.js\";\nexport const [addmNS, addmNS2, addmNS3, addmNS4] = defOpS(MATH2_N(\"+\", \"*\"), ARGS_VVN, SARGS_VV);\n","import { defOpS } from \"./compile/emit.js\";\nimport { MATH } from \"./compile/templates.js\";\nexport const [addS, addS2, addS3, addS4] = defOpS(MATH(\"+\"));\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_V, ARGS_VN, MATH_N, SARGS_V } from \"./compile/templates.js\";\nexport const [addNS, addNS2, addNS3, addNS4] = defOpS(MATH_N(\"+\"), ARGS_VN, SARGS_V, ARGS_V);\n","import { absInnerAngle } from \"@thi.ng/math/angle\";\nimport { cross2 } from \"./cross.js\";\nimport { dot } from \"./dot.js\";\nimport { mag } from \"./mag.js\";\nexport const angleRatio = (a, b) => dot(a, b) / (mag(a) * mag(b));\nexport const angleBetween2 = (a, b, absInner = false) => {\n    const t = Math.atan2(cross2(a, b), dot(a, b));\n    return absInner ? absInnerAngle(t) : t;\n};\nexport const angleBetween3 = (a, b, normalize = true, absInner = false) => {\n    const t = normalize ? Math.acos(angleRatio(a, b)) : Math.acos(dot(a, b));\n    return absInner ? absInnerAngle(t) : t;\n};\n","import { DEG2RAD, HALF_PI, INV_HALF_PI, PI, RAD2DEG, TAU } from \"./api.js\";\n/**\n * Returns vector of `[sin(theta)*n, cos(theta)*n]`.\n *\n * @param theta -\n * @param n -\n */\nexport const sincos = (theta, n = 1) => [\n    Math.sin(theta) * n,\n    Math.cos(theta) * n,\n];\n/**\n * Returns vector of `[cos(theta)*n, sin(theta)*n]`.\n *\n * @param theta -\n * @param n -\n */\nexport const cossin = (theta, n = 1) => [\n    Math.cos(theta) * n,\n    Math.sin(theta) * n,\n];\n/**\n * Projects `theta` into [0 .. 2π] interval.\n *\n * @param theta -\n */\nexport const absTheta = (theta) => ((theta %= TAU), theta < 0 ? TAU + theta : theta);\nexport const absInnerAngle = (theta) => ((theta = Math.abs(theta)), theta > PI ? TAU - theta : theta);\n/**\n * Returns smallest absolute angle difference between `a` and `b`.\n * Result will be in [0 .. π] interval.\n *\n * @param a -\n * @param b -\n */\nexport const angleDist = (a, b) => absInnerAngle(absTheta((b % TAU) - (a % TAU)));\n/**\n * Like `Math.atan2`, but always returns angle in [0 .. TAU) interval.\n *\n * @param y -\n * @param x -\n */\nexport const atan2Abs = (y, x) => absTheta(Math.atan2(y, x));\n/**\n * Returns quadrant ID (0-3) of given angle (in radians).\n *\n * @param theta -\n */\nexport const quadrant = (theta) => (absTheta(theta) * INV_HALF_PI) | 0;\n/**\n * Converts angle to degrees.\n *\n * @param theta - angle in radians\n */\nexport const deg = (theta) => theta * RAD2DEG;\n/**\n * Converts angle to radians.\n *\n * @param theta - angle in degrees\n */\nexport const rad = (theta) => theta * DEG2RAD;\n/**\n * Cosecant. Approaches `±Infinity` for `theta` near multiples of π.\n *\n * @param theta - angle in radians\n */\nexport const csc = (theta) => 1 / Math.sin(theta);\n/**\n * Secant. Approaches `±Infinity` for `theta` near π/2 ± nπ\n *\n * @param theta - angle in radians\n */\nexport const sec = (theta) => 1 / Math.cos(theta);\n/**\n * Cotangent. Approaches `±Infinity` for `theta` near multiples of π.\n *\n * @param theta - angle in radians\n */\nexport const cot = (theta) => 1 / Math.tan(theta);\n/**\n * Law of Cosines. Takes length of two sides of a triangle and the inner\n * angle (in radians) between them. Returns length of third side.\n *\n * @param a -\n * @param b -\n * @param gamma -\n */\nexport const loc = (a, b, gamma) => Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(gamma));\n/**\n * Approximates cos(xπ) for x in [-1,1]\n *\n * @param x -\n */\nexport const normCos = (x) => {\n    const x2 = x * x;\n    return 1.0 + x2 * (-4 + 2 * x2);\n};\nconst __fastCos = (x) => {\n    const x2 = x * x;\n    return 0.99940307 + x2 * (-0.49558072 + 0.03679168 * x2);\n};\n/**\n * Fast cosine approximation using {@link normCos} (polynomial). Max. error\n * ~0.00059693\n *\n * In [0 .. 2π] interval, approx. 18-20% faster than `Math.cos` on V8.\n *\n * @param theta - in radians\n */\nexport const fastCos = (theta) => {\n    theta %= TAU;\n    theta < 0 && (theta = -theta);\n    switch ((theta * INV_HALF_PI) | 0) {\n        case 0:\n            return __fastCos(theta);\n        case 1:\n            return -__fastCos(PI - theta);\n        case 2:\n            return -__fastCos(theta - PI);\n        default:\n            return __fastCos(TAU - theta);\n    }\n};\n/**\n * {@link fastCos}\n *\n * @param theta - in radians\n */\nexport const fastSin = (theta) => fastCos(HALF_PI - theta);\n","import { setC3 } from \"./setc.js\";\nexport const cross2 = (a, b) => a[0] * b[1] - a[1] * b[0];\nexport const cross3 = (out, a, b) => setC3(out || a, a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]);\n","export const setC2 = (out, x, y) => (!out && (out = []), (out[0] = x), (out[1] = y), out);\nexport const setC3 = (out, x, y, z) => (!out && (out = []), (out[0] = x), (out[1] = y), (out[2] = z), out);\nexport const setC4 = (out, x, y, z, w) => (!out && (out = []),\n    (out[0] = x),\n    (out[1] = y),\n    (out[2] = z),\n    (out[3] = w),\n    out);\nexport const setC6 = (out, a, b, c, d, e, f) => (!out && (out = []),\n    (out[0] = a),\n    (out[1] = b),\n    (out[2] = c),\n    (out[3] = d),\n    (out[4] = e),\n    (out[5] = f),\n    out);\nexport const setC = (out, ...xs) => {\n    !out && (out = []);\n    for (let i = 0, n = xs.length; i < n; i++) {\n        out[i] = xs[i];\n    }\n    return out;\n};\n","import { magSq } from \"./magsq.js\";\nexport const mag = (v) => Math.sqrt(magSq(v));\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [asin, asin2, asin3, asin4] = defFnOp(\"Math.asin\");\n","import { defFnOp, defOp } from \"./compile/emit.js\";\nimport { ARGS_VV, FN2 } from \"./compile/templates.js\";\nexport const [atan, atan2, atan3, atan4] = defFnOp(\"Math.atan\");\nexport const [atan_2, atan_22, atan_23, atan_24] = defOp(FN2(\"Math.atan2\"), ARGS_VV);\n","import { HALF_PI, PI } from \"@thi.ng/math/api\";\nimport { addmN } from \"./addmn.js\";\nimport { direction } from \"./direction.js\";\nimport { headingXY } from \"./heading.js\";\nimport { mixN2 } from \"./mixn.js\";\nimport { normalize } from \"./normalize.js\";\nimport { perpendicularCCW } from \"./perpendicular.js\";\nimport { sub } from \"./sub.js\";\nexport const bisect2 = (a, b) => {\n    const theta = (headingXY(a) + headingXY(b)) / 2;\n    return theta <= HALF_PI ? theta : PI - theta;\n};\n/**\n * Returns normalized bisector vector for point `b` in the triangle `a`\n * -> `b` -> `c`. If `out` is null, creates a new result vector. The `n`\n * arg can be used to scale the result vector to given length (default:\n * 1).\n *\n * @param out -\n * @param a -\n * @param b -\n * @param c -\n * @param n -\n */\nexport const cornerBisector = (out, a, b, c, n = 1) => (!out && (out = []),\n    normalize(out, addmN(out, normalize(out, sub(out, a, b)), normalize(null, sub([], c, b)), 0.5), n));\n/**\n * 2D version of {@link cornerBisector} which doesn't always bisect the\n * smaller/inside angle, but also doesn't suffer sign/orientation\n * flipping of returned bisector vector.\n *\n * @remarks\n * Instead, the direction of the result is dependent on the orientation\n * of the input triangle. If `a`, `b`, `c` are in CW order, the result\n * will point away from the triangle's centroid. If CCW, the result will\n * point towards the inside.\n *\n * @param out -\n * @param a -\n * @param b -\n * @param c -\n * @param n -\n */\nexport const cornerBisector2 = (out, a, b, c, n = 1) => (!out && (out = []),\n    perpendicularCCW(out, normalize(out, mixN2(out, direction(out, a, b), direction([], b, c), 0.5), n)));\n","import { normalize } from \"./normalize.js\";\nimport { sub } from \"./sub.js\";\n/**\n * Computes direction vector `a` -> `b`, normalized to length `n`\n * (default 1).\n *\n * @param a -\n * @param b -\n * @param n -\n */\nexport const direction = (out, a, b, n = 1) => normalize(null, sub(out || a, b, a), n);\n","import { EPS } from \"@thi.ng/math/api\";\nimport { mag } from \"./mag.js\";\nimport { mulN } from \"./muln.js\";\nimport { set } from \"./set.js\";\n/**\n * Normalizes vector to given (optional) length (default: 1). If `out`\n * is null, modifies `v` in place.\n *\n * @param out -\n * @param v -\n * @param n -\n */\nexport const normalize = (out, v, n = 1) => {\n    !out && (out = v);\n    const m = mag(v);\n    return m >= EPS ? mulN(out, v, n / m) : out !== v ? set(out, v) : out;\n};\n","import { atan2Abs } from \"@thi.ng/math/angle\";\n/**\n * Returns orientation angle (in radians) of vector `a` in XY plane.\n *\n * @param a -\n */\nexport const headingXY = (a) => atan2Abs(a[1], a[0]);\n/**\n * Returns orientation angle (in radians) of vector `a` in XZ plane.\n *\n * @param a -\n */\nexport const headingXZ = (a) => atan2Abs(a[2], a[0]);\n/**\n * Returns orientation angle (in radians) of vector `a` in ZY plane.\n *\n * @param a -\n */\nexport const headingYZ = (a) => atan2Abs(a[2], a[1]);\n/**\n * Same as {@link headingXY}\n */\nexport const heading = headingXY;\n","import { setC2 } from \"./setc.js\";\n/**\n * 2D only. Produces a perpendicular vector to `v`, i.e. `[-y,x]`.\n * Assumes positive Y-up.\n *\n * @param out -\n * @param v -\n */\nexport const perpendicularCCW = (out, a) => setC2(out || a, -a[1], a[0]);\n/**\n * 2D only. Produces a clockwise perpendicular vector to `v`, i.e.\n * `[y,-x]`. Assumes positive Y-up.\n *\n * @param out -\n * @param v -\n */\nexport const perpendicularCW = (out, a) => setC2(out || a, a[1], -a[0]);\n","import { defBitOp, defBitOpN } from \"./compile/emit.js\";\nexport const [bitAndI, bitAndI2, bitAndI3, bitAndI4] = defBitOp(\"&\", true);\nexport const [bitAndU, bitAndU2, bitAndU3, bitAndU4] = defBitOp(\"&\");\nexport const [bitAndNI, bitAndNI2, bitAndNI3, bitAndNI4] = defBitOpN(\"&\", true);\nexport const [bitAndNU, bitAndNU2, bitAndNU3, bitAndNU4] = defBitOpN(\"&\");\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_V } from \"./compile/templates.js\";\nexport const [bitNotI, bitNotI2, bitNotI3, bitNotI4] = defOp(([o, a]) => `${o}=(~${a})|0;`, ARGS_V);\nexport const [bitNotU, bitNotU2, bitNotU3, bitNotU4] = defOp(([o, a]) => `${o}=(~${a})>>>0;`, ARGS_V);\n","import { defBitOp, defBitOpN } from \"./compile/emit.js\";\nexport const [bitOrI, bitOrI2, bitOrI3, bitOrI4] = defBitOp(\"|\", true);\nexport const [bitOrU, bitOrU2, bitOrU3, bitOrU4] = defBitOp(\"|\");\nexport const [bitOrNI, bitOrNI2, bitOrNI3, bitOrNI4] = defBitOpN(\"|\", true);\nexport const [bitOrNU, bitOrNU2, bitOrNU3, bitOrNU4] = defBitOpN(\"|\");\n","import { defBitOp, defBitOpN } from \"./compile/emit.js\";\nexport const [bitXorI, bitXorI2, bitXorI3, bitXorI4] = defBitOp(\"^\", true);\nexport const [bitXorU, bitXorU2, bitXorU3, bitXorU4] = defBitOp(\"^\");\nexport const [bitXorNI, bitXorNI2, bitXorNI3, bitXorNI4] = defBitOpN(\"^\", true);\nexport const [bitXorNU, bitXorNU2, bitXorNU3, bitXorNU4] = defBitOpN(\"^\");\n","import { cossin } from \"@thi.ng/math/angle\";\nimport { add2 } from \"./add.js\";\nimport { ZERO2, ZERO3 } from \"./api.js\";\nimport { setC3 } from \"./setc.js\";\nimport { vop } from \"./vop.js\";\nconst cos = Math.cos;\nconst sin = Math.sin;\n/**\n * Converts polar vector `v` to cartesian coordinates and adds optional\n * `offset`. See {@link polar} for reverse operation. If `out` is null,\n * modifies `v` in place.\n *\n * @param out -\n * @param v -\n * @param offset -\n */\nexport const cartesian = vop(1);\n/**\n * Converts 2D polar vector `v` to cartesian coordinates and adds\n * optional `offset`. See {@link polar} for reverse operation. If `out` is\n * null, modifies `v` in place.\n *\n * @param out -\n * @param v -\n * @param offset -\n */\nexport const cartesian2 = cartesian.add(2, (out, a, b = ZERO2) => add2(out || a, cossin(a[1], a[0]), b));\n/**\n * Converts 3D polar vector `v` to cartesian coordinates and adds\n * optional `offset`. See {@link polar} for reverse operation. If `out` is\n * null, modifies `v` in place.\n *\n * @param out -\n * @param v -\n * @param offset -\n */\nexport const cartesian3 = cartesian.add(3, (out, a, b = ZERO3) => {\n    const r = a[0];\n    const theta = a[1];\n    const phi = a[2];\n    const ct = cos(theta);\n    return setC3(out || a, r * ct * cos(phi) + b[0], r * ct * sin(phi) + b[1], r * sin(theta) + b[2]);\n});\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [ceil, ceil2, ceil3, ceil4] = defFnOp(\"Math.ceil\");\n","import { vmean } from \"./mean.js\";\nimport { subN } from \"./subn.js\";\n/**\n * Creates a mean-centered version of `a`, i.e. subtracts {@link vmean} of `a`\n * from each component and writes result to `out` (or back into `a` iff `out` is\n * null).\n *\n * @param out -\n * @param a -\n */\nexport const center = (out, a) => subN(out, a, vmean(a));\n","import { add } from \"./add.js\";\nimport { __ensureInputs } from \"./internal/ensure.js\";\nimport { mulN } from \"./muln.js\";\nimport { set } from \"./set.js\";\nimport { sum } from \"./sum.js\";\n/**\n * Takes an array of vectors (of uniform dimensions) and computes the\n * componentwise mean. Writes result to `out` (or a new vector).\n *\n * @remarks\n * Also see {@link median}.\n *\n * @example\n * ```ts\n * mean([], [[3, 10, 400], [4, 30, 100], [1, 40, 200], [2, 20, 300]])\n * // [ 2.5, 25, 250 ]\n * ```\n *\n * @param out -\n * @param src -\n */\nexport const mean = (out, src) => {\n    __ensureInputs(src);\n    out = set(out || [], src[0]);\n    for (let i = src.length; i-- > 1;) {\n        add(out, out, src[i]);\n    }\n    return mulN(out, out, 1 / src.length);\n};\n/**\n * Computes the mean of components of given vector. Returns 0 if vector is empty.\n *\n * @example\n * ```ts\n * vmean([5, 10, 15, 20])\n * // 12.5\n * ```\n *\n * @param a -\n */\nexport const vmean = (a) => (a.length > 0 ? sum(a) / a.length : 0);\n","import { assert } from \"@thi.ng/errors/assert\";\n/**\n * Asserts that `src` has at least 1 item.\n *\n * @internal\n */\nexport const __ensureInputs = (src) => assert(src.length > 0, `no inputs given`);\n","import { add } from \"@thi.ng/transducers/add\";\nimport { reduce } from \"@thi.ng/transducers/reduce\";\nimport { vop } from \"./vop.js\";\n/**\n * Returns component sum of vector `v`.\n *\n * @param v -\n */\nexport const sum = vop();\nsum.default((v) => reduce(add(), v));\nexport const sum2 = sum.add(2, (a) => a[0] + a[1]);\nexport const sum3 = sum.add(3, (a) => a[0] + a[1] + a[2]);\nexport const sum4 = sum.add(4, (a) => a[0] + a[1] + a[2] + a[3]);\n","import { __mathop } from \"./internal/mathop.js\";\nexport function add(...args) {\n    return __mathop(add, (acc, x) => acc + x, 0, args);\n}\n","import { $$reduce, reducer } from \"../reduce.js\";\n/**\n * Higher-order reducer for math operations.\n *\n * @param rfn -\n * @param fn -\n * @param initDefault -\n * @param args -\n *\n * @internal\n */\nexport const __mathop = (rfn, fn, initDefault, args) => {\n    const res = $$reduce(rfn, args);\n    if (res !== undefined) {\n        return res;\n    }\n    const init = args[0] || initDefault;\n    return reducer(() => init, fn);\n};\n","import { clamp as _clamp, clamp01 as _clamp01, clamp11 as _clamp11, } from \"@thi.ng/math/interval\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { ARGS_V, ARGS_VVV, FN, FN3 } from \"./compile/templates.js\";\nexport const [clamp, clamp2, clamp3, clamp4] = defHofOp(_clamp, FN3(), ARGS_VVV);\nexport const [clamp01, clamp01_2, clamp01_3, clamp01_4] = defHofOp(_clamp01, FN(), ARGS_V);\nexport const [clamp11, clamp11_2, clamp11_3, clamp11_4] = defHofOp(_clamp11, FN(), ARGS_V);\n","import { clamp as _clamp } from \"@thi.ng/math/interval\";\nimport { defHofOp } from \"./compile/emit.js\";\nexport const [clampN, clampN2, clampN3, clampN4] = defHofOp(_clamp, ([o, a]) => `${o}=op(${a},n,m);`, \"o,a,n,m\", \"o,a\");\n","/**\n * Returns a new 2D vector comparator using given component order. The\n * comparator returns the signed index+1 of the first differing\n * component, e.g. if order is `0,1`, a return value of -2 means that\n * `a.y < b.y`.\n *\n * @param o1 -\n * @param o2 -\n */\nexport const comparator2 = (o1, o2) => (a, b) => {\n    const ax = a[o1];\n    const ay = a[o2];\n    const bx = b[o1];\n    const by = b[o2];\n    return ax === bx\n        ? ay === by\n            ? 0\n            : ay < by\n                ? -2\n                : 2\n        : ax < bx\n            ? -1\n            : 1;\n};\n/**\n * Returns a new 3D vector comparator using given component order. The\n * comparator returns the signed index+1 of the first differing\n * component, e.g. if order is `0,1,2`, a return value of -3 means that\n * `a.z < b.z`.\n *\n * @param o1 -\n * @param o2 -\n * @param o3 -\n */\nexport const comparator3 = (o1, o2, o3) => (a, b) => {\n    const ax = a[o1];\n    const ay = a[o2];\n    const az = a[o3];\n    const bx = b[o1];\n    const by = b[o2];\n    const bz = b[o3];\n    return ax === bx\n        ? ay === by\n            ? az === bz\n                ? 0\n                : az < bz\n                    ? -3\n                    : 3\n            : ay < by\n                ? -2\n                : 2\n        : ax < bx\n            ? -1\n            : 1;\n};\n/**\n * Returns a new 4D vector comparator using given component order. The\n * comparator returns the signed index+1 of the first differing\n * component, e.g. if order is `0,1,2,3`, a return value of -4 means\n * that `a.w < b.w`.\n *\n * @param o1 -\n * @param o2 -\n * @param o3 -\n * @param o4 -\n */\nexport const comparator4 = (o1, o2, o3, o4) => (a, b) => {\n    const ax = a[o1];\n    const ay = a[o2];\n    const az = a[o3];\n    const aw = b[o4];\n    const bx = b[o1];\n    const by = b[o2];\n    const bz = b[o3];\n    const bw = b[o4];\n    return ax === bx\n        ? ay === by\n            ? az === bz\n                ? aw === bw\n                    ? 0\n                    : aw < bw\n                        ? -4\n                        : 4\n                : az < bz\n                    ? -3\n                    : 3\n            : ay < by\n                ? -2\n                : 2\n        : ax < bx\n            ? -1\n            : 1;\n};\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_V, NEW_OUT } from \"./compile/templates.js\";\nconst $ = (tpl, pre = NEW_OUT) => defOp(tpl, ARGS_V, ARGS_V, \"o\", 1, pre);\nexport const [asIVec, asIVec2, asIVec3, asIVec4] = $(([o, a]) => `${o}=${a}|0;`);\nexport const [asUVec, asUVec2, asUVec3, asUVec4] = $(([o, a]) => `${o}=${a}>>>0;`);\nexport const [asBVec, asBVec2, asBVec3, asBVec4] = $(([o, a]) => `${o}=!!${a};`);\nexport const [fromBVec, fromBVec2, fromBVec3, fromBVec4] = $(([o, a]) => `${o}=~~${a};`);\n","import { implementsFunction } from \"@thi.ng/checks/implements-function\";\nimport { set } from \"./set.js\";\nexport const copy = (v) => implementsFunction(v, \"copy\") ? v.copy() : set([], v);\nexport const copyVectors = (pts) => pts.map(copy);\n","import { center } from \"./center.js\";\nimport { mag } from \"./mag.js\";\nimport { mul } from \"./mul.js\";\nimport { sum } from \"./sum.js\";\n/**\n * Computes the Pearson correlation coefficient between `a` and `b`. Returns\n * `undefined` if the denominator (see below) is zero.\n *\n * @remarks\n * ```text\n * sum(a' * b') / (mag(a') * mag(b'))\n * ```\n *\n * ...where `a'` and `b'` are {@link center}'ed versions of given input vectors.\n *\n * References:\n * - https://en.wikipedia.org/wiki/Correlation\n * - https://www.youtube.com/watch?v=2bcmklvrXTQ\n *\n * @param a -\n * @param b -\n */\nexport const correlation = (a, b) => {\n    a = center([], a);\n    b = center([], b);\n    const m = mag(a) * mag(b);\n    return m !== 0 ? sum(mul(null, a, b)) / m : undefined;\n};\n","import { defMathOp } from \"./compile/emit.js\";\nexport const [mul, mul2, mul3, mul4] = defMathOp(\"*\");\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [cos, cos2, cos3, cos4] = defFnOp(\"Math.cos\");\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [cosh, cosh2, cosh3, cosh4] = defFnOp(\"Math.cosh\");\n","import { center } from \"./center.js\";\nimport { mul } from \"./mul.js\";\nimport { sum } from \"./sum.js\";\n/**\n * Computes the covariance coefficient between the two given vectors.\n *\n * @remarks\n * References:\n * - https://en.wikipedia.org/wiki/Covariance\n * - https://www.youtube.com/watch?v=2bcmklvrXTQ\n *\n * @param a -\n * @param b -\n */\nexport const covariance = (a, b) => sum(mul(null, center([], a), center([], b))) / (a.length - 1);\n","import { setCS3 } from \"./setcs.js\";\nexport const crossS2 = (a, b, ia = 0, ib = 0, sa = 1, sb = 1) => a[ia] * b[ib + sb] - a[ia + sa] * b[ib];\nexport const crossS3 = (out, a, b, io = 0, ia = 0, ib = 0, so = 1, sa = 1, sb = 1) => setCS3(out || a, a[ia + sa] * b[ib + 2 * sb] - a[ia + 2 * sa] * b[ib + sb], a[ia + 2 * sa] * b[ib] - a[ia] * b[ib + 2 * sb], a[ia] * b[ib + sb] - a[ia + sa] * b[ib], io, so);\n","export const setCS2 = (out, x, y, io = 0, so = 1) => (!out && (out = []), (out[io] = x), (out[io + so] = y), out);\nexport const setCS3 = (out, x, y, z, io = 0, so = 1) => (!out && (out = []),\n    (out[io] = x),\n    (out[io + so] = y),\n    (out[io + 2 * so] = z),\n    out);\nexport const setCS4 = (out, x, y, z, w, io = 0, so = 1) => (!out && (out = []),\n    (out[io] = x),\n    (out[io + so] = y),\n    (out[io + 2 * so] = z),\n    (out[io + 3 * so] = w),\n    out);\n","import { deg } from \"@thi.ng/math/angle\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { FN } from \"./compile/templates.js\";\nexport const [degrees, degrees2, degrees3, degrees4] = defHofOp(deg, FN(\"op\"));\n","/**\n * Bray-Curtis **dissimilarity** metric. Result always in [0..1] interval.\n *\n * @remarks\n * Reference: https://en.wikipedia.org/wiki/Bray%E2%80%93Curtis_dissimilarity\n *\n * @example\n * ```ts\n * distBrayCurtis([6, 7, 4], [10, 0, 6])\n * // 0.393939...\n * ```\n *\n * @param a -\n * @param b -\n */\nexport const distBrayCurtis = (a, b) => {\n    let c = 0;\n    let s = 0;\n    for (let i = a.length; i-- > 0;) {\n        c += Math.abs(a[i] - b[i]);\n        s += Math.abs(a[i] + b[i]);\n    }\n    return s > 0 ? c / s : 0;\n};\n","/**\n * @remarks\n * Reference: https://en.wikipedia.org/wiki/Canberra_distance\n *\n * @param a -\n * @param b -\n */\nexport const distCanberra = (a, b) => {\n    let delta = 0;\n    for (let i = a.length; i-- > 0;) {\n        const aa = a[i];\n        const bb = b[i];\n        const d = Math.abs(aa) + Math.abs(bb);\n        d > 0 && (delta += Math.abs(aa - bb) / d);\n    }\n    return delta;\n};\n","import { compile } from \"./compile/emit.js\";\nimport { vop } from \"./vop.js\";\nconst $ = (dim) => distChebyshev.add(dim, compile(dim, ([a, b]) => `Math.abs(${a}-${b})`, \"a,b\", undefined, \"\", \",\", \"return Math.max(\", \");\"));\n/**\n * @remarks\n * Reference: https://en.wikipedia.org/wiki/Chebyshev_distance\n */\nexport const distChebyshev = vop();\ndistChebyshev.default((a, b) => {\n    let max = 0;\n    for (let i = a.length; i-- > 0;) {\n        max = Math.max(max, Math.abs(a[i] - b[i]));\n    }\n    return max;\n});\nexport const distChebyshev2 = $(2);\nexport const distChebyshev3 = $(3);\nexport const distChebyshev4 = $(4);\n","/**\n * Normalized Hamming distance between `a` and `b`, i.e. number of differing\n * components divided by vector size.\n *\n * @remarks\n * Reference: https://en.wikipedia.org/wiki/Hamming_distance\n *\n * @param a -\n * @param b -\n */\nexport const distHamming = (a, b) => {\n    let delta = 0;\n    for (let i = a.length; i-- > 0;) {\n        a[i] !== b[i] && delta++;\n    }\n    return delta / a.length;\n};\n","import { radians2 } from \"./radians.js\";\n/**\n * Returns distance between 2 points along a great circle on a sphere, using the\n * Haversine formula, with each point given as [lat, lon] (in WGS84 format).\n * Uses Earth's radius `r=6371` by default, therefore returns distance in km (by\n * default).\n *\n * @remarks\n * References:\n * - https://en.wikipedia.org/wiki/Haversine_formula\n * - https://stackoverflow.com/a/21623206\n *\n * @param a -\n * @param b -\n * @param r -\n */\nexport const distHaversineLatLon = (a, b, r = 6371) => {\n    a = radians2([], a);\n    b = radians2([], b);\n    return dist(a[0], a[1], b[0], b[1], r);\n};\n/**\n * Same as {@link distHaversineLatLon}, only for coordinates defined in\n * [lon,lat] order.\n *\n * @param a -\n * @param b -\n * @param r -\n */\nexport const distHaversineLonLat = (a, b, r = 6371) => {\n    a = radians2([], a);\n    b = radians2([], b);\n    return dist(a[1], a[0], b[1], b[0], r);\n};\n/**\n * @deprecated use {@link distHaversineLonLat} instead\n */\nexport const distHaversine = distHaversineLonLat;\nconst dist = (lat1, lon1, lat2, lon2, r) => {\n    const dlat = 0.5 - Math.cos(lat2 - lat1) * 0.5;\n    const dlon = (1 - Math.cos(lon2 - lon1)) * 0.5;\n    const combined = dlat + Math.cos(lat1) * Math.cos(lat2) * dlon;\n    return 2 * r * Math.asin(Math.sqrt(combined));\n};\n","import { rad } from \"@thi.ng/math/angle\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { FN } from \"./compile/templates.js\";\nexport const [radians, radians2, radians3, radians4] = defHofOp(rad, FN(\"op\"));\n","/**\n * @remarks\n * Reference: https://en.wikipedia.org/wiki/Jaccard_index\n *\n * @param a -\n * @param b -\n */\nexport const distJaccard = (a, b) => {\n    let numNZ = 0;\n    let numEQ = 0;\n    for (let i = a.length; i-- > 0;) {\n        const aa = a[i] !== 0;\n        const bb = b[i] !== 0;\n        numNZ += ~~(aa || bb);\n        numEQ += ~~(aa && bb);\n    }\n    return numNZ ? (numNZ - numEQ) / numNZ : 0;\n};\n","import { compile, compileG } from \"./compile/emit.js\";\nimport { vop } from \"./vop.js\";\nconst $ = (dim) => distManhattan.add(dim, compile(dim, ([a, b]) => `Math.abs(${a}-${b})`, \"a,b\", undefined, \"\", \"+\", \"return \", \";\"));\n/**\n * @remarks\n * Reference: https://en.wikipedia.org/wiki/Taxicab_geometry\n */\nexport const distManhattan = vop();\ndistManhattan.default(compileG(([a, b]) => `sum+=Math.abs(${a}-${b});`, \"a,b\", undefined, \"sum\", \"let sum=0;\"));\nexport const distManhattan2 = $(2);\nexport const distManhattan3 = $(3);\nexport const distManhattan4 = $(4);\n","/**\n * @remarks\n * The Minkowski power `p` MUST be > 0.\n *\n * Reference: https://en.wikipedia.org/wiki/Minkowski_distance\n *\n * @param a -\n * @param b -\n * @param p -\n */\nexport const distMinkowski = (a, b, p) => {\n    let delta = 0;\n    for (let i = a.length; i-- > 0;) {\n        delta += Math.abs(a[i] - b[i]) ** p;\n    }\n    return delta ** (1 / p);\n};\n","/**\n * @remarks\n * Reference: https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient\n *\n * @param a -\n * @param b -\n */\nexport const distSorensenDice = (a, b) => {\n    let numTP = 0;\n    let numFP = 0;\n    for (let i = a.length; i-- > 0;) {\n        const aa = a[i] !== 0;\n        const bb = b[i] !== 0;\n        numTP += ~~(aa && bb);\n        numFP += ~~(aa !== bb);\n    }\n    return numFP ? numFP / (2 * numTP + numFP) : 0;\n};\n","import { mul } from \"./mul.js\";\n/**\n * Higher order distance function. Takes an existing {@link DistanceFn} `fn` and\n * a vector of `weights` to control impact of each dimension. Returns new\n * {@link DistanceFn}, which when called, first applies `weights` to both inputs\n * and then uses `fn` to compute distance between the weighted results.\n *\n * @example\n * ```ts\n * const distXZ = weightedDistance(dist3, [1,0,1]);\n *\n * // distance in XZ plane only\n * distXZ(ONE3, ZERO3);\n * // 1.4142135623730951\n *\n * // compare with full eucledian distance\n * dist3(ONE3, ZERO3);\n * // 1.7320508075688772\n * ```\n *\n * @param fn -\n * @param weights -\n */\nexport const weightedDistance = (fn, weights) => (a, b) => fn(mul([], a, weights), mul([], b, weights));\n","import { defBitOp, defBitOpN } from \"./compile/emit.js\";\nexport const [divI, divI2, divI3, divI4] = defBitOp(\"/\", true);\nexport const [divU, divU2, divU3, divU4] = defBitOp(\"/\");\nexport const [divNI, divNI2, divNI3, divNI4] = defBitOpN(\"/\", true);\nexport const [divNU, divNU2, divNU3, divNU4] = defBitOpN(\"/\");\n","import { defMathOpN } from \"./compile/emit.js\";\nexport const [divN, divN2, divN3, divN4] = defMathOpN(\"/\");\n","import { defOpS } from \"./compile/emit.js\";\nimport { MATH } from \"./compile/templates.js\";\nexport const [divS, divS2, divS3, divS4] = defOpS(MATH(\"/\"));\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_V, ARGS_VN, MATH_N, SARGS_V } from \"./compile/templates.js\";\nexport const [divNS, divNS2, divNS3, divNS4] = defOpS(MATH_N(\"/\"), ARGS_VN, SARGS_V, ARGS_V);\n","/**\n * Returns pairwise product sum of given components.\n *\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n */\nexport const dotC4 = (a, b, c, d) => a * b + c * d;\n/**\n * Returns pairwise product sum of given components.\n *\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n * @param e -\n * @param f -\n */\nexport const dotC6 = (a, b, c, d, e, f) => a * b + c * d + e * f;\n/**\n * Returns pairwise product sum of given components.\n *\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n * @param e -\n * @param f -\n * @param g -\n * @param h -\n */\nexport const dotC8 = (a, b, c, d, e, f, g, h) => a * b + c * d + e * f + g * h;\n","import { compile } from \"./compile/emit.js\";\nimport { DOT, SARGS_V } from \"./compile/templates.js\";\nexport const dotS = (a, b, n, ia = 0, ib = 0, sa = 1, sb = 1) => {\n    let sum = 0;\n    for (; n-- > 0; ia += sa, ib += sb)\n        sum += a[ia] * b[ib];\n    return sum;\n};\nconst $ = (dim) => compile(dim, DOT, `o,a,${SARGS_V}`, \"o,a\", \"\", \"+\", \"return \", \";\", true);\nexport const dotS2 = $(2);\nexport const dotS3 = $(3);\nexport const dotS4 = $(4);\n","import { vop } from \"./vop.js\";\n/**\n * Returns returns true if all vector components in `v` are truthy.\n *\n * @param v -\n */\nexport const every = vop();\nevery.default((v) => {\n    for (let i = v.length; i-- > 0;) {\n        if (!v[i])\n            return false;\n    }\n    return true;\n});\nexport const every2 = every.add(2, (a) => a[0] && a[1]);\nexport const every3 = every.add(3, (a) => a[0] && a[1] && a[2]);\nexport const every4 = every.add(4, (a) => a[0] && a[1] && a[2] && a[3]);\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [exp, exp2, exp3, exp4] = defFnOp(\"Math.exp\");\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_V } from \"./compile/templates.js\";\n/**\n * Componentwise 2^x\n */\nexport const [exp_2, exp_22, exp_23, exp_24] = defOp(([o, a]) => `${o}=Math.pow(2,${a});`, ARGS_V);\n","import { dot } from \"./dot.js\";\nimport { mulN } from \"./muln.js\";\nimport { set } from \"./set.js\";\nexport const faceForward = (out, n, i, nref) => {\n    !out && (out = n);\n    return dot(nref, i) < 0\n        ? out !== n\n            ? set(out, n)\n            : out\n        : mulN(out, n, -1);\n};\n","import { mapV } from \"./map.js\";\nimport { set } from \"./set.js\";\n/**\n * Fills Vec2/3/4 view based buffer, supporting arbitrary component and\n * element layouts of both the input and output buffers. The `out`\n * vector is used as write cursor over the underlying buffer and will be\n * filled with the components of vector `v`.\n *\n * @example\n * ```ts\n * fill(\n *   new Vec2(new Float32Array(12)),\n *   new Vec2([1, 2]),\n *   3, // num elements\n *   4  // stride\n * )\n * // Float32Array [1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0]\n * ```\n *\n * @param out - target vector / wrapped buffer\n * @param v - fill vector\n * @param num - number of elements to fill\n * @param so - output stride\n */\nexport const fill = (out, v, num, so = out.length * out.stride) => mapV(set.impl(v.length), out, v, num, so, 0);\n","/**\n * Vec2/3/4 view based buffer transformation for {@link VecOpVV} type\n * ops and supporting arbitrary component and element layouts of all\n * input and output buffers.\n *\n * @remarks\n * The given pre-initialized vectors MUST be separate instances, are\n * used as sliding cursors / views of their respective backing buffers\n * and will be modified as part of the transformation process (though\n * the input buffers themselves are treated as immutable, unless `out`\n * is configured to use one of the input buffers).\n *\n * In each iteration `op` is called via `op(out, a, b)`, followed by\n * cursor updates to process the next vector view. No bounds checking is\n * performed.\n *\n * This function returns `out`'s backing buffer.\n *\n * @example\n * ```ts\n * // each input buffer contains 2 2D vectors, but using\n * // different strided data layouts\n * mapVV(\n *   // transformation function\n *   add,\n *   // init output buffer view\n *   new Vec2(),\n *   // wrap 1st input buffer & configure offset & component stride\n *   new Vec2([1,0,2,0,0,0,0,0,3,0,4,0,0,0,0,0], 0, 2),\n *   // wrap 2nd input buffer\n *   new Vec2([0,10,0,0,20,0,0,30,0,0,40], 1, 3),\n *   2, // num vectors\n *   2, // output element stride\n *   8, // input #1 element stride\n *   6  // input #2 element stride\n * );\n * // [ 11, 22, 33, 44 ]\n * ```\n *\n * Alternatively, `Vec2/3/4.iterator()` combined with transducers can be\n * used to achieve the same (and more flexible) transformations, but\n * will incur more intermediate object allocations. `mapV*()` functions\n * only use (and mutate) the provided vector instances and do not\n * allocate any further objects.\n *\n * ```ts\n * // output buffer\n * const out = new Array(4);\n *\n * tx.run(\n *   tx.map(([o, a, b]) => add(o, a, b)),\n *   tx.zip(\n *      Vec2.iterator(out, 2),\n *      Vec2.iterator([1,0,2,0,0,0,0,0,3,0,4,0,0,0,0,0], 2, 0, 2, 8),\n *      Vec2.iterator([0,10,0,0,20,0,0,30,0,0,40], 2, 1, 3, 6),\n *   )\n * );\n *\n * out\n * // [ 11, 22, 33, 44 ]\n * ```\n *\n * @param op -\n * @param out -\n * @param a -\n * @param b -\n * @param num -\n * @param so -\n * @param sa -\n * @param sb -\n */\nexport const mapVV = (op, out, a, b, num, so = out.length * out.stride, sa = a.length * a.stride, sb = b.length * b.stride) => {\n    while (num-- > 0) {\n        op(out, a, b);\n        out.offset += so;\n        a.offset += sa;\n        b.offset += sb;\n    }\n    return out.buf;\n};\n/**\n * Like {@link mapVV}, but for {@link VecOpV} type ops and hence only using\n * single input.\n *\n * @example\n * ```ts\n * // 4x 2D vectors in SOA layout\n * // i.e. [x1, x2, x3, x4, y1, y2, y3, y4]\n * buf = [1, 3, 5, 7, 2, 4, 6, 8];\n *\n * // use `swapXY` to swizzle each vector and use AOS for output\n * res = mapV(swapXY, new Vec2(), new Vec2(buf, 0, 4), 4, 2, 1);\n * // [ 2, 1, 4, 3, 6, 5, 8, 7 ]\n *\n * // unpack result for demonstration purposes\n * [...Vec2.iterator(res, 4)].map(v => [...v]);\n * // [ [ 2, 1 ], [ 4, 3 ], [ 6, 5 ], [ 8, 7 ] ]\n * ```\n *\n * @param op -\n * @param out -\n * @param a -\n * @param num -\n * @param so -\n * @param sa -\n */\nexport const mapV = (op, out, a, num, so = out.length * out.stride, sa = a.length * a.stride) => {\n    while (num-- > 0) {\n        op(out, a);\n        out.offset += so;\n        a.offset += sa;\n    }\n    return out.buf;\n};\n/**\n * Like {@link mapVV}, but for {@link VecOpVN} type ops and hence using\n * a single vector input buffer `a` and a scalar `n`.\n *\n * @param op -\n * @param out -\n * @param a -\n * @param n -\n * @param num -\n * @param so -\n * @param sa -\n */\nexport const mapVN = (op, out, a, n, num, so = out.length * out.stride, sa = a.length * a.stride) => {\n    while (num-- > 0) {\n        op(out, a, n);\n        out.offset += so;\n        a.offset += sa;\n    }\n    return out.buf;\n};\n/**\n * Like {@link mapVV}, but for {@link VecOpVVV} type ops and hence using\n * three vector input buffers `a`, `b`, `c`.\n *\n * @param op -\n * @param out -\n * @param a -\n * @param b -\n * @param c -\n * @param num -\n * @param so -\n * @param sa -\n * @param sb -\n * @param sc -\n */\nexport const mapVVV = (op, out, a, b, c, num, so = out.length * out.stride, sa = a.length * a.stride, sb = b.length * b.stride, sc = c.length * c.stride) => {\n    while (num-- > 0) {\n        op(out, a, b, c);\n        out.offset += so;\n        a.offset += sa;\n        b.offset += sb;\n        c.offset += sc;\n    }\n    return out.buf;\n};\n/**\n * Like {@link mapVV}, but for {@link VecOpVVN} type ops and hence using\n * two vector input buffers `a`, `b` and a scalar `n`.\n *\n * @param op -\n * @param out -\n * @param a -\n * @param b -\n * @param n -\n * @param num -\n * @param so -\n * @param sa -\n * @param sb -\n */\nexport const mapVVN = (op, out, a, b, n, num, so = out.length * out.stride, sa = a.length * a.stride, sb = b.length * b.stride) => {\n    while (num-- > 0) {\n        op(out, a, b, n);\n        out.offset += so;\n        a.offset += sa;\n        b.offset += sb;\n    }\n    return out.buf;\n};\n","import { fit as _fit, fit01 as _fit01, fit11 as _fit11, } from \"@thi.ng/math/fit\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { ARGS_VVV, FN3, FN5 } from \"./compile/templates.js\";\nexport const [fit, fit2, fit3, fit4] = defHofOp(_fit, FN5(), \"o,a,b,c,d,e\");\nexport const [fit01, fit01_2, fit01_3, fit01_4] = defHofOp(_fit01, FN3(), ARGS_VVV);\nexport const [fit11, fit11_2, fit11_3, fit11_4] = defHofOp(_fit11, FN3(), ARGS_VVV);\n","import { clamp01, clamp11 } from \"./interval.js\";\n/**\n * Returns normalized value of `x` WRT to interval `a .. b`. If `a`\n * equals `b`, returns 0.\n *\n * @param x -\n * @param a -\n * @param b -\n */\nexport const norm = (x, a, b) => (b !== a ? (x - a) / (b - a) : 0);\nexport const fit = (x, a, b, c, d) => c + (d - c) * norm(x, a, b);\nexport const fitClamped = (x, a, b, c, d) => c + (d - c) * clamp01(norm(x, a, b));\nexport const fit01 = (x, a, b) => a + (b - a) * clamp01(x);\nexport const fit10 = (x, a, b) => b + (a - b) * clamp01(x);\nexport const fit11 = (x, a, b) => a + (b - a) * (0.5 + 0.5 * clamp11(x));\n","import { defMathOp } from \"./compile/emit.js\";\n/**\n * Similar to {@link mod}, {@link remainder}. This version of modulo uses the\n * same logic as the standard C function `fmod` and/or the JS `%` operator,\n * yielding results with the same sign as `a`, i.e. computes `a-b*trunc(a/b)`.\n *\n * @remarks\n * **Caution:** Due to the introduction of libc math functions in thi.ng/math\n * v4.0.0 and the resulting name/behavior clashes between the modulo logic in\n * JS, C & GLSL, this function previously _was_ called `mod`, but going forward\n * has been renamed/swapped to align w/ its C version and now exhibits a\n * different behavior than the current {@link mod} function.\n */\nexport const [fmod, fmod2, fmod3, fmod4] = defMathOp(\"%\");\n","import { defMathOpN } from \"./compile/emit.js\";\n/**\n * Same as {@link fmod}, but 2nd operand is a single scalar (uniform domain for\n * all vector components).\n */\nexport const [fmodN, fmodN2, fmodN3, fmodN4] = defMathOpN(\"%\");\n","import { fract as _fract } from \"@thi.ng/math/prec\";\nimport { defHofOp } from \"./compile/emit.js\";\nexport const [fract, fract2, fract3, fract4] = defHofOp(_fract);\n","import { EPS } from \"./api.js\";\n/**\n * Similar to {@link fmod}, {@link remainder}. Returns `a - b * floor(a / b)`\n * (same as GLSL `mod(a, b)`)\n *\n * @remarks\n * **Caution:** Due to the introduction of libc math functions in v4.0.0 and the\n * resulting name/behavior clashes between the modulo logic in JS, C & GLSL,\n * this function previously _was_ called `fmod`, but going forward has been\n * renamed to align w/ its GLSL version and exhibits a different behavior to the\n * current {@link fmod} function.\n *\n * https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/mod.xhtml\n *\n * @param a -\n * @param b -\n */\nexport const mod = (a, b) => a - b * Math.floor(a / b);\nexport const fract = (x) => x - Math.floor(x);\nexport const trunc = (x) => (x < 0 ? Math.ceil(x) : Math.floor(x));\nexport const roundTo = (x, prec = 1) => Math.round(x / prec) * prec;\nexport const floorTo = (x, prec = 1) => Math.floor(x / prec) * prec;\nexport const ceilTo = (x, prec = 1) => Math.ceil(x / prec) * prec;\n/**\n * Only rounds `x` to nearest int if `fract(x)` <= `eps` or >= `1-eps`.\n *\n * @param x -\n * @param eps -\n */\nexport const roundEps = (x, eps = EPS) => {\n    const f = fract(x);\n    return f <= eps || f >= 1 - eps ? Math.round(x) : x;\n};\n","import { EPS } from \"@thi.ng/math/api\";\nimport { memoize1 } from \"@thi.ng/memoize/memoize1\";\nimport { map } from \"@thi.ng/transducers/map\";\nimport { range } from \"@thi.ng/transducers/range\";\nimport { eqDeltaS } from \"./eqdelta.js\";\nimport { stridedValues } from \"./iterator.js\";\nimport { zeroes } from \"./setn.js\";\nimport { setS } from \"./sets.js\";\nimport { FORMATTER } from \"./string.js\";\nconst SYM_B = \"buf\";\nconst SYM_L = \"length\";\nconst SYM_O = \"offset\";\nconst SYM_S = \"stride\";\nconst SYM_C = \"copy\";\nconst SYM_CV = \"copyView\";\nconst SYM_EMPTY = \"empty\";\nconst SYM_EQD = \"eqDelta\";\nconst SYM_STR = \"toString\";\nconst PROPS = new Set([\n    SYM_B,\n    SYM_C,\n    SYM_CV,\n    SYM_EMPTY,\n    SYM_EQD,\n    SYM_L,\n    SYM_O,\n    SYM_S,\n    SYM_STR,\n    Symbol.iterator,\n]);\nconst keys = memoize1((size) => [\n    ...map(String, range(size)),\n    ...PROPS,\n]);\n/**\n * Wrapper for strided, arbitrary length vectors.\n *\n * @remarks\n * Wraps given buffer in ES6 `Proxy` with custom property\n * getters/setters and implements the following interfaces:\n *\n * - `Iterable` (ES6)\n * - {@link @thi.ng/api#ICopy}\n * - {@link @thi.ng/api#IEmpty}\n * - {@link @thi.ng/api#IEqualsDelta}\n * - {@link IVector}\n * - `Object.toString()`\n *\n * Read/write access for the following properties:\n *\n * - array indices in the [0 .. `size`) interval\n * - `offset` - start index\n * - `stride` - component stride\n * - `buf` - backing buffer (readonly)\n * - `length` - vector size\n *\n * Array index access uses bounds checking against the [0 .. `size`)\n * interval, but, for performance reasons, **not** against the actual\n * wrapped buffer.\n *\n * Note: ES6 proxies are ~10x slower than standard array accesses. If\n * several computations are to be performed on such vectors it will be\n * much more efficient to first copy them to compact arrays and then\n * copy result back if needed.\n *\n * @example\n * ```\n * // 3D vector w/ stride length of 4\n * a = gvec([1,0,0,0,2,0,0,0,3,0,0,0], 3, 0, 4);\n * a[0] // 1\n * a[1] // 2\n * a[2] // 3\n *\n * a.stride\n * // 4\n *\n * [...a]\n * // [1, 2, 3]\n *\n * a.toString()\n * // \"[1,2,3]\"\n *\n * add([], a, a)\n * // [2, 4, 6]\n *\n * copy(a)\n * // [1, 2, 3]\n *\n * a.copyView()\n * // Proxy [ [ 1, 0, 2, 0, 3, 0 ], ... }\n *\n * eqDelta(a, [1, 2, 3])\n * // true\n * ```\n *\n * @param buf - backing buffer\n * @param size - vector size / num components\n * @param offset - start index\n * @param stride - component stride\n */\nexport const gvec = (buf, size, offset = 0, stride = 1) => new Proxy(buf, {\n    get(obj, id) {\n        switch (id) {\n            case Symbol.iterator:\n                return () => stridedValues(obj, size, offset, stride);\n            case SYM_L:\n                return size;\n            case SYM_B:\n                return buf;\n            case SYM_O:\n                return offset;\n            case SYM_S:\n                return stride;\n            case SYM_C:\n                return () => setS([], obj, size, 0, offset, 1, stride);\n            case SYM_CV:\n                return () => gvec(obj, size, offset, stride);\n            case SYM_EMPTY:\n                return () => zeroes(size);\n            case SYM_EQD:\n                return (o, eps = EPS) => eqDeltaS(buf, o, size, eps, offset, 0, stride, 1);\n            case SYM_STR:\n                return () => FORMATTER(stridedValues(obj, size, offset, stride));\n            default:\n                const j = parseInt(id);\n                return !isNaN(j) && j >= 0 && j < size\n                    ? obj[offset + j * stride]\n                    : undefined;\n        }\n    },\n    set(obj, id, value) {\n        const j = parseInt(id);\n        if (!isNaN(j) && j >= 0 && j < size) {\n            obj[offset + (id | 0) * stride] = value;\n        }\n        else {\n            switch (id) {\n                case SYM_O:\n                    offset = value;\n                    break;\n                case SYM_S:\n                    stride = value;\n                    break;\n                case SYM_L:\n                    size = value;\n                    break;\n                default:\n                    return false;\n            }\n        }\n        return true;\n    },\n    has(_, id) {\n        return (id >= 0 && id < size) || PROPS.has(id);\n    },\n    ownKeys() {\n        return keys(size);\n    },\n});\n","/**\n * Optimized memoization for single arg functions. If the function\n * expects args other than strings or numbers, you MUST provide a `Map`\n * implementation which supports value (rather than object) equality,\n * e.g. one of those provided by\n * {@link @thi.ng/associative# | @thi.ng/associative}. Using a native\n * `Map` type here will lead to memory leaks! Alternatively, use\n * {@link (memoizeJ:1)}.\n *\n * @param fn -\n * @param cache -\n */\nexport const memoize1 = (fn, cache) => {\n    !cache && (cache = new Map());\n    return (x) => {\n        let res;\n        return cache.has(x)\n            ? cache.get(x)\n            : (cache.set(x, (res = fn(x))), res);\n    };\n};\n","import { atan2Abs } from \"@thi.ng/math/angle\";\nconst $ = (u, v) => (a, b) => atan2Abs(b[u] - a[u], b[v] - a[v]);\n/**\n * Computes direction angle (in radians) of line segment `a` -> `b` in\n * XY plane.\n *\n * @param a -\n * @param b -\n */\nexport const headingSegmentXY = $(1, 0);\n/**\n * Computes direction angle (in radians) of line segment `a` -> `b` in\n * XZ plane.\n *\n * @param a -\n * @param b -\n */\nexport const headingSegmentXZ = $(2, 0);\n/**\n * Computes direction angle (in radians) of line segment `a` -> `b` in\n * ZY plane.\n *\n * @param a -\n * @param b -\n */\nexport const headingSegmentYZ = $(2, 1);\n/**\n * Same as {@link headingSegmentXY}.\n */\nexport const headingSegment = headingSegmentXY;\n","import { vop } from \"./vop.js\";\nimport { setC2, setC3 } from \"./setc.js\";\nexport const fromHomogeneous = vop(1);\nexport const fromHomogeneous3 = fromHomogeneous.add(3, (out, [x, y, w]) => setC2(out || [], x / w, y / w));\nexport const fromHomogeneous4 = fromHomogeneous.add(4, (out, [x, y, z, w]) => setC3(out || [], x / w, y / w, z / w));\n","import { defOp } from \"./compile/emit.js\";\nexport const [invert, invert2, invert3, invert4] = defOp(([o, a]) => `${o}=1/${a};`);\n","import { defOp } from \"./compile/emit.js\";\nexport const [invSqrt, invSqrt2, invSqrt3, invSqrt4] = defOp(([o, a]) => `${o}=1/Math.sqrt(${a});`);\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [isInf, isInf2, isInf3, isInf4] = defFnOp(\"!isFinite\");\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [isNaN, isNaN2, isNaN3, isNaN4] = defFnOp(\"isNaN\");\n","import { mag } from \"./mag.js\";\nimport { mulN } from \"./muln.js\";\nimport { set } from \"./set.js\";\n/**\n * Limits `v` to max length `n` and writes result to `out` (or to itself if\n * `out` is null).\n *\n * @param out -\n * @param v -\n * @param n -\n */\nexport const limit = (out, v, n) => {\n    !out && (out = v);\n    const m = mag(v);\n    return m > n ? mulN(out, v, n / m) : out !== v ? set(out, v) : out;\n};\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [log, log2, log3, log4] = defFnOp(\"Math.log\");\n","import { defFnOp } from \"./compile/emit.js\";\n/**\n * Componentwise Math.log2\n */\nexport const [log_2, log_22, log_23, log_24] = defFnOp(\"Math.log2\");\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VN, MATH, MATH_N } from \"./compile/templates.js\";\nexport const [logicAnd, logicAnd2, logicAnd3, logicAnd4] = defOp(MATH(\"&&\"));\nexport const [logicAndN, logicAndN2, logicAndN3, logicAndN4] = defOp(MATH_N(\"&&\"), ARGS_VN);\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [logicNot, logicNot2, logicNot3, logicNot4] = defFnOp(\"!\");\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VN, MATH, MATH_N } from \"./compile/templates.js\";\nexport const [logicOr, logicOr2, logicOr3, logicOr4] = defOp(MATH(\"||\"));\nexport const [logicOrN, logicOrN2, logicOrN3, logicOrN4] = defOp(MATH_N(\"||\"), ARGS_VN);\n","import { defBitOp, defBitOpN } from \"./compile/emit.js\";\nexport const [lshiftI, lshiftI2, lshiftI3, lshiftI4] = defBitOp(\"<<\", true);\nexport const [lshiftU, lshiftU2, lshiftU3, lshiftU4] = defBitOp(\"<<\");\n// prettier-ignore\nexport const [lshiftNI, lshiftNI2, lshiftNI3, lshiftNI4] = defBitOpN(\"<<\", true);\nexport const [lshiftNU, lshiftNU2, lshiftNU3, lshiftNU4] = defBitOpN(\"<<\");\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_VVV, MATH2, SARGS_VVV } from \"./compile/templates.js\";\nexport const [maddS, maddS2, maddS3, maddS4] = defOpS(MATH2(\"*\", \"+\"), ARGS_VVV, SARGS_VVV, ARGS_VVV);\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_VNV, MATH2A_N, SARGS_VV } from \"./compile/templates.js\";\nexport const [maddNS, maddNS2, maddNS3, maddNS4] = defOpS(MATH2A_N(\"*\", \"+\"), ARGS_VNV, SARGS_VV);\n","import { dotS, dotS2, dotS3, dotS4 } from \"./dots.js\";\nexport const magS = (a, num, ia, sa) => Math.sqrt(dotS(a, a, num, ia, ia, sa, sa));\nexport const magS2 = (a, ia, sa) => Math.sqrt(dotS2(a, a, ia, ia, sa, sa));\nexport const magS3 = (a, ia, sa) => Math.sqrt(dotS3(a, a, ia, ia, sa, sa));\nexport const magS4 = (a, ia, sa) => Math.sqrt(dotS4(a, a, ia, ia, sa, sa));\n","import { dotS2, dotS3, dotS4 } from \"./dots.js\";\nexport const magSqS2 = (a, ia, sa) => dotS2(a, a, ia, ia, sa, sa);\nexport const magSqS3 = (a, ia, sa) => dotS3(a, a, ia, ia, sa, sa);\nexport const magSqS4 = (a, ia, sa) => dotS4(a, a, ia, ia, sa, sa);\n","import { max2id, max3id, max4id } from \"@thi.ng/math/interval\";\nimport { vop } from \"./vop.js\";\nconst abs = Math.abs;\n/**\n * Returns index of major component/axis in `v`, i.e. where `|v[i]|` is\n * the largest.\n *\n * @param v -\n */\nexport const major = vop();\nmajor.default((a) => {\n    let id = -1;\n    let max = -Infinity;\n    for (let i = a.length; i-- > 0;) {\n        const x = abs(a[i]);\n        if (x > max) {\n            max = x;\n            id = i;\n        }\n    }\n    return id;\n});\nexport const major2 = major.add(2, (a) => max2id(abs(a[0]), abs(a[1])));\nexport const major3 = major.add(3, (a) => max3id(abs(a[0]), abs(a[1]), abs(a[2])));\nexport const major4 = major.add(4, (a) => max4id(abs(a[0]), abs(a[1]), abs(a[2]), abs(a[3])));\n","import { isNumber } from \"@thi.ng/checks/is-number\";\nexport function mapVectors(fn, out, a, b, c) {\n    const num = a.length;\n    !out && (out = new Array(num));\n    c !== undefined\n        ? isNumber(c)\n            ? mapVVN(fn, out, a, b, c)\n            : mapVVV(fn, out, a, b, c)\n        : isNumber(b)\n            ? mapVN(fn, out, a, b)\n            : mapVV(fn, out, a, b);\n    return out;\n}\nconst mapVN = (fn, out, a, b) => {\n    for (let i = 0, num = a.length; i < num; i++) {\n        out[i] = fn(out[i] || [], a[i], b);\n    }\n};\nconst mapVV = (fn, out, a, b) => {\n    for (let i = 0, num = a.length; i < num; i++) {\n        out[i] = fn(out[i] || [], a[i], b[i]);\n    }\n};\nconst mapVVN = (fn, out, a, b, c) => {\n    for (let i = 0, num = a.length; i < num; i++) {\n        out[i] = fn(out[i] || [], a[i], b[i], c);\n    }\n};\nconst mapVVV = (fn, out, a, b, c) => {\n    for (let i = 0, num = a.length; i < num; i++) {\n        out[i] = fn(out[i] || [], a[i], b[i], c[i]);\n    }\n};\n","import { defOp } from \"./compile/emit.js\";\nimport { FN2 } from \"./compile/templates.js\";\nexport const [max, max2, max3, max4] = defOp(FN2(\"Math.max\"));\n","import { __ensureInputs } from \"./internal/ensure.js\";\nimport { max } from \"./max.js\";\nimport { setN } from \"./setn.js\";\nimport { vecOf } from \"./vec-of.js\";\n/**\n * Takes an array of vectors and computes componentwise maximum. Writes result\n * to `out` (or a new vector).\n *\n * @param out -\n * @param src -\n */\nexport const maxBounds = (out, src) => {\n    __ensureInputs(src);\n    out = out ? setN(out, -Infinity) : vecOf(src[0].length, -Infinity);\n    for (let i = src.length; i-- > 0;)\n        max(out, out, src[i]);\n    return out;\n};\n","/**\n * Returns new vector of `size` with all components set to `n` (default: 0).\n *\n * @param size -\n * @param n -\n */\nexport const vecOf = (size, n = 0) => new Array(size).fill(n);\n/**\n * Returns new one-hot vector of given `size` with `hot` element index (in\n * `[0..size)` range).\n *\n * @remarks\n * Reference: https://en.wikipedia.org/wiki/One-hot\n *\n * @param size -\n * @param hot -\n */\nexport const oneHot = (size, hot) => {\n    const res = vecOf(size);\n    res[hot] = 1;\n    return res;\n};\n","import { __ensureInputs } from \"./internal/ensure.js\";\n/**\n * Takes an array of vectors (of uniform dimensions) and computes the\n * componentwise medians (in accordance to the Manhattan-distance formulation of\n * the k-medians problem). Writes result to `out` (or a new vector).\n *\n * @example\n * ```ts\n * median([], [[3, 10, 400], [4, 30, 100], [1, 40, 200], [2, 20, 300]])\n * // [ 3, 30, 300 ]\n * ```\n *\n * @param out -\n * @param src -\n */\nexport const median = (out, src) => {\n    __ensureInputs(src);\n    out = out || [];\n    const m = src.length >> 1;\n    for (let i = src[0].length; i-- > 0;) {\n        out[i] = src.map((x) => x[i]).sort((a, b) => a - b)[m];\n    }\n    return out;\n};\n/**\n * Computes the median component of given vector. Returns 0 if vector is empty.\n *\n * @example\n * ```ts\n * vmean([10, 20, 5, 15])\n * // 10\n * ```\n *\n * @param a -\n */\nexport const vmedian = (a) => {\n    if (!a.length)\n        return 0;\n    a = [...a].sort((a, b) => a - b);\n    return a[a.length >> 1];\n};\n","import { defOp } from \"./compile/emit.js\";\nimport { FN2 } from \"./compile/templates.js\";\nexport const [min, min2, min3, min4] = defOp(FN2(\"Math.min\"));\n","import { __ensureInputs } from \"./internal/ensure.js\";\nimport { min } from \"./min.js\";\nimport { setN } from \"./setn.js\";\nimport { vecOf } from \"./vec-of.js\";\n/**\n * Takes an array of vectors and computes componentwise minimum. Writes result\n * to `out` (or a new vector).\n *\n * @param out -\n * @param src -\n */\nexport const minBounds = (out, src) => {\n    __ensureInputs(src);\n    out = out ? setN(out, Infinity) : vecOf(src[0].length, Infinity);\n    for (let i = src.length; i-- > 0;)\n        min(out, out, src[i]);\n    return out;\n};\n","import { min2id, min3id, min4id } from \"@thi.ng/math/interval\";\nimport { vop } from \"./vop.js\";\nconst abs = Math.abs;\n/**\n * Returns index of minor component/axis in `v`, i.e. where `|v[i]|` is\n * the smallest.\n *\n * @param v -\n */\nexport const minor = vop();\nminor.default((a) => {\n    let id = -1;\n    let min = Infinity;\n    for (let i = a.length; i-- > 0;) {\n        const x = abs(a[i]);\n        if (x < min) {\n            min = x;\n            id = i;\n        }\n    }\n    return id;\n});\nexport const minor2 = minor.add(2, (a) => min2id(abs(a[0]), abs(a[1])));\nexport const minor3 = minor.add(3, (a) => min3id(abs(a[0]), abs(a[1]), abs(a[2])));\nexport const minor4 = minor.add(4, (a) => min4id(abs(a[0]), abs(a[1]), abs(a[2]), abs(a[3])));\n","import { mixBilinear as _mix } from \"@thi.ng/math/mix\";\nimport { defHofOp } from \"./compile/emit.js\";\nexport const [mixBilinear, mixBilinear2, mixBilinear3, mixBilinear4] = defHofOp(_mix, ([o, a, b, c, d]) => `${o}=op(${a},${b},${c},${d},u,v);`, \"o,a,b,c,d,u,v\");\n","import { EPS, HALF_PI, PI } from \"./api.js\";\n/**\n * Linear interpolation without clamping. Computes `a + (b - a) * t`\n *\n * @param a - start value\n * @param b - end value\n * @param t - interpolation factor [0..1]\n */\nexport const mix = (a, b, t) => a + (b - a) * t;\n/**\n * Bilinear interpolation of given values (`a`,`b`,`c`,`d`).\n *\n * @example\n * ```ts\n * c    d\n * +----+\n * |    |\n * +----+\n * a    b\n * ```\n *\n * @param a - BL value\n * @param b - BR value\n * @param c - TL value\n * @param d - TR value\n * @param u - 1st interpolation factor\n * @param v - 2nd interpolation factor\n */\nexport const mixBilinear = (a, b, c, d, u, v) => {\n    const iu = 1 - u;\n    const iv = 1 - v;\n    return a * iu * iv + b * u * iv + c * iu * v + d * u * v;\n};\nexport const mixQuadratic = (a, b, c, t) => {\n    const s = 1 - t;\n    return a * s * s + b * 2 * s * t + c * t * t;\n};\nexport const mixCubic = (a, b, c, d, t) => {\n    const t2 = t * t;\n    const s = 1 - t;\n    const s2 = s * s;\n    return a * s2 * s + b * 3 * s2 * t + c * 3 * t2 * s + d * t2 * t;\n};\n/**\n * Returns hermite interpolation of `a, b, c, d` at normalized position\n * `t`, where `a` and `d` are used as predecessor/successor of `b` / `c`\n * and only inform the tangent of the interpolation curve. The\n * interpolated result is that of `b` and `c`.\n *\n * Assumes all inputs are uniformly spaced. If that's not the case, use\n * {@link mixCubicHermite} with one of the tangent generators supporting\n * non-uniform spacing of points.\n *\n * See: {@link https://www.desmos.com/calculator/j4gf8g9vkr}\n *\n * Source:\n * {@link https://www.musicdsp.org/en/latest/Other/93-hermite-interpollation.html}\n *\n * - {@link mixCubicHermite}\n * - {@link tangentCardinal}\n * - {@link tangentDiff3}\n *\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n * @param t -\n */\nexport const mixHermite = (a, b, c, d, t) => {\n    const y1 = 0.5 * (c - a);\n    const y2 = 1.5 * (b - c) + 0.5 * (d - a);\n    return ((y2 * t + a - b + y1 - y2) * t + y1) * t + b;\n};\n/**\n * Computes cubic-hermite interpolation between `a` / `b` at normalized\n * time `t` and using respective tangents `ta` / `tb`.\n *\n * {@link https://en.wikipedia.org/wiki/Cubic_Hermite_spline}\n *\n * - {@link mixHermite}\n * - {@link tangentCardinal}\n * - {@link tangentDiff3}\n *\n * @param a -\n * @param ta -\n * @param b -\n * @param tb -\n * @param t -\n */\nexport const mixCubicHermite = (a, ta, b, tb, t) => {\n    const s = t - 1;\n    const t2 = t * t;\n    const s2 = s * s;\n    const h00 = (1 + 2 * t) * s2;\n    const h10 = t * s2;\n    const h01 = t2 * (3 - 2 * t);\n    const h11 = t2 * s;\n    return h00 * a + h10 * ta + h01 * b + h11 * tb;\n};\n/**\n * Similar to {@link mixCubicHermite}, but takes 4 control values (uniformly\n * spaced) and computes tangents automatically. Returns `b` iff `t=0` and `c`\n * iff `t=1.0`.\n *\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n * @param t -\n */\nexport const mixCubicHermiteFromPoints = (a, b, c, d, t) => {\n    d *= 0.5;\n    const aa = -0.5 * a + 1.5 * b - 1.5 * c + d;\n    const bb = a - 2.5 * b + 2 * c - d;\n    const cc = -0.5 * a + 0.5 * c;\n    const dd = b;\n    const t2 = t * t;\n    return t * t2 * aa + t2 * bb + t * cc + dd;\n};\n/**\n * Bicubic interpolation of given 4x4 sample values (in row major order, i.e.\n * `s00..s03` = 1st row).\n *\n * @remarks\n * Result will not be clamped and might fall outside the total range of the\n * input samples.\n *\n * @param s00 -\n * @param s01 -\n * @param s02 -\n * @param s03 -\n * @param s10 -\n * @param s11 -\n * @param s12 -\n * @param s13 -\n * @param s20 -\n * @param s21 -\n * @param s22 -\n * @param s23 -\n * @param s30 -\n * @param s31 -\n * @param s32 -\n * @param s33 -\n * @param u -\n * @param v -\n */\nexport const mixBicubic = (s00, s01, s02, s03, s10, s11, s12, s13, s20, s21, s22, s23, s30, s31, s32, s33, u, v) => mixCubicHermiteFromPoints(mixCubicHermiteFromPoints(s00, s01, s02, s03, u), mixCubicHermiteFromPoints(s10, s11, s12, s13, u), mixCubicHermiteFromPoints(s20, s21, s22, s23, u), mixCubicHermiteFromPoints(s30, s31, s32, s33, u), v);\n/**\n * Helper function for {@link mixCubicHermite}. Computes cardinal tangents\n * based on point neighbors of a point B (not given), i.e. `a`\n * (predecessor) and `c` (successor) and their times (defaults to\n * uniformly spaced). The optional `tension` parameter can be used to\n * scale the tangent where 0.0 produces a Cardinal spline tangent and\n * 1.0 a Catmull-Rom (opposite to the Wikipedia ref).\n *\n * {@link https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Cardinal_spline}\n *\n * @param prev -\n * @param next -\n * @param scale -\n * @param ta -\n * @param tc -\n */\nexport const tangentCardinal = (prev, next, scale = 0.5, ta = 0, tc = 2) => scale * ((next - prev) / (tc - ta));\n/**\n * Helper function for {@link mixCubicHermite}. Computes tangent for `curr`,\n * based on 3-point finite difference, where `prev` & `next` are\n * `curr`'s neighbors and the `tX` the three points' respective time\n * values. The latter are equally spaced by default (each 1.0 apart).\n *\n * Using this function with equal spacing of 1.0 and together with\n * {@link mixCubicHermite} will produce same results as the somewhat\n * optimized variant {@link mixHermite}.\n *\n * {@link https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Finite_difference}\n *\n * @param prev -\n * @param curr -\n * @param next -\n * @param ta -\n * @param tb -\n * @param tc -\n */\nexport const tangentDiff3 = (prev, curr, next, ta = 0, tb = 1, tc = 2) => 0.5 * ((next - curr) / (tc - tb) + (curr - prev) / (tb - ta));\n/**\n * HOF interpolator. Takes a timing function `f` and interval `[from,to]`.\n * Returns function which takes normalized time (in [0,1] range) as single arg\n * and returns interpolated value.\n *\n * @param f -\n * @param from -\n * @param to -\n */\nexport const tween = (f, from, to) => (t) => mix(from, to, f(t));\n/**\n * Circular interpolation (ease out): `sqrt(1 - (1 - t)^2)`\n *\n * @remarks\n * Reference: https://www.desmos.com/calculator/tisoiazdrw\n *\n * @param t - interpolation factor [0..1]\n */\nexport const circular = (t) => {\n    t = 1 - t;\n    return Math.sqrt(1 - t * t);\n};\n/**\n * Inverse/flipped version of {@link circular} (ease in).\n *\n * @remarks\n * Reference: https://www.desmos.com/calculator/tisoiazdrw\n *\n * @param t - interpolation factor [0..1]\n */\nexport const invCircular = (t) => 1 - circular(1 - t);\n/**\n * Zoomlens interpolation with customizable lens position, behavior and\n * strength.\n *\n * @remarks\n * Lens position must be given in (0..1) interval. Lens strength must be in\n * [-1,1] range. If negative, the lens will be bundling values near `pos`, if\n * positive the lens has dilating characteristics and will spread values near\n * `pos` towards the edges.\n *\n * Also see {@link schlick} for an alternative approach.\n *\n * @example\n * ```ts\n * // interpolated position in [100..400] interval for given `t`\n * y = mix(100, 400, lens(0.5, 1, t));\n *\n * // or build tween function via `tween()`\n * f = tween(partial(lens, 0.5, 1), 100, 400);\n *\n * f(t)\n * ```\n *\n * @param pos - lens pos\n * @param strength - lens strength\n * @param t - interpolation factor [0..1]\n */\nexport const lens = (pos, strength, t) => {\n    const impl = strength > 0 ? invCircular : circular;\n    const tp = 1 - pos;\n    const tl = t <= pos ? impl(t / pos) * pos : 1 - impl((1 - t) / tp) * tp;\n    return mix(t, tl, Math.abs(strength));\n};\nexport const cosine = (t) => 1 - (Math.cos(t * PI) * 0.5 + 0.5);\nexport const decimated = (n, t) => Math.floor(t * n) / n;\nexport const bounce = (k, amp, t) => {\n    const tk = t * k;\n    return 1 - ((amp * Math.sin(tk)) / tk) * Math.cos(t * HALF_PI);\n};\n/**\n * Exponential easing.\n *\n * - `ease = 1` -> linear\n * - `ease > 1` -> ease in\n * - `ease < 1` -> ease out\n *\n * @param ease - easing behavior [0.0 .. ∞]\n * @param t -\n */\nexport const ease = (ease, t) => Math.pow(t, ease);\n/**\n * Impulse generator. Peaks at `t = 1/k`\n *\n * @param k - impulse width (higher values => shorter impulse)\n */\nexport const impulse = (k, t) => {\n    const h = k * t;\n    return h * Math.exp(1 - h);\n};\nexport const gain = (k, t) => t < 0.5 ? 0.5 * Math.pow(2 * t, k) : 1 - 0.5 * Math.pow(2 - 2 * t, k);\nexport const parabola = (k, t) => Math.pow(4.0 * t * (1.0 - t), k);\nexport const cubicPulse = (w, c, t) => {\n    t = Math.abs(t - c);\n    return t > w ? 0 : ((t /= w), 1 - t * t * (3 - 2 * t));\n};\n/**\n * Unnormalized Sinc function: sin(x)/x. Returns 1 for t=0.\n *\n * @remarks\n * https://en.wikipedia.org/wiki/Sinc_function\n *\n * @param k -\n * @param t -\n */\nexport const sinc = (t) => (t !== 0 ? Math.sin(t) / t : 1);\n/**\n * Normalized Sinc function, returns sinc(π*k*t).\n *\n * @remarks\n * https://en.wikipedia.org/wiki/Sinc_function\n *\n * @see {@link sinc}\n *\n * @param k -\n * @param t -\n */\nexport const sincNormalized = (k, t) => sinc(PI * k * t);\n/**\n * Lanczos filter. Returns `sinc(πt)sinc(πt/a)` iff `t` in (-a,a) interval, else\n * returns 0.\n *\n * @remarks\n * Interactive graph: https://www.desmos.com/calculator/pmypqgefle\n *\n * @param a -\n * @param t -\n */\nexport const lanczos = (a, t) => t !== 0 ? (-a < t && t < a ? sinc(PI * t) * sinc((PI * t) / a) : 0) : 1;\n/**\n * Sigmoid function for inputs arounds center bias.\n *\n * @remarks\n * Updated in v3.0.0 to add bias value to satisfy more use cases. Use\n * {@link sigmoid01} for old behavior.\n *\n * @param bias - center value (for which result = 0.5)\n * @param k - steepness\n * @param t - input value\n */\nexport const sigmoid = (bias, k, t) => t != bias ? 1 / (1 + Math.exp(-k * (t - bias))) : 0.5;\n/**\n * Sigmoid function for inputs in [0..1] interval. Center bias = 0.5.\n *\n * @param k - steepness\n * @param t - input value\n */\nexport const sigmoid01 = (k, t) => sigmoid(0.5, k, t);\n/**\n * Sigmoid function for inputs in [-1..+1] interval. Center bias = 0\n *\n * @param k -\n * @param t -\n */\nexport const sigmoid11 = (k, t) => sigmoid(0, k, t);\n/**\n * Generalized Schlick bias gain curve, based on:\n * https://arxiv.org/abs/2010.09714\n *\n * @remarks\n * Interactive graph:\n * https://www.desmos.com/calculator/u6bkm5rb7t\n *\n * @param a - curve strength. recommended (0..64]\n * @param b - pivot position [0..1]\n * @param t - input val [0..1]\n */\nexport const schlick = (a, b, t) => t <= b\n    ? (b * t) / (t + a * (b - t) + EPS)\n    : ((1 - b) * (t - 1)) / (1 - t - a * (b - t) + EPS) + 1;\n/**\n * Computes exponential factor to interpolate from `a` to `b` over\n * `num` steps. I.e. multiplying `a` with the returned factor will yield\n * `b` after `num` steps. All args must be > 0.\n *\n * @param a -\n * @param b -\n * @param num -\n */\nexport const expFactor = (a, b, num) => (b / a) ** (1 / num);\n/**\n * Computes gaussian bell curve for given center `bias` and `sigma` (spread).\n *\n * @remarks\n * Interactive graph: https://www.desmos.com/calculator/aq6hdzxprv\n *\n * @param bias -\n * @param sigma -\n * @param t -\n */\nexport const gaussian = (bias, sigma, t) => Math.exp(-((t - bias) ** 2) / (2 * sigma * sigma));\n","import { addW4 } from \"./addw.js\";\n/**\n * Vector version of {@link @thi.ng/math#mixCubic}.\n *\n * @param out - result\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n * @param t - interpolation coeff [0..1]\n */\nexport const mixCubic = (out, a, b, c, d, t) => {\n    const s = 1 - t;\n    const s2 = s * s;\n    const t2 = t * t;\n    return addW4(out, a, b, c, d, s2 * s, 3 * s2 * t, 3 * t2 * s, t2 * t);\n};\n","import { addmN } from \"./addmn.js\";\nimport { addW4 } from \"./addw.js\";\nimport { submN } from \"./submn.js\";\n/**\n * Vector version of {@link @thi.ng/math#mixCubicHermite}.\n *\n * @param out - result\n * @param a -\n * @param ta - tangent A\n * @param b -\n * @param tb - tangent B\n * @param t - interpolation coeff [0..1]\n */\nexport const mixCubicHermite = (out, a, ta, b, tb, t) => {\n    const s = t - 1;\n    const t2 = t * t;\n    const s2 = s * s;\n    return addW4(out, a, ta, b, tb, (1 + 2 * t) * s2, t * s2, t2 * (3 - 2 * t), t2 * s);\n};\n/**\n * Convenience version of {@link mixCubicHermite}, using 4 input points\n * and {@link tangentCardinal} to compute the tangents for points `b`\n * and `c` (with optional `scale`, default 0.5). Interpolated result\n * point is that of `b` and `c`, with `a` and `d` only being used for\n * tangent calculations.\n *\n * If `out` is null, stores result in `b`.\n *\n * @param out - result\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n * @param t - interpolation coeff [0..1]\n * @param scale - tangent tightness / scale\n */\nexport const mixHermiteCardinal = (out, a, b, c, d, t, scale = 0.5) => mixCubicHermite(out, b, tangentCardinal([], a, c, scale), c, tangentCardinal([], b, d, scale), t);\n/**\n * Convenience version of {@link mixCubicHermite}, using 4 input points\n * and {@link tangentDiff3} to compute the tangents for points `b` and\n * `c`. Interpolated result point is that of `b` and `c`, with `a` and\n * `d` only being used for tangent calculations.\n *\n * If `out` is null, stores result in `b`.\n *\n * @param out - result\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n * @param t - interpolation coeff [0..1]\n */\nexport const mixHermiteDiff3 = (out, a, b, c, d, t) => mixCubicHermite(out, b, tangentDiff3([], a, b, c), c, tangentDiff3([], b, c, d), t);\n/**\n * Vector version of {@link @thi.ng/math#tangentCardinal}.\n *\n * @param out -\n * @param prev -\n * @param next -\n * @param scale -\n * @param ta -\n * @param tc -\n */\nexport const tangentCardinal = (out, prev, next, scale = 0.5, ta = 0, tc = 2) => submN(out, next, prev, scale / (tc - ta));\n/**\n * Vector version of {@link @thi.ng/math#tangentDiff3}.\n *\n * @param out - result\n * @param prev -\n * @param curr -\n * @param next -\n * @param ta -\n * @param tb -\n * @param tc -\n */\nexport const tangentDiff3 = (out, prev, curr, next, ta = 0, tb = 1, tc = 2) => addmN(out, submN(out, curr, prev, 1 / (tb - ta)), submN([], next, curr, 1 / (tc - tb)), 0.5);\n","import { addW3 } from \"./addw.js\";\n/**\n * Vector version of {@link @thi.ng/math#mixQuadratic}.\n *\n * @param out - result\n * @param a -\n * @param b -\n * @param c -\n * @param t - interpolation coeff [0..1]\n */\nexport const mixQuadratic = (out, a, b, c, t) => {\n    const s = 1 - t;\n    return addW3(out, a, b, c, s * s, 2 * s * t, t * t);\n};\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VVV, MIX } from \"./compile/templates.js\";\nexport const [mix, mix2, mix3, mix4] = defOp(MIX, ARGS_VVV);\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_VVV, MIX, SARGS_VVV } from \"./compile/templates.js\";\nexport const [mixS, mixS2, mixS3, mixS4] = defOpS(MIX, ARGS_VVV, SARGS_VVV, ARGS_VVV);\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_VVN, MIX_N, SARGS_VV } from \"./compile/templates.js\";\nexport const [mixNS, mixNS2, mixNS3, mixNS4] = defOpS(MIX_N, ARGS_VVN, SARGS_VV);\n","import { mod as _mod } from \"@thi.ng/math/prec\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { ARGS_VV, FN2 } from \"./compile/templates.js\";\n/**\n * Similar to {@link fmod}, {@link remainder}. This version of modulo uses the\n * same logic as in GLSL, yielding different results for negative values, i.e.\n * computes `a - b * floor(a/b)`\n *\n * @remarks\n * **Caution:** Due to the introduction of libc math functions in thi.ng/math\n * v4.0.0 and the resulting name/behavior clashes between the modulo logic in\n * JS, C & GLSL, this function previously _was_ called `fmod`, but going forward\n * has been renamed/swapped to align w/ its GLSL version and now exhibits a\n * different behavior than the current {@link fmod} function.\n *\n * https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/mod.xhtml\n */\nexport const [mod, mod2, mod3, mod4] = defHofOp(_mod, FN2(\"op\"), ARGS_VV);\n","import { mod as _mod } from \"@thi.ng/math/prec\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { ARGS_V, ARGS_VN, FN_N } from \"./compile/templates.js\";\n/**\n * Same as {@link mod}, but 2nd operand is a single scalar (uniform domain for\n * all vector components).\n */\nexport const [modN, modN2, modN3, modN4] = defHofOp(_mod, FN_N(\"op\"), ARGS_VN, ARGS_V);\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VVV, MATH2 } from \"./compile/templates.js\";\n/**\n * Returns `out = a * b + c`.\n *\n * - {@link addm}\n * - {@link maddN}\n *\n * @param out -\n * @param a -\n * @param b -\n * @param c -\n */\nexport const [msub, msub2, msub3, msub4] = defOp(MATH2(\"*\", \"-\"), ARGS_VVV);\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VNV, ARGS_VV, MATH2A_N } from \"./compile/templates.js\";\n/**\n * Returns `out = a * n + b`.\n *\n * @param out - vec\n * @param a - vec\n * @param n - scalar\n * @param b - vec\n */\nexport const [msubN, msubN2, msubN3, msubN4] = defOp(MATH2A_N(\"*\", \"-\"), ARGS_VNV, ARGS_VV);\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_VVV, MATH2, SARGS_VVV } from \"./compile/templates.js\";\nexport const [msubS, msubS2, msubS3, msubS4] = defOpS(MATH2(\"*\", \"-\"), ARGS_VVV, SARGS_VVV, ARGS_VVV);\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_VNV, MATH2A_N, SARGS_VV } from \"./compile/templates.js\";\nexport const [msubNS, msubNS2, msubNS3, msubNS4] = defOpS(MATH2A_N(\"*\", \"-\"), ARGS_VNV, SARGS_VV);\n","import { defBitOp, defBitOpN } from \"./compile/emit.js\";\nexport const [mulI, mulI2, mulI3, mulI4] = defBitOp(\"*\", true);\nexport const [mulU, mulU2, mulU3, mulU4] = defBitOp(\"*\");\nexport const [mulNI, mulNI2, mulNI3, mulNI4] = defBitOpN(\"*\", true);\nexport const [mulNU, mulNU2, mulNU3, mulNU4] = defBitOpN(\"*\");\n","import { defOpS } from \"./compile/emit.js\";\nimport { MATH } from \"./compile/templates.js\";\nexport const [mulS, mulS2, mulS3, mulS4] = defOpS(MATH(\"*\"));\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_V, ARGS_VN, MATH_N, SARGS_V } from \"./compile/templates.js\";\nexport const [mulNS, mulNS2, mulNS3, mulNS4] = defOpS(MATH_N(\"*\"), ARGS_VN, SARGS_V, ARGS_V);\n","import { mulN } from \"./muln.js\";\nexport const neg = (out, v) => mulN(out, v, -1);\n","import { direction } from \"./direction.js\";\nimport { perpendicularCCW, perpendicularCW } from \"./perpendicular.js\";\n/**\n * Computes 2D normal by rotating direction vector `a` -> `b`, 90 deg\n * counterclockwise, normalized to length `n` (default: 1). If `out` is\n * null, creates new vector.\n *\n * @param out -\n * @param a -\n * @param b -\n * @param n -\n */\nexport const normalCCW = (out, a, b, n = 1) => perpendicularCCW(null, direction(out || [], a, b, n));\n/**\n * Computes 2D normal by rotating direction vector `a` -> `b`, 90 deg\n * clockwise, normalized to length `n` (default: 1). If `out` is null,\n * creates new vector.\n *\n * @param out -\n * @param a -\n * @param b -\n * @param n -\n */\nexport const normalCW = (out, a, b, n = 1) => perpendicularCW(null, direction(out || [], a, b, n));\n","import { EPS } from \"@thi.ng/math/api\";\nimport { magS, magS2, magS3, magS4 } from \"./mags.js\";\nimport { mulNS, mulNS2, mulNS3, mulNS4 } from \"./mulns.js\";\nimport { setS, setS2, setS3, setS4 } from \"./sets.js\";\n/**\n * Normalizes strided vector to given (optional) length (default: 1). If `out`\n * is null, modifies `v` in place.\n *\n * @param out -\n * @param v -\n * @param n -\n */\nexport const normalizeS = (out, v, num, n = 1, io = 0, ia = 0, so = 1, sa = 1) => {\n    !out && (out = v);\n    const m = magS(v, num, ia, sa);\n    return m >= EPS\n        ? mulNS(out, v, n / m, num, io, ia, so, sa)\n        : out !== v\n            ? setS(out, v, num, io, ia, so, sa)\n            : out;\n};\n/**\n * Normalizes strided 2D vector to given (optional) length (default: 1). If `out`\n * is null, modifies `v` in place.\n *\n * @param out -\n * @param v -\n * @param n -\n */\nexport const normalizeS2 = (out, v, n = 1, io = 0, ia = 0, so = 1, sa = 1) => {\n    !out && (out = v);\n    const m = magS2(v, ia, sa);\n    return m >= EPS\n        ? mulNS2(out, v, n / m, io, ia, so, sa)\n        : out !== v\n            ? setS2(out, v, io, ia, so, sa)\n            : out;\n};\n/**\n * Normalizes vector to given (optional) length (default: 1). If `out`\n * is null, modifies `v` in place.\n *\n * @param out -\n * @param v -\n * @param n -\n */\nexport const normalizeS3 = (out, v, n = 1, io = 0, ia = 0, so = 1, sa = 1) => {\n    !out && (out = v);\n    const m = magS3(v, ia, sa);\n    return m >= EPS\n        ? mulNS3(out, v, n / m, io, ia, so, sa)\n        : out !== v\n            ? setS3(out, v, io, ia, so, sa)\n            : out;\n};\n/**\n * Normalizes vector to given (optional) length (default: 1). If `out`\n * is null, modifies `v` in place.\n *\n * @param out -\n * @param v -\n * @param n -\n */\nexport const normalizeS4 = (out, v, n = 1, io = 0, ia = 0, so = 1, sa = 1) => {\n    !out && (out = v);\n    const m = magS4(v, ia, sa);\n    return m >= EPS\n        ? mulNS4(out, v, n / m, io, ia, so, sa)\n        : out !== v\n            ? setS4(out, v, io, ia, so, sa)\n            : out;\n};\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_V, NEW_OUT } from \"./compile/templates.js\";\nexport const [not, not2, not3, not4] = defOp(([o, a]) => `${o}=!${a};`, ARGS_V, ARGS_V, \"o\", 1, NEW_OUT);\n","import { cross3 } from \"./cross.js\";\nimport { normalize } from \"./normalize.js\";\nimport { sub3 } from \"./sub.js\";\n/**\n * Produces a vector which is perpendicular/normal to the plane spanned\n * by given 3 input vectors. If `normalize` is true (default), the\n * result vector will be normalized.\n *\n * @example\n * ```ts\n * orthoNormal3([], [0, 0, 0], [1, 0, 0], [0, 1, 0])\n * // [0, 0, 1]\n * ```\n *\n * @param out -\n * @param a -\n * @param b -\n * @param c -\n * @param normalize -\n */\nexport const orthoNormal3 = (out, a, b, c, doNormalize = true) => {\n    out = cross3(null, sub3(out || a, b, a), sub3([], c, a));\n    return doNormalize ? normalize(out, out) : out;\n};\n","import { maddN, maddN2, maddN3 } from \"./maddn.js\";\n/**\n * Calculates the nD point laying on ray at given distance. `rayDir` MUST be\n * normalized.\n *\n * @param out -\n * @param rayOrigin -\n * @param rayDir -\n * @param dist -\n */\nexport const pointOnRay = (out, rayOrigin, rayDir, dist) => maddN(out, rayDir, dist, rayOrigin);\n/**\n * 2D version of {@link pointOnRay}.\n *\n * @param out -\n * @param rayOrigin -\n * @param rayDir -\n * @param dist -\n */\nexport const pointOnRay2 = (out, rayOrigin, rayDir, dist) => maddN2(out, rayDir, dist, rayOrigin);\n/**\n * 3D version of {@link pointOnRay}.\n *\n * @param out -\n * @param rayOrigin -\n * @param rayDir -\n * @param dist -\n */\nexport const pointOnRay3 = (out, rayOrigin, rayDir, dist) => maddN3(out, rayDir, dist, rayOrigin);\n","import { vop } from \"./vop.js\";\nimport { mag } from \"./mag.js\";\nimport { setC2, setC3 } from \"./setc.js\";\nconst sqrt = Math.sqrt;\nconst asin = Math.asin;\nconst atan2 = Math.atan2;\n/**\n * Converts cartesian vector `v` to polar coordinates. See {@link cartesian}\n * for reverse operation. If `out` is null, modifies `v` in place.\n *\n * @param out -\n * @param v -\n */\nexport const polar = vop(1);\n/**\n * Converts 2D cartesian vector `v` to polar coordinates, i.e. `[r,θ]`\n * (angle in radians). See {@link cartesian} for reverse operation. If `out`\n * is null, modifies `v` in place.\n *\n * @param out -\n * @param v -\n */\nexport const polar2 = polar.add(2, (out, a) => setC2(out || a, mag(a), atan2(a[1], a[0])));\n/**\n * Converts 3D cartesian vector `v` to spherical coordinates, i.e.\n * `[r,θ,ϕ]` (angles in radians). See {@link cartesian} for reverse\n * operation. If `out` is null, modifies `v` in place.\n *\n * @param out -\n * @param v -\n */\nexport const polar3 = polar.add(3, (out, a) => {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const r = sqrt(x * x + y * y + z * z);\n    return setC3(out || a, r, asin(z / r), atan2(y, x));\n});\n","import { defOp } from \"./compile/emit.js\";\nimport { FN2 } from \"./compile/templates.js\";\nexport const [pow, pow2, pow3, pow4] = defOp(FN2(\"Math.pow\"));\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VN, FN_N } from \"./compile/templates.js\";\nexport const [powN, powN2, powN3, powN4] = defOp(FN_N(\"Math.pow\"), ARGS_VN);\n","import { dot } from \"./dot.js\";\nimport { magSq } from \"./magsq.js\";\nimport { mulN } from \"./muln.js\";\n/**\n * Returns vector projection of `v` onto `dir`.\n *\n * {@link https://en.wikipedia.org/wiki/Vector_projection}\n *\n * @param v -\n * @param dir -\n */\nexport const project = (out, v, dir) => mulN(out || v, dir, dot(v, dir) / magSq(dir));\n","import { normal } from \"@thi.ng/random/distributions/normal\";\nimport { SYSTEM } from \"@thi.ng/random/system\";\nimport { defHofOpS } from \"./compile/emit.js\";\nimport { NEW_OUT_A, SARGS_VV } from \"./compile/templates.js\";\nimport { normalizeS, normalizeS2, normalizeS3, normalizeS4, } from \"./normalizes.js\";\n/**\n * Randomizes `v` with each component in interval `[n..m)`. If no `rnd`\n * instance is given, uses {@link @thi.ng/random#SYSTEM}, i.e.\n * `Math.random`.\n *\n * @param v -\n * @param n - default -1\n * @param m - default 1\n * @param rnd -\n * @param ia -\n * @param sa -\n */\nexport const [randomS, randomS2, randomS3, randomS4] = defHofOpS(SYSTEM, ([a]) => `${a}=rnd.minmax(n,m);`, \"a\", \"n=-1,m=1,rnd=op,ia=0,sa=1\", \"a\", \"a\", NEW_OUT_A);\nexport const [randomDistribS, randomDistribS2, randomDistribS3, randomDistribS4,] = defHofOpS(normal, ([a]) => `${a}=rnd()*n;`, \"a\", \"rnd=op(),n=1,ia=0,sa=1\", \"a\", \"a\", NEW_OUT_A);\nconst $norm = (normalize, random) => (a, n = 1, rnd, ia = 0, sa = 1) => normalize(null, random(a, -1, 1, rnd, ia, sa), n, ia, ia, sa, sa);\nconst $normDist = (normalize, random) => (a, rnd, n = 1, ia = 0, sa = 1) => normalize(null, random(a, rnd, 1, ia, sa), n, ia, ia, sa, sa);\n/**\n * Sets `v` to random strided vector, normalized to length `n` (default: 1). If\n * no `rnd` instance is given, uses {@link @thi.ng/random#SYSTEM}, i.e.\n * `Math.random`.\n *\n * @param v -\n * @param num -\n * @param n -\n * @param rnd -\n * @param ia -\n * @param sa -\n */\nexport const randNormS = (a, num, n = 1, rnd, ia = 0, sa = 1) => normalizeS((a = randomS(a, num, -1, 1, rnd, ia, sa)), a, num, n, ia, ia, sa, sa);\nexport const randNormS2 = $norm(normalizeS2, randomS2);\nexport const randNormS3 = $norm(normalizeS3, randomS3);\nexport const randNormS4 = $norm(normalizeS4, randomS4);\nexport const randNormDistribS = (a, num, rnd, n = 1, ia = 0, sa = 1) => normalizeS(null, randomDistribS(a, num, rnd, 1, ia, sa), num, n, ia, ia, sa, sa);\nexport const randNormDistribS2 = $normDist(normalizeS2, randomDistribS2);\nexport const randNormDistribS3 = $normDist(normalizeS3, randomDistribS3);\nexport const randNormDistribS4 = $normDist(normalizeS4, randomDistribS4);\n/**\n * Sets `out` to random vector with each component in the semi-open\n * interval defined by [min,max).\n *\n * @param out -\n * @param min -\n * @param max -\n * @param rnd -\n */\nexport const [randMinMaxS, randMinMaxS2, randMinMaxS3, randMinMaxS4] = defHofOpS(SYSTEM, ([o, a, b]) => `${o}=rnd.minmax(${a},${b});`, \"o,a,b\", `rnd=op,${SARGS_VV}`, \"o,a,b\");\n","import { dot } from \"./dot.js\";\nimport { maddN } from \"./maddn.js\";\nexport const reflect = (out, a, b) => maddN(out || a, b, -2 * dot(a, b), a);\n","import { dot } from \"./dot.js\";\nimport { maddN } from \"./maddn.js\";\nimport { mulN } from \"./muln.js\";\nimport { zero } from \"./setn.js\";\nexport const refract = (out, a, n, eta) => {\n    !out && (out = a);\n    const d = dot(a, n);\n    const k = 1 - eta * eta * (1 - d * d);\n    return k < 0\n        ? zero(out)\n        : maddN(out, n, -(eta * d + Math.sqrt(k)), mulN(out, a, eta));\n};\n","import { remainder as _remainder } from \"@thi.ng/math/libc\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { ARGS_VV, FN2 } from \"./compile/templates.js\";\n/**\n * This version of mod uses the same logic as the standard C function\n * `remainder()` (or its equivavalent in the thi.ng/maths package), i.e.\n * componentwise `a - b * round(a / b)`.\n *\n * @remarks\n * Also see {@link @thi.ng/math#remainder}.\n */\nexport const [remainder, remainder2, remainder3, remainder4] = defHofOp(_remainder, FN2(\"op\"), ARGS_VV);\n","/**\n * Returns a value with the magnitude of `x` and the sign of `y`.\n *\n * @param x -\n * @param y -\n */\nexport const copysign = (x, y) => Math.sign(y) * Math.abs(x);\n/**\n * Returns `2^x`.\n *\n * @param x -\n */\nexport const exp2 = (x) => 2 ** x;\n/**\n * Returns the positive difference between `x` and `y`, i.e. `x - y` iff `x > y`,\n * otherwise zero.\n *\n * @param x -\n * @param y -\n */\nexport const fdim = (x, y) => Math.max(x - y, 0);\n/**\n * Returns `x * y + z`.\n *\n * @param x -\n * @param y -\n * @param z -\n */\nexport const fma = (x, y, z) => x * y + z;\n/**\n * Similar to {@link mod}, {@link remainder}. Returns `x - y * trunc(x / y)`,\n * i.e. essentially the same as JS `%` operator. Result will always have the\n * sign of `x`.\n *\n * @remarks\n * **Caution:** Due to the introduction of libc math functions in v4.0.0 and the\n * resulting name/behavior clashes between the modulo logic in JS, C & GLSL, the\n * previous `fmod` function has been renamed to {@link mod} to align w/ its GLSL\n * version and now exhibits a different behavior to this current {@link fmod}\n * function.\n *\n * Reference: https://www.cplusplus.com/reference/cmath/fmod/\n *\n * @param x -\n * @param y -\n */\nexport const fmod = (x, y) => x % y;\n//export const fmod: FnN2 = (x, y) => x - y * Math.trunc(x / y);\n/**\n * Inverse op of {@link ldexp}. Breaks the number `x` into its binary\n * significand (a floating point with an abs value in `[0.5,1.0)` interval and\n * an integral exponent for 2, such that: `x = significand * 2^exp`. Returns\n * tuple of `[sig, exp]`.\n *\n * @remarks\n * - If `x` is zero, both parts (significand and exponent) are zero.\n * - If `x` is negative, the significand returned by this function is negative.\n *\n * Based on:\n * https://github.com/locutusjs/locutus/blob/master/src/c/math/frexp.js\n *\n * @param x -\n */\nexport const frexp = (x) => {\n    if (x === 0 || !isFinite(x))\n        return [x, 0];\n    const abs = Math.abs(x);\n    let exp = Math.max(-1023, Math.floor(Math.log2(abs)) + 1);\n    let y = abs * 2 ** -exp;\n    while (y < 0.5) {\n        y *= 2;\n        exp--;\n    }\n    while (y >= 1) {\n        y *= 0.5;\n        exp++;\n    }\n    return [x < 0 ? -y : y, exp];\n};\n/**\n * Inverse op of {@link frexp}. Returns `x * 2^exp`\n *\n * @param x -\n * @param exp -\n */\nexport const ldexp = (x, exp) => x * 2 ** exp;\n/**\n * Similar to {@link fmod}, {@link mod}. Returns `x - y * round(x / y)`.\n *\n * @remarks\n * https://www.cplusplus.com/reference/cmath/remainder/\n *\n * @param x -\n * @param y -\n */\nexport const remainder = (x, y) => x - y * Math.round(x / y);\n/**\n * Computes both the quotient and remainder of the integer division of the\n * numerator `x` by the denominator `y`.\n *\n * @param x -\n * @param y -\n */\nexport const ldiv = (x, y) => {\n    x |= 0;\n    y |= 0;\n    const q = (x / y) | 0;\n    return [q, x - q * y];\n};\n","import { remainder as _remainder } from \"@thi.ng/math/libc\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { ARGS_V, ARGS_VN, FN_N } from \"./compile/templates.js\";\n/**\n * Same as {@link remainder}, but 2nd operand is a single scalar (uniform domain\n * for all vector components).\n */\nexport const [remainderN, remainderN2, remainderN3, remainderN4] = defHofOp(_remainder, FN_N(\"op\"), ARGS_VN, ARGS_V);\n","import { setC3 } from \"./setc.js\";\nexport const rotateAroundAxis3 = (out, v, axis, theta) => {\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const ax = axis[0];\n    const ay = axis[1];\n    const az = axis[2];\n    const ux = ax * x;\n    const uy = ax * y;\n    const uz = ax * z;\n    const vx = ay * x;\n    const vy = ay * y;\n    const vz = ay * z;\n    const wx = az * x;\n    const wy = az * y;\n    const wz = az * z;\n    const uvw = ux + vy + wz;\n    const s = Math.sin(theta);\n    const c = Math.cos(theta);\n    return setC3(out || v, ax * uvw +\n        (x * (ay * ay + az * az) - ax * (vy + wz)) * c +\n        (-wy + vz) * s, ay * uvw +\n        (y * (ax * ax + az * az) - ay * (ux + wz)) * c +\n        (wx - uz) * s, az * uvw +\n        (z * (ax * ax + ay * ay) - az * (ux + vy)) * c +\n        (-vx + uy) * s);\n};\n","import { setC2 } from \"./setc.js\";\nexport const rotateAroundPoint2 = (out, v, p, theta) => {\n    const x = v[0] - p[0];\n    const y = v[1] - p[1];\n    const s = Math.sin(theta);\n    const c = Math.cos(theta);\n    return setC2(out || v, x * c - y * s + p[0], x * s + y * c + p[1]);\n};\n","import { set } from \"./set.js\";\nconst _rotate = (u, v) => (out, a, theta) => {\n    out ? out !== a && set(out, a) : (out = a);\n    const s = Math.sin(theta);\n    const c = Math.cos(theta);\n    const x = a[u];\n    const y = a[v];\n    out[u] = x * c - y * s;\n    out[v] = x * s + y * c;\n    return out;\n};\nexport const rotateX = _rotate(1, 2);\nexport const rotateY = _rotate(2, 0);\nexport const rotateZ = _rotate(0, 1);\n/**\n * Alias for {@link rotateZ} (e.g. for 2D use cases)\n */\nexport const rotate = rotateZ;\n","import { setS2, setS3 } from \"./sets.js\";\nconst _rotate = (set, u, v) => (out, a, theta, io = 0, ia = 0, so = 1, sa = 1) => {\n    out ? out !== a && set(out, a, io, ia, so, sa) : (out = a);\n    const s = Math.sin(theta);\n    const c = Math.cos(theta);\n    const x = a[ia + u * sa];\n    const y = a[ia + v * sa];\n    out[io + u * so] = x * c - y * s;\n    out[io + v * so] = x * s + y * c;\n    return out;\n};\nexport const rotateS2 = _rotate(setS2, 0, 1);\nexport const rotateXS3 = _rotate(setS3, 1, 2);\nexport const rotateYS3 = _rotate(setS3, 2, 0);\nexport const rotateZS3 = _rotate(setS3, 0, 1);\n","import { roundTo as _round } from \"@thi.ng/math/prec\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { ARGS_VV, FN2, FN_N } from \"./compile/templates.js\";\n/**\n * Rounds components of the first input to multiples of the 2nd input vector.\n *\n * @remarks\n * Unitl v4.8.0 errorneously defined what should have been {@link roundN}. Now\n * correctly using 2 input vectors.\n */\nexport const [round, round2, round3, round4] = defHofOp(_round, FN2(\"op\"), ARGS_VV);\n/**\n * Similar to {@link round}, but only uses a single scalar to round all vector\n * components.\n */\nexport const [roundN, roundN2, roundN3, roundN4] = defHofOp(_round, FN_N(\"op\"), \"o,a,n=1\", \"o,a\");\n","import { defBitOp, defBitOpN } from \"./compile/emit.js\";\nexport const [rshiftI, rshiftI2, rshiftI3, rshiftI4] = defBitOp(\">>\", true);\nexport const [rshiftU, rshiftU2, rshiftU3, rshiftU4] = defBitOp(\">>>\");\n// prettier-ignore\nexport const [rshiftNI, rshiftNI2, rshiftNI3, rshiftNI4] = defBitOpN(\">>\", true);\nexport const [rshiftNU, rshiftNU2, rshiftNU3, rshiftNU4] = defBitOpN(\">>>\");\n","import { safeDiv as _div } from \"@thi.ng/math/safe-div\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { ARGS_VV, FN2 } from \"./compile/templates.js\";\n/**\n * Componentwise application of {@link @thi.ng/math#safeDiv}.\n *\n * @param out -\n * @param a -\n * @param b -\n */\nexport const [safeDiv, safeDiv2, safeDiv3, safeDiv4] = defHofOp(_div, FN2(\"op\"), ARGS_VV);\n","/**\n * Returns `a` divided by `b` or zero if `b = 0`.\n *\n * @param a -\n * @param b -\n */\nexport const safeDiv = (a, b) => (b !== 0 ? a / b : 0);\n","/**\n * Combines elements from given vectors `a` and `b` into vector `out` using\n * `mask` vector to select the source of each element. If `mask[i] != 0` the\n * source is `b[i]`, else `a[i]`. If `out` is null writes result into `a`.\n *\n * @remarks\n * All 3 input vectors MUST be of same size.\n *\n * @param out -\n * @param a -\n * @param b -\n * @param mask -\n */\nexport const select = (out, a, b, mask) => {\n    out = out || a;\n    for (let i = a.length; i-- > 0;) {\n        out[i] = mask[i] ? b[i] : a[i];\n    }\n    return out;\n};\n","import { defOpS } from \"./compile/emit.js\";\nimport { SET_N } from \"./compile/templates.js\";\nexport const [setNS, setNS2, setNS3, setNS4] = defOpS(SET_N, \"o,n\", \"io=0,so=1\", \"o\", \"o\", \"\");\n","import { setC3, setC4 } from \"./setc.js\";\n/**\n * Sets `out` to `[a.x, a.y, n]`\n *\n * @param out -\n * @param a -\n * @param n -\n */\nexport const setVN3 = (out, a, n) => setC3(out, a[0], a[1], n);\n/**\n * Sets `out` to `[a.x, a.y, a.z, n]`\n *\n * @param out -\n * @param a -\n * @param n -\n */\nexport const setVN4 = (out, a, n) => setC4(out, a[0], a[1], a[2], n);\n","import { setC, setC4, setC6 } from \"./setc.js\";\n/**\n * Sets `out` to `[a.x, a.y, b.x, b.y]`\n *\n * @param out -\n * @param a -\n * @param b -\n */\nexport const setVV4 = (out, a, b) => setC4(out, a[0], a[1], b[0], b[1]);\n/**\n * Sets `out` to `[a.x, a.y, b.x, b.y, c.x, c.y]`\n *\n * @param out -\n * @param a -\n * @param b -\n * @param c -\n */\nexport const setVV6 = (out, a, b, c) => setC6(out, a[0], a[1], b[0], b[1], c[0], c[1]);\n/**\n * Sets `out` to:\n * `[a.x, a.y, a.z, b.x, b.y, b.z, c.x, c.y, c.z]`\n *\n * @param out -\n * @param a -\n * @param b -\n * @param c -\n */\nexport const setVV9 = (out, a, b, c) => setC(out, a[0], a[1], a[2], b[0], b[1], b[2], c[0], c[1], c[2]);\n/**\n * Sets `out` to concatenation of `a`, `b`, `c`, `d`:\n *\n * @example\n * ```ts\n * [a.x, a.y, a.z, a.w, b.x, b.y, b.z, b.w,\n *  c.x, c.y, c.z, c.w, d.x, d.y, d.z, d.w]\n * ```\n *\n * @param out -\n * @param a -\n * @param b -\n * @param c -\n */\nexport const setVV16 = (out, a, b, c, d) => setC(out, a[0], a[1], a[2], a[3], b[0], b[1], b[2], b[3], c[0], c[1], c[2], c[3], d[0], d[1], d[2], d[3]);\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [sign, sign2, sign3, sign4] = defFnOp(\"Math.sign\");\n","/**\n * Returns 6x the signed volume of the tetrahedron defined by given 3D points.\n *\n * @remarks\n * Returns positive or negative value if `d` lies below/above the plane defined\n * by a,b,c respectively (where \"below\" is defined such that a,b,c are\n * counterclockwise if viewed from above). Returns zero if all points are\n * coplanar.\n *\n * Based on code by Jonathan R. Shewchuk\n * http://www.cs.cmu.edu/afs/cs/project/quake/public/code/predicates.c\n *\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n */\nexport const signedVolume = (a, b, c, [dx, dy, dz]) => {\n    const ady = a[1] - dy;\n    const bdy = b[1] - dy;\n    const cdy = c[1] - dy;\n    const adz = a[2] - dz;\n    const bdz = b[2] - dz;\n    const cdz = c[2] - dz;\n    return ((a[0] - dx) * (bdy * cdz - bdz * cdy) +\n        (b[0] - dx) * (cdy * adz - cdz * ady) +\n        (c[0] - dx) * (ady * bdz - adz * bdy));\n};\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [sin, sin2, sin3, sin4] = defFnOp(\"Math.sin\");\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [sinh, sinh2, sinh3, sinh4] = defFnOp(\"Math.sinh\");\n","import { divN } from \"./divn.js\";\nimport { exp } from \"./exp.js\";\nimport { sum } from \"./sum.js\";\n/**\n * Computes softmax (aka normalized exp) of input vector `src` and writes\n * results to `out` (or if null, back into `src`).\n *\n * @remarks\n * Computes elementwise: `s[i] = exp(src[i]) / sum(exp(src))`. The result\n * vector's elements will sum to 1.0.\n *\n * This function is often used as the last activation function in a neural\n * network to normalize the output to a probability distribution over predicted\n * output classes.\n *\n * References:\n * - https://en.wikipedia.org/wiki/Softmax_function\n * - https://victorzhou.com/blog/softmax/\n *\n * @param out -\n * @param src -\n */\nexport const softMax = (out, src) => {\n    const e = exp([], src);\n    return divN(out || src, e, sum(e));\n};\n","import { vop } from \"./vop.js\";\n/**\n * Returns returns true if at least one vector component in `v` is\n * truthy.\n *\n * @param v -\n */\nexport const some = vop();\nsome.default((v) => {\n    for (let i = v.length; i-- > 0;) {\n        if (v[i])\n            return true;\n    }\n    return false;\n});\nexport const some2 = some.add(2, (a) => a[0] || a[1]);\nexport const some3 = some.add(3, (a) => a[0] || a[1] || a[2]);\nexport const some4 = some.add(4, (a) => a[0] || a[1] || a[2] || a[3]);\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [sqrt, sqrt2, sqrt3, sqrt4] = defFnOp(\"Math.sqrt\");\n","import { step as _step } from \"@thi.ng/math/step\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { DEFAULT_OUT, FN2 } from \"./compile/templates.js\";\n/**\n * Like GLSL `step()`\n *\n * @param out -\n * @param e -\n * @param v -\n */\nexport const [step, step2, step3, step4] = defHofOp(_step, FN2(\"op\"), \"o,e,a\", undefined, \"o\", 2, DEFAULT_OUT);\n","import { clamp01 } from \"./interval.js\";\n/**\n * Step/threshold function.\n *\n * @param edge - threshold\n * @param x - test value\n * @returns 0, if `x < e`, else 1\n */\nexport const step = (edge, x) => (x < edge ? 0 : 1);\n/**\n * GLSL-style smoothStep threshold function.\n *\n * @param edge - lower threshold\n * @param edge2 - upper threshold\n * @param x - test value\n * @returns 0, if `x < edge1`, 1 if `x > edge2`, else S-curve polynomial interpolation\n */\nexport const smoothStep = (edge, edge2, x) => {\n    x = clamp01((x - edge) / (edge2 - edge));\n    return (3 - 2 * x) * x * x;\n};\n/**\n * Similar to {@link smoothStep} but using different, higher degree polynomial.\n *\n * @param edge -\n * @param edge2 -\n * @param x -\n */\nexport const smootherStep = (edge, edge2, x) => {\n    x = clamp01((x - edge) / (edge2 - edge));\n    return x * x * x * (x * (x * 6 - 15) + 10);\n};\n/**\n * Exponential ramp with variable shape\n *\n * @remarks\n * Example configurations:\n *\n * - S-curve: k=8, n=4\n * - Step near 1.0: k=8, n=20\n * - Pulse: k=0.005, n=-10\n * - Ease-in: k=0.5, n=0.25\n *\n * Interactive graph: https://www.desmos.com/calculator/gcnuyppycz\n *\n * @param k -\n * @param n -\n * @param x -\n */\nexport const expStep = (k, n, x) => 1 - Math.exp(-k * Math.pow(x, n));\n","import { smoothStep as _step } from \"@thi.ng/math/step\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { DEFAULT_OUT, FN3 } from \"./compile/templates.js\";\n/**\n * Like GLSL `smoothstep()`\n *\n * @param out -\n * @param e1 -\n * @param e2 -\n * @param v -\n */\nexport const [smoothStep, smoothStep2, smoothStep3, smoothStep4] = defHofOp(_step, FN3(), \"o,e1,e2,a\", undefined, \"o\", 3, DEFAULT_OUT);\n","import { center } from \"./center.js\";\nimport { mulN } from \"./muln.js\";\nimport { set } from \"./set.js\";\nimport { sd } from \"./variance.js\";\n/**\n * Returns standardized version of `a`, i.e. `a' / sd(a')`, where `a'` is the\n * {@link center}'ed version of `a`. If `isCentered` is false (default), the\n * vector will first be centered in order to compute the result.\n *\n * @remarks\n * If `mag(a')` is zero, the returned vector will have all components\n * zero-valued too.\n *\n * @param out -\n * @param a -\n * @param isCentered -\n */\nexport const standardize = (out, a, isCentered = false) => {\n    out = !isCentered ? center(out, a) : !out ? a : set(out, a);\n    const d = sd(out, true);\n    return d > 0 ? mulN(null, out, 1 / d) : out;\n};\n","import { center } from \"./center.js\";\nimport { magSq } from \"./magsq.js\";\n/**\n * Computes variance of vector components in `a`. If `isCentered` is\n * false (default), the vector will first be {@link center}ed (copy) in order to\n * compute the result.\n *\n * @remarks\n * var(a) = magSq(a) / len(a). Returns 0 if `a` is empty.\n *\n * Reference:\n * https://en.wikipedia.org/wiki/Variance\n *\n * @param a -\n * @param isCentered -\n */\nexport const variance = (a, isCentered = false) => a.length > 0 ? magSq(isCentered ? a : center([], a)) / a.length : 0;\n/**\n * Computes standard deviation of vector components in `a`. If `isCentered` is\n * false (default), the vector will first be {@link center}ed (copy) in order to\n * compute the result.\n *\n * @remarks\n * sd = sqrt(magSq(a) / (len(a) - 1)). Returns 0 if len(a) < 2\n *\n * Reference:\n * https://en.wikipedia.org/wiki/Standard_deviation\n *\n * @param a -\n * @param isCentered -\n */\nexport const sd = (a, isCentered = false) => a.length > 1\n    ? Math.sqrt(magSq(isCentered ? a : center([], a)) / (a.length - 1))\n    : 0;\n/**\n * Computes the standard error of vector components in `a`. If `isCentered` is\n * false (default), the vector will first be {@link center}ed (copy) in order to\n * compute the result.\n *\n * @remarks\n * sderr(a) = sd(a) / sqrt(len(a))\n *\n * Reference:\n * https://en.wikipedia.org/wiki/Standard_error\n *\n * @param a -\n * @param isCentered -\n */\nexport const sdError = (a, isCentered = false) => a.length > 1 ? sd(a, isCentered) / Math.sqrt(a.length) : 0;\n","import { defBitOp, defBitOpN } from \"./compile/emit.js\";\nexport const [subI, subI2, subI3, subI4] = defBitOp(\"-\", true);\nexport const [subU, subU2, subU3, subU4] = defBitOp(\"-\");\nexport const [subNI, subNI2, subNI3, subNI4] = defBitOpN(\"-\", true);\nexport const [subNU, subNU2, subNU3, subNU4] = defBitOpN(\"-\");\n","import { defOp } from \"./compile/emit.js\";\nimport { ARGS_VVV, MATH2 } from \"./compile/templates.js\";\n/**\n * Returns `out = (a - b) * c`.\n *\n * - {@link madd}\n * - {@link addm}\n */\nexport const [subm, subm2, subm3, subm4] = defOp(MATH2(\"-\", \"*\"), ARGS_VVV);\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_VVV, MATH2, SARGS_VVV } from \"./compile/templates.js\";\nexport const [submS, submS2, submS3, submS4] = defOpS(MATH2(\"-\", \"*\"), ARGS_VVV, SARGS_VVV, ARGS_VVV);\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_VVN, MATH2_N, SARGS_VV } from \"./compile/templates.js\";\nexport const [submNS, submNS2, submNS3, submNS4] = defOpS(MATH2_N(\"-\", \"*\"), ARGS_VVN, SARGS_VV);\n","import { defOpS } from \"./compile/emit.js\";\nimport { MATH } from \"./compile/templates.js\";\nexport const [subS, subS2, subS3, subS4] = defOpS(MATH(\"-\"));\n","import { defOpS } from \"./compile/emit.js\";\nimport { ARGS_V, ARGS_VN, MATH_N, SARGS_V } from \"./compile/templates.js\";\nexport const [subNS, subNS2, subNS3, subNS4] = defOpS(MATH_N(\"-\"), ARGS_VN, SARGS_V, ARGS_V);\n","import { setC2, setC3, setC4 } from \"./setc.js\";\n/**\n * Places a re-ordered 2D version of vector `a` into `out`. The given\n * coord indices must be valid for `a`. No bounds checking.\n *\n * @param out -\n * @param a -\n * @param x - new x coord index\n * @param y - new y coord index\n */\nexport const swizzle2 = (out, a, x, y) => setC2(out || a, a[x] || 0, a[y] || 0);\n/**\n * Places a re-ordered 3D version of vector `a` into `out`. The given\n * coord indices must be valid for `a`. No bounds checking.\n *\n * @param out -\n * @param a -\n * @param x - new x coord index\n * @param y - new y coord index\n * @param z - new z coord index\n */\nexport const swizzle3 = (out, a, x, y, z) => setC3(out || a, a[x] || 0, a[y] || 0, a[z] || 0);\n/**\n * Places a re-ordered 4D version of vector `a` into `out`. The given\n * coord indices must be valid for `a`. No bounds checking.\n *\n * @param out -\n * @param a -\n * @param x - new x coord index\n * @param y - new y coord index\n * @param z - new z coord index\n * @param w - new w coord index\n */\nexport const swizzle4 = (out, a, x, y, z, w) => setC4(out || a, a[x] || 0, a[y] || 0, a[z] || 0, a[w] || 0);\nexport const swapXY = (out, v) => swizzle3(out, v, 1, 0, 2);\nexport const swapXZ = (out, v) => swizzle3(out, v, 2, 1, 0);\nexport const swapYZ = (out, v) => swizzle3(out, v, 0, 2, 1);\n/**\n * Sets `out[a] = n`, returns `out`.\n *\n * @param out -\n * @param n -\n * @param a -\n */\nexport const setSwizzle1 = (out, n, a) => ((out[a] = n), out);\n/**\n * Sets `out[a] = v.x, out[b] = v.y`, returns `out`.\n *\n * @param out -\n * @param v -\n * @param a -\n * @param b -\n */\nexport const setSwizzle2 = (out, v, a, b) => (((out[a] = v[0]), (out[b] = v[1])), out);\n/**\n * Sets `out[a] = v.x, out[b] = v.y, out[c] = v.z`, returns `out`.\n *\n * @param out -\n * @param v -\n * @param a -\n * @param b -\n * @param c -\n */\nexport const setSwizzle3 = (out, v, a, b, c) => (((out[a] = v[0]), (out[b] = v[1]), (out[c] = v[2])), out);\n/**\n * Sets `out[a] = v.x, out[b] = v.y, out[c] = v.z, out[d]=v.w`, returns `out`.\n *\n * @param out -\n * @param v -\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n */\nexport const setSwizzle4 = (out, v, a, b, c, d) => (((out[a] = v[0]), (out[b] = v[1]), (out[c] = v[2]), (out[d] = v[3])), out);\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [tan, tan2, tan3, tan4] = defFnOp(\"Math.tan\");\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [tanh, tanh2, tanh3, tanh4] = defFnOp(\"Math.tanh\");\n","/**\n * Computes tensor product (aka outer product) of `a` and `b` and writes result\n * to `out` (or creates a new array if null). The result is to be interpreted as\n * a matrix (in column-major order) of `a.length` rows and `b.length` columns.\n *\n * @remarks\n * The tensor product is not commutative, i.e. `tensor(a,b) != tensor(b,a)`. The\n * latter case results in the Kronecker product and can be understood as\n * vectorization of `tensor(a,b)`.\n *\n * The Dot product (aka inner product) of `a` and `b` is the matrix trace of the\n * tensor/outer product.\n *\n * References:\n *\n * - https://en.wikipedia.org/wiki/Outer_product\n * - https://en.wikipedia.org/wiki/Outer_product#Connection_with_the_Kronecker_product\n *\n * @example\n * ```ts\n * tensor([], [1, 2, 3], [4, 5])\n * // [ 4, 8, 12, 5, 10, 15 ]\n *\n * tensorProduct([], [4, 5], [1, 2, 3])\n * // [ 4, 5, 8, 10, 12, 15 ]\n * ```\n *\n * @param out -\n * @param a -\n * @param b -\n */\nexport const tensor = (out, a, b) => {\n    out = out || [];\n    const n = a.length;\n    const m = b.length;\n    for (let i = 0, k = 0; i < m; i++) {\n        const bb = b[i];\n        for (let j = 0; j < n; j++) {\n            out[k++] = a[j] * bb;\n        }\n    }\n    return out;\n};\n","import { defFnOp } from \"./compile/emit.js\";\nexport const [trunc, trunc2, trunc3, trunc4] = defFnOp(\"Math.trunc\");\n","import { wrap as _wrap } from \"@thi.ng/math/interval\";\nimport { defHofOp } from \"./compile/emit.js\";\nimport { ARGS_VVV, FN3 } from \"./compile/templates.js\";\nexport const [wrap, wrap2, wrap3, wrap4] = defHofOp(_wrap, FN3(), ARGS_VVV);\n","import { defOp } from \"./compile/emit.js\";\nimport { MATH } from \"./compile/templates.js\";\nexport const [eq, eq2, eq3, eq4] = defOp(MATH(\"===\"));\n","import { defOp } from \"./compile/emit.js\";\nimport { MATH } from \"./compile/templates.js\";\nexport const [neq, neq2, neq3, neq4] = defOp(MATH(\"!==\"));\n","import { defOp } from \"./compile/emit.js\";\nimport { MATH } from \"./compile/templates.js\";\nexport const [gt, gt2, gt3, gt4] = defOp(MATH(\">\"));\n","import { defOp } from \"./compile/emit.js\";\nimport { MATH } from \"./compile/templates.js\";\nexport const [gte, gte2, gte3, gte4] = defOp(MATH(\">=\"));\n","import { defOp } from \"./compile/emit.js\";\nimport { MATH } from \"./compile/templates.js\";\nexport const [lt, lt2, lt3, lt4] = defOp(MATH(\"<\"));\n","import { defOp } from \"./compile/emit.js\";\nimport { MATH } from \"./compile/templates.js\";\nexport const [lte, lte2, lte3, lte4] = defOp(MATH(\"<=\"));\n","import { SYSTEM } from \"@thi.ng/random/system\";\nimport { mapcat } from \"@thi.ng/transducers/mapcat\";\nimport { rangeNd } from \"@thi.ng/transducers/range-nd\";\nimport { repeatedly } from \"@thi.ng/transducers/repeatedly\";\nimport { add } from \"@thi.ng/vectors/add\";\nimport { random } from \"@thi.ng/vectors/random\";\n/**\n * Yields iterator of nD point samples of for given stratified grid\n * config.\n *\n * @remarks\n * All samples will be in `[[0,0,...] ...[dimx,dimy,...])` interval\n *\n * @param opts -\n */\nexport const stratifiedGrid = (opts) => {\n    const { rnd, samples } = { samples: 1, rnd: SYSTEM, ...opts };\n    const tmp = new Array(opts.dim.length);\n    return mapcat((p) => repeatedly(() => add([], p, random(tmp, 0, 1, rnd)), samples), rangeNd(opts.dim));\n};\n","import { isIterable } from \"@thi.ng/checks/is-iterable\";\nimport { cat } from \"./cat.js\";\nimport { comp } from \"./comp.js\";\nimport { iterator } from \"./iterator.js\";\nimport { map } from \"./map.js\";\nexport function mapcat(fn, src) {\n    return isIterable(src) ? iterator(mapcat(fn), src) : comp(map(fn), cat());\n}\n","import { compR } from \"./compr.js\";\nimport { ensureReduced, isReduced, unreduced } from \"./reduced.js\";\n/**\n * Transducer to concatenate iterable values. Iterates over each input\n * and emits individual values down stream, therefore removing one level\n * of nesting from the input.\n *\n * @remarks\n * If, during processing, the transducer is given a wrapped reduced\n * input iterable, it will still be processed as normal, but then\n * immediately triggers early termination by wrapping its own result in\n * {@link reduced}. E.g. this behavior allows a {@link (mapcat:1)} user\n * functions to benefit from reduced results.\n *\n * Also see:\n * - {@link concat}\n * - {@link (mapcat:1)}\n *\n * @example\n * ```ts\n * [...iterator(comp(map((x) => [x, x]), cat()), [1, 2, 3, 4])]\n * // [ 1, 1, 2, 2, 3, 3, 4, 4 ]\n *\n * [...iterator(\n *   comp(\n *     mapIndexed((i, x) => [[i], [x, x]]),\n *     cat(),\n *     cat()\n *   ),\n *   \"abc\"\n * )]\n * // [ 0, 'a', 'a', 1, 'b', 'b', 2, 'c', 'c' ]\n *\n * [...mapcat((x)=>(x > 1 ? reduced([x, x]) : [x, x]), [1, 2, 3, 4])]\n * // [ 1, 1, 2, 2 ]\n * ```\n *\n * @param rfn -\n */\nexport const cat = () => (rfn) => {\n    const r = rfn[2];\n    return compR(rfn, (acc, x) => {\n        if (x) {\n            for (let y of unreduced(x)) {\n                acc = r(acc, y);\n                if (isReduced(acc)) {\n                    break;\n                }\n            }\n        }\n        return isReduced(x) ? ensureReduced(acc) : acc;\n    });\n};\n","import { map } from \"./map.js\";\nimport { permutations } from \"./permutations.js\";\nimport { range } from \"./range.js\";\nimport { zip } from \"./zip.js\";\n/**\n * If called with one vector, yields an iterator for the n-dimensional\n * interval: `[[0, 0,...] .. [x, y,...])`. If called with two vectors,\n * the first vector defines the inclusive interval start and the 2nd\n * vector the exclusive interval end. Each dimension can also contain\n * negative values.\n *\n * @example\n * ```ts\n * [...rangeNd([2])]\n * // [ [ 0 ], [ 1 ] ]\n *\n * [...rangeNd([2, -2])]\n * // [ [ 0, 0 ], [ 0, -1 ], [ 1, 0 ], [ 1, -1 ] ]\n *\n * [...rangeNd([-1,2], [1,3])]\n * // [ [ -1, 2 ], [ -1, 3 ], [ 0, 2 ], [ 0, 3 ] ]\n *\n * [...rangeNd([2, 2, 2])]\n * // [\n * //   [ 0, 0, 0 ],\n * //   [ 0, 0, 1 ],\n * //   [ 0, 1, 0 ],\n * //   [ 0, 1, 1 ],\n * //   [ 1, 0, 0 ],\n * //   [ 1, 0, 1 ],\n * //   [ 1, 1, 0 ],\n * //   [ 1, 1, 1 ]\n * // ]\n * ```\n *\n * @param vec -\n */\nexport const rangeNd = (min, max) => permutations.apply(null, ((max\n    ? [...map(([a, b]) => range(a, b), zip(min, max))]\n    : [...map(range, min)])));\n","/**\n * Iterator yielding return values of given single-arg function `fn` (called\n * with `i`, current iteration count). If `n` is given, only that many values\n * will be produced, else the iterator is infinite.\n *\n * @example\n * ```ts\n * [...repeatedly(() => Math.floor(Math.random() * 10), 5)]\n * // [7, 0, 9, 3, 1]\n *\n * [...repeatedly((i) => i, 5)]\n * // [0, 1, 2, 3, 4]\n * ```\n *\n * @param fn - value producer\n * @param n - num values (default: ∞)\n */\nexport function* repeatedly(fn, n = Infinity) {\n    for (let i = 0; i < n; i++) {\n        yield fn(i);\n    }\n}\n","'use strict'\n\nmodule.exports = barycentric\n\nvar solve = require('robust-linear-solve')\n\nfunction reduce(x) {\n  var r = 0\n  for(var i=0; i<x.length; ++i) {\n    r += x[i]\n  }\n  return r\n}\n\nfunction barycentric(simplex, point) {\n  var d = point.length\n  var A = new Array(d+1)\n  for(var i=0; i<d; ++i) {\n    var row = new Array(d+1)\n    for(var j=0; j<=d; ++j) {\n      row[j] = simplex[j][i]\n    }\n    A[i] = row\n  }\n  A[d] = new Array(d+1)\n  for(var i=0; i<=d; ++i) {\n    A[d][i] = 1\n  }\n\n  var b = new Array(d+1)\n  for(var i=0; i<d; ++i) {\n    b[i] = point[i]\n  }\n  b[d] = 1.0\n\n  var x = solve(A, b)\n  var w = reduce(x[d+1])\n  \n  if(w === 0) {\n    w = 1.0\n  }\n  var y = new Array(d+1)\n  for(var i=0; i<=d; ++i) {\n    y[i] = reduce(x[i]) / w\n  }\n  return y\n}","\"use strict\"\n\nvar determinant = require(\"robust-determinant\")\n\nvar NUM_EXPAND = 6\n\nfunction generateSolver(n) {\n  var funcName = \"robustLinearSolve\" + n + \"d\"\n  var code = [\"function \", funcName, \"(A,b){return [\"]\n  for(var i=0; i<n; ++i) {\n    code.push(\"det([\")\n    for(var j=0; j<n; ++j) {\n      if(j > 0) {\n        code.push(\",\")\n      }\n      code.push(\"[\")\n      for(var k=0; k<n; ++k) {\n        if(k > 0) {\n          code.push(\",\")\n        }\n        if(k === i) {\n          code.push(\"+b[\", j, \"]\")\n        } else {\n          code.push(\"+A[\", j, \"][\", k, \"]\")\n        }\n      }\n      code.push(\"]\")\n    }\n    code.push(\"]),\")\n  }\n  code.push(\"det(A)]}return \", funcName)\n  var proc = new Function(\"det\", code.join(\"\"))\n  if(n < 6) {\n    return proc(determinant[n])\n  }\n  return proc(determinant)\n}\n\nfunction robustLinearSolve0d() {\n  return [ 0 ]\n}\n\nfunction robustLinearSolve1d(A, b) {\n  return [ [ b[0] ], [ A[0][0] ] ]\n}\n\nvar CACHE = [\n  robustLinearSolve0d,\n  robustLinearSolve1d\n]\n\nfunction generateDispatch() {\n  while(CACHE.length < NUM_EXPAND) {\n    CACHE.push(generateSolver(CACHE.length))\n  }\n  var procArgs = []\n  var code = [\"function dispatchLinearSolve(A,b){switch(A.length){\"]\n  for(var i=0; i<NUM_EXPAND; ++i) {\n    procArgs.push(\"s\" + i)\n    code.push(\"case \", i, \":return s\", i, \"(A,b);\")\n  }\n  code.push(\"}var s=CACHE[A.length];if(!s)s=CACHE[A.length]=g(A.length);return s(A,b)}return dispatchLinearSolve\")\n  procArgs.push(\"CACHE\", \"g\", code.join(\"\"))\n  var proc = Function.apply(undefined, procArgs)\n  module.exports = proc.apply(undefined, CACHE.concat([CACHE, generateSolver]))\n  for(var i=0; i<NUM_EXPAND; ++i) {\n    module.exports[i] = CACHE[i]\n  }\n}\n\ngenerateDispatch()","\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar robustSum = require(\"robust-sum\")\nvar robustScale = require(\"robust-scale\")\nvar compress = require(\"robust-compress\")\n\nvar NUM_EXPANDED = 6\n\nfunction cofactor(m, c) {\n  var result = new Array(m.length-1)\n  for(var i=1; i<m.length; ++i) {\n    var r = result[i-1] = new Array(m.length-1)\n    for(var j=0,k=0; j<m.length; ++j) {\n      if(j === c) {\n        continue\n      }\n      r[k++] = m[i][j]\n    }\n  }\n  return result\n}\n\nfunction matrix(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = new Array(n)\n    for(var j=0; j<n; ++j) {\n      result[i][j] = [\"m[\", i, \"][\", j, \"]\"].join(\"\")\n    }\n  }\n  return result\n}\n\nfunction sign(n) {\n  if(n & 1) {\n    return \"-\"\n  }\n  return \"\"\n}\n\nfunction generateSum(expr) {\n  if(expr.length === 1) {\n    return expr[0]\n  } else if(expr.length === 2) {\n    return [\"sum(\", expr[0], \",\", expr[1], \")\"].join(\"\")\n  } else {\n    var m = expr.length>>1\n    return [\"sum(\", generateSum(expr.slice(0, m)), \",\", generateSum(expr.slice(m)), \")\"].join(\"\")\n  }\n}\n\nfunction determinant(m) {\n  if(m.length === 2) {\n    return [\"sum(prod(\", m[0][0], \",\", m[1][1], \"),prod(-\", m[0][1], \",\", m[1][0], \"))\"].join(\"\")\n  } else {\n    var expr = []\n    for(var i=0; i<m.length; ++i) {\n      expr.push([\"scale(\", determinant(cofactor(m, i)), \",\", sign(i), m[0][i], \")\"].join(\"\"))\n    }\n    return generateSum(expr)\n  }\n}\n\nfunction compileDeterminant(n) {\n  var proc = new Function(\"sum\", \"scale\", \"prod\", \"compress\", [\n    \"function robustDeterminant\",n, \"(m){return compress(\", \n      determinant(matrix(n)),\n    \")};return robustDeterminant\", n].join(\"\"))\n  return proc(robustSum, robustScale, twoProduct, compress)\n}\n\nvar CACHE = [\n  function robustDeterminant0() { return [0] },\n  function robustDeterminant1(m) { return [m[0][0]] }\n]\n\nfunction generateDispatch() {\n  while(CACHE.length < NUM_EXPANDED) {\n    CACHE.push(compileDeterminant(CACHE.length))\n  }\n  var procArgs = []\n  var code = [\"function robustDeterminant(m){switch(m.length){\"]\n  for(var i=0; i<NUM_EXPANDED; ++i) {\n    procArgs.push(\"det\" + i)\n    code.push(\"case \", i, \":return det\", i, \"(m);\")\n  }\n  code.push(\"}\\\nvar det=CACHE[m.length];\\\nif(!det)\\\ndet=CACHE[m.length]=gen(m.length);\\\nreturn det(m);\\\n}\\\nreturn robustDeterminant\")\n  procArgs.push(\"CACHE\", \"gen\", code.join(\"\"))\n  var proc = Function.apply(undefined, procArgs)\n  module.exports = proc.apply(undefined, CACHE.concat([CACHE, compileDeterminant]))\n  for(var i=0; i<CACHE.length; ++i) {\n    module.exports[i] = CACHE[i]\n  }\n}\n\ngenerateDispatch()","\"use strict\"\n\nmodule.exports = twoProduct\n\nvar SPLITTER = +(Math.pow(2, 27) + 1.0)\n\nfunction twoProduct(a, b, result) {\n  var x = a * b\n\n  var c = SPLITTER * a\n  var abig = c - a\n  var ahi = c - abig\n  var alo = a - ahi\n\n  var d = SPLITTER * b\n  var bbig = d - b\n  var bhi = d - bbig\n  var blo = b - bhi\n\n  var err1 = x - (ahi * bhi)\n  var err2 = err1 - (alo * bhi)\n  var err3 = err2 - (ahi * blo)\n\n  var y = alo * blo - err3\n\n  if(result) {\n    result[0] = y\n    result[1] = x\n    return result\n  }\n\n  return [ y, x ]\n}","\"use strict\"\n\nmodule.exports = linearExpansionSum\n\n//Easy case: Add two scalars\nfunction scalarScalar(a, b) {\n  var x = a + b\n  var bv = x - a\n  var av = x - bv\n  var br = b - bv\n  var ar = a - av\n  var y = ar + br\n  if(y) {\n    return [y, x]\n  }\n  return [x]\n}\n\nfunction linearExpansionSum(e, f) {\n  var ne = e.length|0\n  var nf = f.length|0\n  if(ne === 1 && nf === 1) {\n    return scalarScalar(e[0], f[0])\n  }\n  var n = ne + nf\n  var g = new Array(n)\n  var count = 0\n  var eptr = 0\n  var fptr = 0\n  var abs = Math.abs\n  var ei = e[eptr]\n  var ea = abs(ei)\n  var fi = f[fptr]\n  var fa = abs(fi)\n  var a, b\n  if(ea < fa) {\n    b = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    b = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n      fa = abs(fi)\n    }\n  }\n  if((eptr < ne && ea < fa) || (fptr >= nf)) {\n    a = ei\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n      ea = abs(ei)\n    }\n  } else {\n    a = fi\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n      fa = abs(fi)\n    }\n  }\n  var x = a + b\n  var bv = x - a\n  var y = b - bv\n  var q0 = y\n  var q1 = x\n  var _x, _bv, _av, _br, _ar\n  while(eptr < ne && fptr < nf) {\n    if(ea < fa) {\n      a = ei\n      eptr += 1\n      if(eptr < ne) {\n        ei = e[eptr]\n        ea = abs(ei)\n      }\n    } else {\n      a = fi\n      fptr += 1\n      if(fptr < nf) {\n        fi = f[fptr]\n        fa = abs(fi)\n      }\n    }\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n  }\n  while(eptr < ne) {\n    a = ei\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    }\n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    eptr += 1\n    if(eptr < ne) {\n      ei = e[eptr]\n    }\n  }\n  while(fptr < nf) {\n    a = fi\n    b = q0\n    x = a + b\n    bv = x - a\n    y = b - bv\n    if(y) {\n      g[count++] = y\n    } \n    _x = q1 + x\n    _bv = _x - q1\n    _av = _x - _bv\n    _br = x - _bv\n    _ar = q1 - _av\n    q0 = _ar + _br\n    q1 = _x\n    fptr += 1\n    if(fptr < nf) {\n      fi = f[fptr]\n    }\n  }\n  if(q0) {\n    g[count++] = q0\n  }\n  if(q1) {\n    g[count++] = q1\n  }\n  if(!count) {\n    g[count++] = 0.0  \n  }\n  g.length = count\n  return g\n}","\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar twoSum = require(\"two-sum\")\n\nmodule.exports = scaleLinearExpansion\n\nfunction scaleLinearExpansion(e, scale) {\n  var n = e.length\n  if(n === 1) {\n    var ts = twoProduct(e[0], scale)\n    if(ts[0]) {\n      return ts\n    }\n    return [ ts[1] ]\n  }\n  var g = new Array(2 * n)\n  var q = [0.1, 0.1]\n  var t = [0.1, 0.1]\n  var count = 0\n  twoProduct(e[0], scale, q)\n  if(q[0]) {\n    g[count++] = q[0]\n  }\n  for(var i=1; i<n; ++i) {\n    twoProduct(e[i], scale, t)\n    var pq = q[1]\n    twoSum(pq, t[0], q)\n    if(q[0]) {\n      g[count++] = q[0]\n    }\n    var a = t[1]\n    var b = q[1]\n    var x = a + b\n    var bv = x - a\n    var y = b - bv\n    q[1] = x\n    if(y) {\n      g[count++] = y\n    }\n  }\n  if(q[1]) {\n    g[count++] = q[1]\n  }\n  if(count === 0) {\n    g[count++] = 0.0\n  }\n  g.length = count\n  return g\n}","\"use strict\"\n\nmodule.exports = fastTwoSum\n\nfunction fastTwoSum(a, b, result) {\n\tvar x = a + b\n\tvar bv = x - a\n\tvar av = x - bv\n\tvar br = b - bv\n\tvar ar = a - av\n\tif(result) {\n\t\tresult[0] = ar + br\n\t\tresult[1] = x\n\t\treturn result\n\t}\n\treturn [ar+br, x]\n}","\"use strict\"\n\nmodule.exports = compressExpansion\n\nfunction compressExpansion(e) {\n  var m = e.length\n  var Q = e[e.length-1]\n  var bottom = m\n  for(var i=m-2; i>=0; --i) {\n    var a = Q\n    var b = e[i]\n    Q = a + b\n    var bv = Q - a\n    var q = b - bv\n    if(q) {\n      e[--bottom] = Q\n      Q = q\n    }\n  }\n  var top = 0\n  for(var i=bottom; i<m; ++i) {\n    var a = e[i]\n    var b = Q\n    Q = a + b\n    var bv = Q - a\n    var q = b - bv\n    if(q) {\n      e[top++] = q\n    }\n  }\n  e[top++] = Q\n  e.length = top\n  return e\n}","\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nimport {orient2d} from 'robust-predicates';\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","\nexport {orient2d, orient2dfast} from './esm/orient2d.js';\nexport {orient3d, orient3dfast} from './esm/orient3d.js';\nexport {incircle, incirclefast} from './esm/incircle.js';\nexport {insphere, inspherefast} from './esm/insphere.js';\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n","export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\n\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = sum(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            scale(4, bc, adz, _8), _8,\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\n        scale(4, ab, cdz, _8), _8, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\n\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = sum(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            sum(\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            sum(\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        sum(\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = scale(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, sum_three(\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = scale(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, sum_three(\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, sum_three(\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = scale(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, sum_three(\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = scale(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, sum_three(\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = scale(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, sum_three(\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = sum(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = scale(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(axtbclen, axtbc, adxtail, _16), _16,\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * adx, _16), _16,\n                scale(len2, _8, adxtail, _16b), _16b,\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = scale(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(aytbclen, aytbc, adytail, _16), _16,\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * ady, _16), _16,\n                scale(len2, _8, adytail, _16b), _16b,\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = sum(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = scale(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdx, _16), _16,\n                scale(len2, _8, bdxtail, _16b), _16b,\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = scale(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bytcalen, bytca, bdytail, _16), _16,\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdy, _16), _16,\n                scale(len2, _8, bdytail, _16b), _16b,\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = sum(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = scale(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdx, _16), _16,\n                scale(len2, _8, cdxtail, _16b), _16b,\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = scale(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cytablen, cytab, cdytail, _16), _16,\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdy, _16), _16,\n                scale(len2, _8, cdytail, _16b), _16b,\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det = (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey);\n    const bexaeyplus = Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey);\n    const cexbeyplus = Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey);\n    const dexceyplus = Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey);\n    const aexdeyplus = Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey);\n    const cexaeyplus = Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey);\n    const dexbeyplus = Math.abs(dexbey);\n    const permanent =\n        ((cexdeyplus + dexceyplus) * bezplus + (dexbeyplus + bexdeyplus) * cezplus + (bexceyplus + cexbeyplus) * dezplus) * alift +\n        ((dexaeyplus + aexdeyplus) * cezplus + (aexceyplus + cexaeyplus) * dezplus + (cexdeyplus + dexceyplus) * aezplus) * blift +\n        ((aexbeyplus + bexaeyplus) * dezplus + (bexdeyplus + dexbeyplus) * aezplus + (dexaeyplus + aexdeyplus) * bezplus) * clift +\n        ((bexceyplus + cexbeyplus) * aezplus + (cexaeyplus + aexceyplus) * bezplus + (aexbeyplus + bexaeyplus) * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n","/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"es\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nexport { default as add } from './add.js';\nexport { default as after } from './after.js';\nexport { default as ary } from './ary.js';\nexport { default as assign } from './assign.js';\nexport { default as assignIn } from './assignIn.js';\nexport { default as assignInWith } from './assignInWith.js';\nexport { default as assignWith } from './assignWith.js';\nexport { default as at } from './at.js';\nexport { default as attempt } from './attempt.js';\nexport { default as before } from './before.js';\nexport { default as bind } from './bind.js';\nexport { default as bindAll } from './bindAll.js';\nexport { default as bindKey } from './bindKey.js';\nexport { default as camelCase } from './camelCase.js';\nexport { default as capitalize } from './capitalize.js';\nexport { default as castArray } from './castArray.js';\nexport { default as ceil } from './ceil.js';\nexport { default as chain } from './chain.js';\nexport { default as chunk } from './chunk.js';\nexport { default as clamp } from './clamp.js';\nexport { default as clone } from './clone.js';\nexport { default as cloneDeep } from './cloneDeep.js';\nexport { default as cloneDeepWith } from './cloneDeepWith.js';\nexport { default as cloneWith } from './cloneWith.js';\nexport { default as commit } from './commit.js';\nexport { default as compact } from './compact.js';\nexport { default as concat } from './concat.js';\nexport { default as cond } from './cond.js';\nexport { default as conforms } from './conforms.js';\nexport { default as conformsTo } from './conformsTo.js';\nexport { default as constant } from './constant.js';\nexport { default as countBy } from './countBy.js';\nexport { default as create } from './create.js';\nexport { default as curry } from './curry.js';\nexport { default as curryRight } from './curryRight.js';\nexport { default as debounce } from './debounce.js';\nexport { default as deburr } from './deburr.js';\nexport { default as defaultTo } from './defaultTo.js';\nexport { default as defaults } from './defaults.js';\nexport { default as defaultsDeep } from './defaultsDeep.js';\nexport { default as defer } from './defer.js';\nexport { default as delay } from './delay.js';\nexport { default as difference } from './difference.js';\nexport { default as differenceBy } from './differenceBy.js';\nexport { default as differenceWith } from './differenceWith.js';\nexport { default as divide } from './divide.js';\nexport { default as drop } from './drop.js';\nexport { default as dropRight } from './dropRight.js';\nexport { default as dropRightWhile } from './dropRightWhile.js';\nexport { default as dropWhile } from './dropWhile.js';\nexport { default as each } from './each.js';\nexport { default as eachRight } from './eachRight.js';\nexport { default as endsWith } from './endsWith.js';\nexport { default as entries } from './entries.js';\nexport { default as entriesIn } from './entriesIn.js';\nexport { default as eq } from './eq.js';\nexport { default as escape } from './escape.js';\nexport { default as escapeRegExp } from './escapeRegExp.js';\nexport { default as every } from './every.js';\nexport { default as extend } from './extend.js';\nexport { default as extendWith } from './extendWith.js';\nexport { default as fill } from './fill.js';\nexport { default as filter } from './filter.js';\nexport { default as find } from './find.js';\nexport { default as findIndex } from './findIndex.js';\nexport { default as findKey } from './findKey.js';\nexport { default as findLast } from './findLast.js';\nexport { default as findLastIndex } from './findLastIndex.js';\nexport { default as findLastKey } from './findLastKey.js';\nexport { default as first } from './first.js';\nexport { default as flatMap } from './flatMap.js';\nexport { default as flatMapDeep } from './flatMapDeep.js';\nexport { default as flatMapDepth } from './flatMapDepth.js';\nexport { default as flatten } from './flatten.js';\nexport { default as flattenDeep } from './flattenDeep.js';\nexport { default as flattenDepth } from './flattenDepth.js';\nexport { default as flip } from './flip.js';\nexport { default as floor } from './floor.js';\nexport { default as flow } from './flow.js';\nexport { default as flowRight } from './flowRight.js';\nexport { default as forEach } from './forEach.js';\nexport { default as forEachRight } from './forEachRight.js';\nexport { default as forIn } from './forIn.js';\nexport { default as forInRight } from './forInRight.js';\nexport { default as forOwn } from './forOwn.js';\nexport { default as forOwnRight } from './forOwnRight.js';\nexport { default as fromPairs } from './fromPairs.js';\nexport { default as functions } from './functions.js';\nexport { default as functionsIn } from './functionsIn.js';\nexport { default as get } from './get.js';\nexport { default as groupBy } from './groupBy.js';\nexport { default as gt } from './gt.js';\nexport { default as gte } from './gte.js';\nexport { default as has } from './has.js';\nexport { default as hasIn } from './hasIn.js';\nexport { default as head } from './head.js';\nexport { default as identity } from './identity.js';\nexport { default as inRange } from './inRange.js';\nexport { default as includes } from './includes.js';\nexport { default as indexOf } from './indexOf.js';\nexport { default as initial } from './initial.js';\nexport { default as intersection } from './intersection.js';\nexport { default as intersectionBy } from './intersectionBy.js';\nexport { default as intersectionWith } from './intersectionWith.js';\nexport { default as invert } from './invert.js';\nexport { default as invertBy } from './invertBy.js';\nexport { default as invoke } from './invoke.js';\nexport { default as invokeMap } from './invokeMap.js';\nexport { default as isArguments } from './isArguments.js';\nexport { default as isArray } from './isArray.js';\nexport { default as isArrayBuffer } from './isArrayBuffer.js';\nexport { default as isArrayLike } from './isArrayLike.js';\nexport { default as isArrayLikeObject } from './isArrayLikeObject.js';\nexport { default as isBoolean } from './isBoolean.js';\nexport { default as isBuffer } from './isBuffer.js';\nexport { default as isDate } from './isDate.js';\nexport { default as isElement } from './isElement.js';\nexport { default as isEmpty } from './isEmpty.js';\nexport { default as isEqual } from './isEqual.js';\nexport { default as isEqualWith } from './isEqualWith.js';\nexport { default as isError } from './isError.js';\nexport { default as isFinite } from './isFinite.js';\nexport { default as isFunction } from './isFunction.js';\nexport { default as isInteger } from './isInteger.js';\nexport { default as isLength } from './isLength.js';\nexport { default as isMap } from './isMap.js';\nexport { default as isMatch } from './isMatch.js';\nexport { default as isMatchWith } from './isMatchWith.js';\nexport { default as isNaN } from './isNaN.js';\nexport { default as isNative } from './isNative.js';\nexport { default as isNil } from './isNil.js';\nexport { default as isNull } from './isNull.js';\nexport { default as isNumber } from './isNumber.js';\nexport { default as isObject } from './isObject.js';\nexport { default as isObjectLike } from './isObjectLike.js';\nexport { default as isPlainObject } from './isPlainObject.js';\nexport { default as isRegExp } from './isRegExp.js';\nexport { default as isSafeInteger } from './isSafeInteger.js';\nexport { default as isSet } from './isSet.js';\nexport { default as isString } from './isString.js';\nexport { default as isSymbol } from './isSymbol.js';\nexport { default as isTypedArray } from './isTypedArray.js';\nexport { default as isUndefined } from './isUndefined.js';\nexport { default as isWeakMap } from './isWeakMap.js';\nexport { default as isWeakSet } from './isWeakSet.js';\nexport { default as iteratee } from './iteratee.js';\nexport { default as join } from './join.js';\nexport { default as kebabCase } from './kebabCase.js';\nexport { default as keyBy } from './keyBy.js';\nexport { default as keys } from './keys.js';\nexport { default as keysIn } from './keysIn.js';\nexport { default as last } from './last.js';\nexport { default as lastIndexOf } from './lastIndexOf.js';\nexport { default as lodash } from './wrapperLodash.js';\nexport { default as lowerCase } from './lowerCase.js';\nexport { default as lowerFirst } from './lowerFirst.js';\nexport { default as lt } from './lt.js';\nexport { default as lte } from './lte.js';\nexport { default as map } from './map.js';\nexport { default as mapKeys } from './mapKeys.js';\nexport { default as mapValues } from './mapValues.js';\nexport { default as matches } from './matches.js';\nexport { default as matchesProperty } from './matchesProperty.js';\nexport { default as max } from './max.js';\nexport { default as maxBy } from './maxBy.js';\nexport { default as mean } from './mean.js';\nexport { default as meanBy } from './meanBy.js';\nexport { default as memoize } from './memoize.js';\nexport { default as merge } from './merge.js';\nexport { default as mergeWith } from './mergeWith.js';\nexport { default as method } from './method.js';\nexport { default as methodOf } from './methodOf.js';\nexport { default as min } from './min.js';\nexport { default as minBy } from './minBy.js';\nexport { default as mixin } from './mixin.js';\nexport { default as multiply } from './multiply.js';\nexport { default as negate } from './negate.js';\nexport { default as next } from './next.js';\nexport { default as noop } from './noop.js';\nexport { default as now } from './now.js';\nexport { default as nth } from './nth.js';\nexport { default as nthArg } from './nthArg.js';\nexport { default as omit } from './omit.js';\nexport { default as omitBy } from './omitBy.js';\nexport { default as once } from './once.js';\nexport { default as orderBy } from './orderBy.js';\nexport { default as over } from './over.js';\nexport { default as overArgs } from './overArgs.js';\nexport { default as overEvery } from './overEvery.js';\nexport { default as overSome } from './overSome.js';\nexport { default as pad } from './pad.js';\nexport { default as padEnd } from './padEnd.js';\nexport { default as padStart } from './padStart.js';\nexport { default as parseInt } from './parseInt.js';\nexport { default as partial } from './partial.js';\nexport { default as partialRight } from './partialRight.js';\nexport { default as partition } from './partition.js';\nexport { default as pick } from './pick.js';\nexport { default as pickBy } from './pickBy.js';\nexport { default as plant } from './plant.js';\nexport { default as property } from './property.js';\nexport { default as propertyOf } from './propertyOf.js';\nexport { default as pull } from './pull.js';\nexport { default as pullAll } from './pullAll.js';\nexport { default as pullAllBy } from './pullAllBy.js';\nexport { default as pullAllWith } from './pullAllWith.js';\nexport { default as pullAt } from './pullAt.js';\nexport { default as random } from './random.js';\nexport { default as range } from './range.js';\nexport { default as rangeRight } from './rangeRight.js';\nexport { default as rearg } from './rearg.js';\nexport { default as reduce } from './reduce.js';\nexport { default as reduceRight } from './reduceRight.js';\nexport { default as reject } from './reject.js';\nexport { default as remove } from './remove.js';\nexport { default as repeat } from './repeat.js';\nexport { default as replace } from './replace.js';\nexport { default as rest } from './rest.js';\nexport { default as result } from './result.js';\nexport { default as reverse } from './reverse.js';\nexport { default as round } from './round.js';\nexport { default as sample } from './sample.js';\nexport { default as sampleSize } from './sampleSize.js';\nexport { default as set } from './set.js';\nexport { default as setWith } from './setWith.js';\nexport { default as shuffle } from './shuffle.js';\nexport { default as size } from './size.js';\nexport { default as slice } from './slice.js';\nexport { default as snakeCase } from './snakeCase.js';\nexport { default as some } from './some.js';\nexport { default as sortBy } from './sortBy.js';\nexport { default as sortedIndex } from './sortedIndex.js';\nexport { default as sortedIndexBy } from './sortedIndexBy.js';\nexport { default as sortedIndexOf } from './sortedIndexOf.js';\nexport { default as sortedLastIndex } from './sortedLastIndex.js';\nexport { default as sortedLastIndexBy } from './sortedLastIndexBy.js';\nexport { default as sortedLastIndexOf } from './sortedLastIndexOf.js';\nexport { default as sortedUniq } from './sortedUniq.js';\nexport { default as sortedUniqBy } from './sortedUniqBy.js';\nexport { default as split } from './split.js';\nexport { default as spread } from './spread.js';\nexport { default as startCase } from './startCase.js';\nexport { default as startsWith } from './startsWith.js';\nexport { default as stubArray } from './stubArray.js';\nexport { default as stubFalse } from './stubFalse.js';\nexport { default as stubObject } from './stubObject.js';\nexport { default as stubString } from './stubString.js';\nexport { default as stubTrue } from './stubTrue.js';\nexport { default as subtract } from './subtract.js';\nexport { default as sum } from './sum.js';\nexport { default as sumBy } from './sumBy.js';\nexport { default as tail } from './tail.js';\nexport { default as take } from './take.js';\nexport { default as takeRight } from './takeRight.js';\nexport { default as takeRightWhile } from './takeRightWhile.js';\nexport { default as takeWhile } from './takeWhile.js';\nexport { default as tap } from './tap.js';\nexport { default as template } from './template.js';\nexport { default as templateSettings } from './templateSettings.js';\nexport { default as throttle } from './throttle.js';\nexport { default as thru } from './thru.js';\nexport { default as times } from './times.js';\nexport { default as toArray } from './toArray.js';\nexport { default as toFinite } from './toFinite.js';\nexport { default as toInteger } from './toInteger.js';\nexport { default as toIterator } from './toIterator.js';\nexport { default as toJSON } from './toJSON.js';\nexport { default as toLength } from './toLength.js';\nexport { default as toLower } from './toLower.js';\nexport { default as toNumber } from './toNumber.js';\nexport { default as toPairs } from './toPairs.js';\nexport { default as toPairsIn } from './toPairsIn.js';\nexport { default as toPath } from './toPath.js';\nexport { default as toPlainObject } from './toPlainObject.js';\nexport { default as toSafeInteger } from './toSafeInteger.js';\nexport { default as toString } from './toString.js';\nexport { default as toUpper } from './toUpper.js';\nexport { default as transform } from './transform.js';\nexport { default as trim } from './trim.js';\nexport { default as trimEnd } from './trimEnd.js';\nexport { default as trimStart } from './trimStart.js';\nexport { default as truncate } from './truncate.js';\nexport { default as unary } from './unary.js';\nexport { default as unescape } from './unescape.js';\nexport { default as union } from './union.js';\nexport { default as unionBy } from './unionBy.js';\nexport { default as unionWith } from './unionWith.js';\nexport { default as uniq } from './uniq.js';\nexport { default as uniqBy } from './uniqBy.js';\nexport { default as uniqWith } from './uniqWith.js';\nexport { default as uniqueId } from './uniqueId.js';\nexport { default as unset } from './unset.js';\nexport { default as unzip } from './unzip.js';\nexport { default as unzipWith } from './unzipWith.js';\nexport { default as update } from './update.js';\nexport { default as updateWith } from './updateWith.js';\nexport { default as upperCase } from './upperCase.js';\nexport { default as upperFirst } from './upperFirst.js';\nexport { default as value } from './value.js';\nexport { default as valueOf } from './valueOf.js';\nexport { default as values } from './values.js';\nexport { default as valuesIn } from './valuesIn.js';\nexport { default as without } from './without.js';\nexport { default as words } from './words.js';\nexport { default as wrap } from './wrap.js';\nexport { default as wrapperAt } from './wrapperAt.js';\nexport { default as wrapperChain } from './wrapperChain.js';\nexport { default as wrapperCommit } from './commit.js';\nexport { default as wrapperLodash } from './wrapperLodash.js';\nexport { default as wrapperNext } from './next.js';\nexport { default as wrapperPlant } from './plant.js';\nexport { default as wrapperReverse } from './wrapperReverse.js';\nexport { default as wrapperToIterator } from './toIterator.js';\nexport { default as wrapperValue } from './wrapperValue.js';\nexport { default as xor } from './xor.js';\nexport { default as xorBy } from './xorBy.js';\nexport { default as xorWith } from './xorWith.js';\nexport { default as zip } from './zip.js';\nexport { default as zipObject } from './zipObject.js';\nexport { default as zipObjectDeep } from './zipObjectDeep.js';\nexport { default as zipWith } from './zipWith.js';\nexport { default } from './lodash.default.js';\n","import baseSlice from './_baseSlice.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nexport default chunk;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import createFlow from './_createFlow.js';\n\n/**\n * Creates a function that returns the result of invoking the given functions\n * with the `this` binding of the created function, where each successive\n * invocation is supplied the return value of the previous.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flowRight\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flow([_.add, square]);\n * addSquare(1, 2);\n * // => 9\n */\nvar flow = createFlow();\n\nexport default flow;\n","import LodashWrapper from './_LodashWrapper.js';\nimport flatRest from './_flatRest.js';\nimport getData from './_getData.js';\nimport getFuncName from './_getFuncName.js';\nimport isArray from './isArray.js';\nimport isLaziable from './_isLaziable.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return flatRest(function(funcs) {\n    var length = funcs.length,\n        index = length,\n        prereq = LodashWrapper.prototype.thru;\n\n    if (fromRight) {\n      funcs.reverse();\n    }\n    while (index--) {\n      var func = funcs[index];\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n        var wrapper = new LodashWrapper([], true);\n      }\n    }\n    index = wrapper ? index : length;\n    while (++index < length) {\n      func = funcs[index];\n\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) &&\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n            !data[4].length && data[9] == 1\n          ) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = (func.length == 1 && isLaziable(func))\n          ? wrapper[funcName]()\n          : wrapper.thru(func);\n      }\n    }\n    return function() {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value)) {\n        return wrapper.plant(value).value();\n      }\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  });\n}\n\nexport default createFlow;\n","import baseCreate from './_baseCreate.js';\nimport baseLodash from './_baseLodash.js';\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\n */\nfunction LodashWrapper(value, chainAll) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__chain__ = !!chainAll;\n  this.__index__ = 0;\n  this.__values__ = undefined;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nexport default LodashWrapper;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","/**\n * The function whose prototype chain sequence wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nexport default baseLodash;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import metaMap from './_metaMap.js';\nimport noop from './noop.js';\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nexport default getData;\n","import WeakMap from './_WeakMap.js';\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nexport default metaMap;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n","import realNames from './_realNames.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nexport default getFuncName;\n","/** Used to lookup unminified function names. */\nvar realNames = {};\n\nexport default realNames;\n","import LazyWrapper from './_LazyWrapper.js';\nimport getData from './_getData.js';\nimport getFuncName from './_getFuncName.js';\nimport lodash from './wrapperLodash.js';\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nexport default isLaziable;\n","import baseCreate from './_baseCreate.js';\nimport baseLodash from './_baseLodash.js';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @constructor\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\n  this.__views__ = [];\n}\n\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nexport default LazyWrapper;\n","import LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport baseLodash from './_baseLodash.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\nimport wrapperClone from './_wrapperClone.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nexport default lodash;\n","import LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport copyArray from './_copyArray.js';\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  if (wrapper instanceof LazyWrapper) {\n    return wrapper.clone();\n  }\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n  result.__actions__ = copyArray(wrapper.__actions__);\n  result.__index__  = wrapper.__index__;\n  result.__values__ = wrapper.__values__;\n  return result;\n}\n\nexport default wrapperClone;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/**\n * The inverse of `_.toPairs`; this method returns an object composed\n * from key-value `pairs`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} pairs The key-value pairs.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.fromPairs([['a', 1], ['b', 2]]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction fromPairs(pairs) {\n  var index = -1,\n      length = pairs == null ? 0 : pairs.length,\n      result = {};\n\n  while (++index < length) {\n    var pair = pairs[index];\n    result[pair[0]] = pair[1];\n  }\n  return result;\n}\n\nexport default fromPairs;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n","import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import baseProperty from './_baseProperty.js';\nimport basePropertyDeep from './_basePropertyDeep.js';\nimport isKey from './_isKey.js';\nimport toKey from './_toKey.js';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n","import baseGet from './_baseGet.js';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n","import createRange from './_createRange.js';\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nexport default range;\n","import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nexport default baseRange;\n","import arraySample from './_arraySample.js';\nimport baseSample from './_baseSample.js';\nimport isArray from './isArray.js';\n\n/**\n * Gets a random element from `collection`.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n */\nfunction sample(collection) {\n  var func = isArray(collection) ? arraySample : baseSample;\n  return func(collection);\n}\n\nexport default sample;\n","import baseRandom from './_baseRandom.js';\n\n/**\n * A specialized version of `_.sample` for arrays.\n *\n * @private\n * @param {Array} array The array to sample.\n * @returns {*} Returns the random element.\n */\nfunction arraySample(array) {\n  var length = array.length;\n  return length ? array[baseRandom(0, length - 1)] : undefined;\n}\n\nexport default arraySample;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nexport default baseRandom;\n","import arraySample from './_arraySample.js';\nimport values from './values.js';\n\n/**\n * The base implementation of `_.sample`.\n *\n * @private\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n */\nfunction baseSample(collection) {\n  return arraySample(values(collection));\n}\n\nexport default baseSample;\n","import baseValues from './_baseValues.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nexport default values;\n","import arrayMap from './_arrayMap.js';\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nexport default baseValues;\n","import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n","import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n","import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n","import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n","import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n","import isStrictComparable from './_isStrictComparable.js';\nimport keys from './keys.js';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nexport default getMatchData;\n","import isObject from './isObject.js';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n","import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n","import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n","import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n","import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import baseSum from './_baseSum.js';\nimport identity from './identity.js';\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nexport default sum;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nexport default baseSum;\n","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport cacheHas from './_cacheHas.js';\nimport createSet from './_createSet.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n","import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nexport default arrayIncludes;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arrayIncludesWith;\n","import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","import baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The order of result values is\n * determined by the order they occur in the array.The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n}\n\nexport default uniqWith;\n","import arrayFilter from './_arrayFilter.js';\nimport arrayMap from './_arrayMap.js';\nimport baseProperty from './_baseProperty.js';\nimport baseTimes from './_baseTimes.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = arrayFilter(array, function(group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function(index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\n\nexport default unzip;\n","import apply from './_apply.js';\nimport arrayMap from './_arrayMap.js';\nimport unzip from './unzip.js';\n\n/**\n * This method is like `_.unzip` except that it accepts `iteratee` to specify\n * how regrouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  regrouped values.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n * // => [[1, 10, 100], [2, 20, 200]]\n *\n * _.unzipWith(zipped, _.add);\n * // => [3, 30, 300]\n */\nfunction unzipWith(array, iteratee) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var result = unzip(array);\n  if (iteratee == null) {\n    return result;\n  }\n  return arrayMap(result, function(group) {\n    return apply(iteratee, undefined, group);\n  });\n}\n\nexport default unzipWith;\n","import baseRest from './_baseRest.js';\nimport unzipWith from './unzipWith.js';\n\n/**\n * This method is like `_.zip` except that it accepts `iteratee` to specify\n * how grouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  grouped values.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n *   return a + b + c;\n * });\n * // => [111, 222]\n */\nvar zipWith = baseRest(function(arrays) {\n  var length = arrays.length,\n      iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n  return unzipWith(arrays, iteratee);\n});\n\nexport default zipWith;\n","'use strict'\n\nmodule.exports = angleNormals\n\nfunction hypot(x, y, z) {\n  return Math.sqrt(Math.pow(x,2) + Math.pow(y,2) + Math.pow(z,2))\n}\n\nfunction weight(s, r, a) {\n  return Math.atan2(r, (s - a))\n}\n\nfunction mulAdd(dest, s, x, y, z) {\n  dest[0] += s * x\n  dest[1] += s * y\n  dest[2] += s * z\n}\n\nfunction angleNormals(cells, positions) {\n  var numVerts = positions.length\n  var numCells = cells.length\n\n  //Allocate normal array\n  var normals = new Array(numVerts)\n  for(var i=0; i<numVerts; ++i) {\n    normals[i] = [0,0,0]\n  }\n\n  //Scan cells, and\n  for(var i=0; i<numCells; ++i) {\n    var cell = cells[i]\n    var a = positions[cell[0]]\n    var b = positions[cell[1]]\n    var c = positions[cell[2]]\n\n    var abx = a[0] - b[0]\n    var aby = a[1] - b[1]\n    var abz = a[2] - b[2]\n    var ab = hypot(abx, aby, abz)\n\n    var bcx = b[0] - c[0]\n    var bcy = b[1] - c[1]\n    var bcz = b[2] - c[2]\n    var bc = hypot(bcx, bcy, bcz)\n\n    var cax = c[0] - a[0]\n    var cay = c[1] - a[1]\n    var caz = c[2] - a[2]\n    var ca = hypot(cax, cay, caz)\n\n    if(Math.min(ab, bc, ca) < 1e-6) {\n      continue\n    }\n\n    var s = 0.5 * (ab + bc + ca)\n    var r = Math.sqrt((s - ab)*(s - bc)*(s - ca)/s)\n\n    var nx = aby * bcz - abz * bcy\n    var ny = abz * bcx - abx * bcz\n    var nz = abx * bcy - aby * bcx\n    var nl = hypot(nx, ny, nz)\n    nx /= nl\n    ny /= nl\n    nz /= nl\n\n    mulAdd(normals[cell[0]], weight(s, r, bc), nx, ny, nz)\n    mulAdd(normals[cell[1]], weight(s, r, ca), nx, ny, nz)\n    mulAdd(normals[cell[2]], weight(s, r, ab), nx, ny, nz)\n  }\n\n  //Normalize all the normals\n  for(var i=0; i<numVerts; ++i) {\n    var n = normals[i]\n    var l = Math.sqrt(\n      Math.pow(n[0], 2) +\n      Math.pow(n[1], 2) +\n      Math.pow(n[2], 2))\n    if(l < 1e-8) {\n      n[0] = 1\n      n[1] = 0\n      n[2] = 0\n      continue\n    }\n    n[0] /= l\n    n[1] /= l\n    n[2] /= l\n  }\n\n  return normals\n}\n","// Data Structure\nexports.Edge = require(\"./mda/Core/Edge.js\");\nexports.HalfEdge = require(\"./mda/Core/HalfEdge.js\");\nexports.Vertex = require(\"./mda/Core/Vertex.js\");\nexports.Face = require(\"./mda/Core/Face.js\");\nexports.Mesh = require(\"./mda/Core/Mesh.js\");\n\n// Checks\nexports.Integrity = require(\"./mda/Integrity/Integrity.js\");\nexports.MeshIntegrity = require(\"./mda/Integrity/MeshIntegrity.js\");\nexports.FaceIntegrity = require(\"./mda/Integrity/FaceIntegrity.js\");\nexports.EdgeIntegrity = require(\"./mda/Integrity/EdgeIntegrity.js\");\nexports.HalfEdgeIntegrity = require(\"./mda/Integrity/HalfEdgeIntegrity.js\");\nexports.VertexIntegrity = require(\"./mda/Integrity/VertexIntegrity.js\");\n\n// Queries\nexports.HalfEdgePrev = require(\"./mda/Queries/HalfEdgePrev.js\");\nexports.EdgeVertices = require(\"./mda/Queries/EdgeVertices.js\");\nexports.FaceHalfEdges = require(\"./mda/Queries/FaceHalfEdges.js\");\nexports.FaceVertices = require(\"./mda/Queries/FaceVertices.js\");\nexports.VertexFaces = require(\"./mda/Queries/VertexFaces.js\");\nexports.VertexHalfEdges = require(\"./mda/Queries/VertexHalfEdges.js\");\nexports.VertexNeighbors = require(\"./mda/Queries/VertexNeighbors.js\");\nexports.MeshCentroid = require(\"./mda/Queries/MeshCentroid.js\");\n\n// Operators\nexports.InsertVertexOperator = require(\"./mda/Operators/InsertVertex.js\");\nexports.InsertEdgeOperator = require(\"./mda/Operators/InsertEdge.js\");\nexports.DeleteEdgeOperator = require(\"./mda/Operators/DeleteEdge.js\");\nexports.LoopOperator = require(\"./mda/Operators/Loop.js\");\nexports.CatmullClarkOperator = require(\"./mda/Operators/CatmullClark.js\");\nexports.QuadSubdivideOperator = require(\"./mda/Operators/QuadSubdivide.js\");\nexports.TriangulateOperator = require(\"./mda/Operators/Triangulate.js\");\nexports.ExtrudeOperator = require('./mda/Operators/Extrude.js');\nexports.PipeOperator = require('./mda/Operators/Pipe.js');\nexports.DuplicateOperator = require('./mda/Operators/Duplicate.js');\nexports.CombineOperator = require('./mda/Operators/Combine.js');\nexports.ScaleOperator = require('./mda/Operators/Scale.js');\nexports.MoveOperator = require('./mda/Operators/Move.js');\nexports.InvertOperator = require('./mda/Operators/Invert.js');\nexports.WireframeOperator = require('./mda/Operators/Wireframe.js');\nexports.CreateFaceOperator = require('./mda/Operators/CreateFace.js');\n\n// Generator\nexports.ProfileGenerator = require(\"./mda/Generators/Profile.js\");\n","function Edge()\n{\n  this.halfEdge = undefined;\n  this.index = -1;\n};\n\nEdge.prototype.setIndex = function( index ) {\n  this.index = index;\n};\n\nEdge.prototype.getIndex = function() {\n  return this.index;\n};\n\nEdge.prototype.setHalfEdge = function( halfEdge ) {\n  this.halfEdge = halfEdge;\n};\n\nEdge.prototype.getHalfEdge = function() {\n  return this.halfEdge;\n};\n\nmodule.exports = Edge;\n","function HalfEdge()\n{\n  this.nextHalfEdge = undefined;  // points to the next halfedge around the current face (CCW)\n  this.flipHalfEdge = undefined;  // points to the other halfedge associated with this edge\n  this.vertex = undefined;        // points to the vertex at the \"tail\" of this halfedge\n  this.edge = undefined;          // points to the edge associated with this halfedge\n  this.face = undefined;          // points to the face containing this halfedge  \n};\n\nHalfEdge.prototype.setVertex = function( vertex ) {\n  this.vertex = vertex;\n};\n\nHalfEdge.prototype.getVertex = function() {\n  return this.vertex;\n};\n\nHalfEdge.prototype.setFace = function( face ) {\n  this.face = face;\n};\n\nHalfEdge.prototype.getFace = function() {\n  return this.face;\n};\n\nHalfEdge.prototype.setEdge = function( edge ) {\n  this.edge = edge;\n};\n\nHalfEdge.prototype.getEdge = function() {\n  return this.edge;\n};\n\nHalfEdge.prototype.setNextHalfEdge = function( nextHalfEdge ) {\n  this.nextHalfEdge = nextHalfEdge;\n};\n\nHalfEdge.prototype.getNextHalfEdge = function() {\n  return this.nextHalfEdge;\n};\n\nHalfEdge.prototype.setFlipHalfEdge = function( flipHalfEdge ) {\n  this.flipHalfEdge = flipHalfEdge;\n};\n\nHalfEdge.prototype.getFlipHalfEdge = function() {\n  return this.flipHalfEdge;\n};\n\nHalfEdge.prototype.onBoundary = function() {\n  if( this.getFlipHalfEdge() ) {\n    return false;\n  }\n  return true;\n};\n\nmodule.exports = HalfEdge;\n","var vec3 = require('gl-matrix').vec3;\n\nfunction Vertex()\n{\n  this.halfEdge = undefined;\n  this.index = -1;\n};\n\nVertex.prototype.setIndex = function( index ) {\n  this.index = index;\n};\n\nVertex.prototype.getIndex = function() {\n  return this.index;\n};\n\nVertex.prototype.setHalfEdge = function( halfEdge ) {\n  this.halfEdge = halfEdge;\n};\n\nVertex.prototype.getHalfEdge = function() {\n  return this.halfEdge;\n};\n\nmodule.exports = Vertex;\n","import * as glMatrix from \"./gl-matrix/common.js\";\r\nimport * as mat2 from \"./gl-matrix/mat2.js\";\r\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\r\nimport * as mat3 from \"./gl-matrix/mat3.js\";\r\nimport * as mat4 from \"./gl-matrix/mat4.js\";\r\nimport * as quat from \"./gl-matrix/quat.js\";\r\nimport * as quat2 from \"./gl-matrix/quat2.js\";\r\nimport * as vec2 from \"./gl-matrix/vec2.js\";\r\nimport * as vec3 from \"./gl-matrix/vec3.js\";\r\nimport * as vec4 from \"./gl-matrix/vec4.js\";\r\n\r\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","function Face()\n{\n  this.halfEdge = undefined;  // points to one of the halfedges associated with this face\n  this.index = -1;\n};\n\nFace.prototype.setIndex = function( index ) {\n  this.index = index;\n};\n\nFace.prototype.getIndex = function() {\n  return this.index;\n};\n\nFace.prototype.setHalfEdge = function( halfEdge ) {\n  this.halfEdge = halfEdge;\n};\n\nFace.prototype.getHalfEdge = function() {\n  return this.halfEdge;\n};\n\nmodule.exports = Face;\n","var vec3 = require('gl-matrix').vec3;\nvar Vertex = require('./Vertex');\nvar Edge = require('./Edge');\nvar HalfEdge = require('./HalfEdge');\nvar Face = require('./Face');\n\nfunction Mesh() {\n  this.halfEdges = [];    // Half - check;\n  this.vertices = [];     // Vert - check\n  this.edges = [];        // Edge - check\n  this.faces = [];        // Face - check\n  this.boundaries = [];   // Face - not done\n\n  this.positions = [];    // For Faster Rendering\n  this.cells = [];        // For Faster Rendering\n  this.edgeMap = {}      // ( 1 - 3 ) <==> ( 3 - 1 )\n};\n\nMesh.prototype.getFaces = function() {\n  return this.faces;\n};\n\nMesh.prototype.getEdges = function() {\n  return this.edges;\n};\n\nMesh.prototype.getEdgeMap = function() {\n  return this.edgeMap;\n};\n\nMesh.prototype.getVertices = function() {\n  return this.vertices;\n};\n\nMesh.prototype.getHalfEdges = function() {\n  return this.halfEdges;\n};\n\nMesh.prototype.getEdgeKey = function( vertexIndex0, vertexIndex1 ) {\n  return vertexIndex0 + '-' + vertexIndex1;\n};\n\nMesh.prototype.getEdgeKeys = function( vertexIndex0, vertexIndex1 ) {\n  return [\n    this.getEdgeKey( vertexIndex0, vertexIndex1 ),\n    this.getEdgeKey( vertexIndex1, vertexIndex0 )\n   ];\n};\n\nMesh.prototype.containsEdge = function( vertexIndex0, vertexIndex1 ) {\n  var edgeMap = this.edgeMap;\n  var keys = this.getEdgeKeys( vertexIndex0, vertexIndex1 );\n\n  if( edgeMap[ keys[ 0 ] ] !== undefined &&\n      edgeMap[ keys[ 1 ] ] !== undefined ) {\n    return true;\n  }\n  return false;\n};\n\nMesh.prototype.getEdge = function( vertexIndex0, vertexIndex1 ) {\n  var edgeMap = this.edgeMap;\n  var keys = this.getEdgeKeys( vertexIndex0, vertexIndex1 );\n\n  if( edgeMap[ keys[ 0 ] ] !== undefined &&\n      edgeMap[ keys[ 1 ] ] !== undefined ) {\n    return edgeMap[ keys[ 0 ] ];\n  }\n  return;\n};\n\nMesh.prototype.setPositions = function( positions ) {\n  this.positions = positions;\n  var len = positions.length;\n  for( var i = 0; i < len; i++ ) {\n    var vertex = new Vertex();\n    vertex.setIndex( i );\n    this.vertices.push( vertex );\n  }\n};\n\nMesh.prototype.getPositions = function() {\n  var results = [];\n  var vertices = this.vertices;\n  var positions = this.positions;\n  var len = vertices.length;\n  for( var i = 0; i < len; i++ ) {\n    var index = vertices[ i ].getIndex();\n    results.push( positions[ index ] );\n  }\n  return results;\n};\n\nMesh.prototype.setCells = function( cells ) {\n  this.cells = cells.slice();\n  var len = cells.length;\n  for( var i = 0; i < len; i++ ) {\n    var face = new Face();\n    face.setIndex( i );\n    this.faces.push( face );\n  }\n  this.buildEdgeMap();\n};\n\nMesh.prototype.getCells = function() {\n  var results = [];\n  var faces = this.faces;\n  var vertices = this.vertices;\n  var len = faces.length;\n  var halfEdge;\n  for( var i = 0; i < len; i++ ) {\n    var face = faces[ i ];\n    var halfEdgeStart = halfEdge = face.getHalfEdge();\n    var cell = [];\n    do {\n      var vertex = halfEdge.getVertex();\n      var index = vertex.getIndex();\n      cell.push( index );\n      halfEdge = halfEdge.getNextHalfEdge();\n    } while ( halfEdge != halfEdgeStart );\n    results.push( cell );\n  }\n  return results;\n};\n\nMesh.prototype.buildEdgeMap = function() {\n  var cells = this.cells;\n  var edges = this.edges;\n  var edgeMap = this.edgeMap;\n\n  var len = cells.length;\n  for( var i = 0; i < len; i++ ) {\n    var cell = cells[ i ];\n    var flen = cell.length;\n\n    for( var j = 0; j < flen; j++ ) {\n      var i0 = cell[ j ];\n      var i1 = cell[ ( j + 1 ) % flen ];\n\n      var key0 = i0 + '-' + i1;\n      var key1 = i1 + '-' + i0;\n\n      if( edgeMap[ key0 ] === undefined && edgeMap[ key1 ] === undefined ) {\n        var edge = new Edge();\n        edge.setIndex( edges.length );\n        edges.push( edge );\n        edgeMap[ key0 ] = edge;\n        edgeMap[ key1 ] = edge;\n      }\n    }\n  }\n};\n\nMesh.prototype.process = function() {\n  var edgeMap = this.edgeMap;\n  var edges = this.edges;\n  var cells = this.cells;\n  var vertices = this.vertices;\n  var faces = this.faces;\n  var halfEdges = this.halfEdges;\n  var clen = cells.length;\n\n  for( var faceIndex = 0; faceIndex < clen; faceIndex++ ) {\n    var cell = cells[ faceIndex ];\n    var face = faces[ faceIndex ];\n    var flen = cells[ faceIndex ].length;\n\n    var prevHalfEdge = undefined;\n    var firstHalfEdge = undefined;\n    for( var vertexIndex = 0; vertexIndex < flen; vertexIndex++ ) {\n        var vertexIndexCurr = cell[ vertexIndex ];\n        var vertexIndexNext = cell[ ( vertexIndex + 1 ) % flen ];\n\n        var edge = edgeMap[ vertexIndexCurr + '-' + vertexIndexNext ];\n        var vertex = vertices[ vertexIndexCurr ];\n\n        //Set Half Edge Properties\n        var halfedge = new HalfEdge();\n        halfedge.setVertex( vertex );\n        halfedge.setFace( face );\n        halfedge.setEdge( edge );\n\n        if( edge.getHalfEdge() ) {\n          halfedge.setFlipHalfEdge( edge.getHalfEdge() );\n          edge.getHalfEdge().setFlipHalfEdge( halfedge );\n        }\n        else {\n          edge.setHalfEdge( halfedge );\n        }\n\n        if( prevHalfEdge !== undefined ) {\n          prevHalfEdge.setNextHalfEdge( halfedge );\n        }\n        prevHalfEdge = halfedge;\n\n        if( vertexIndex === 0 ) {\n          firstHalfEdge = halfedge;\n        }\n        halfEdges.push( halfedge );\n        //Set Vertex Properties\n        vertex.setHalfEdge( halfedge );\n    }\n    //Set Face Properties\n    face.setHalfEdge( firstHalfEdge );\n    prevHalfEdge.setNextHalfEdge( firstHalfEdge );\n  }\n};\n\nmodule.exports = Mesh;\n","var FaceIntegrity = require('./FaceIntegrity');\nvar EdgeIntegrity = require('./EdgeIntegrity');\nvar VertexIntegrity = require('./VertexIntegrity');\nvar HalfEdgeIntegrity = require('./HalfEdgeIntegrity');\n\nvar Integrity = {};\n\nIntegrity.checkMesh = function( mesh ) {\n  var passed = true;\n  if( !this.checkFaces( mesh.getFaces() ) ) {\n    console.log( 'faces are messed up' );\n    passed = false;\n  }\n\n  if( !this.checkEdges( mesh.getEdges() ) ) {\n    console.log( 'edges are messed up' );\n    passed = false;\n  }\n\n  if( !this.checkVertices( mesh.getVertices() ) ) {\n    console.log( 'vertices are messed up' );\n    passed = false;\n  }\n\n  if( !this.checkHalfEdges( mesh.getHalfEdges() ) ) {\n    console.log( 'half edges are messed up' );\n    passed = false;\n  }\n\n  console.log( 'mesh is valid!' );\n  return passed;\n}\n\nIntegrity.checkEdges = function( edges ) {\n  var passed = true;\n  var len = edges.length;\n  for( var i = 0; i < len; i++ ) {\n    var edge = edges[ i ];\n    passed = EdgeIntegrity( edge );\n  }\n  return passed;\n}\n\nIntegrity.checkFaces = function( faces ) {\n  var passed = true;\n  var len = faces.length;\n  for( var i = 0; i < len; i++ ) {\n    var face = faces[ i ];\n    passed = FaceIntegrity( face );\n  }\n  return passed;\n}\n\nIntegrity.checkVertices = function( vertices ) {\n  var passed = true;\n  var len = vertices.length;\n  for( var i = 0; i < len; i++ ) {\n    var vertex = vertices[ i ];\n    passed = VertexIntegrity( vertex );\n  }\n  return passed;\n}\n\nIntegrity.checkHalfEdges = function( halfEdges ) {\n  var passed = true;\n  var len = halfEdges.length;\n  for( var i = 0; i < len; i++ ) {\n    var halfedge = halfEdges[ i ];\n    passed = HalfEdgeIntegrity( halfedge );\n  }\n  return passed;\n}\n\nmodule.exports = Integrity; \n","module.exports = function( face ) {\n  var passed = true;\n  if( face.getIndex() === -1 ) {\n    console.log('face: ', face.getIndex(), ' does not have a proper index' );\n    passed = false;\n  }\n  if( face.getHalfEdge() === undefined ) {\n    console.log('face: ', face.getIndex(), ' does not have a half edge' );\n    passed = false;\n  }\n  return passed;\n};\n","module.exports = function( edge ) {\n  var passed = true;\n  if( edge.getIndex() === -1 ) {\n    console.log('edge: ', edge.getIndex(), ' does not have a proper index' );\n    passed = false;\n  }\n  if( edge.getHalfEdge() === undefined ) {\n    console.log('edge: ', edge.getIndex(), ' does not have a half edge' );\n    passed = false;\n  }\n  return passed;\n};\n","module.exports = function( vertex ) {\n  var passed = true;\n  if( vertex.getIndex() === -1 ) {\n    console.log('vertex : ', vertex.getIndex(), ' does not have a proper index' );\n    passed = false;\n  }\n  if( vertex.getHalfEdge() === undefined ) {\n    console.log('vertex : ', vertex.getIndex(), ' does not have a half edge' );\n    passed = false;\n  }\n  return passed;\n};\n","var HalfEdgePrev = require('./../Queries/HalfEdgePrev');\n\nmodule.exports = function( halfEdge ) {\n  var passed = true;\n  var he = halfEdge;\n  if( he.getNextHalfEdge() === undefined ) {\n    console.log( 'halfEdge: does not have a next half edge' );\n    passed = false;\n  }\n  if( he.getFlipHalfEdge() === undefined ) {\n    console.log( 'halfEdge: does not have a flip half edge' );\n    passed = false;\n  }  \n  if( he.getVertex() === undefined ) {\n    console.log( 'halfEdge: does not have a valid vertex' );\n    passed = false;\n  }\n  if( he.getEdge() === undefined ) {\n    console.log( 'halfEdge: does not have an edge' );\n    passed = false;\n  }\n  if( he.getFace() === undefined ) {\n    console.log( 'halfEdge: does not have a face' );\n    passed = false;\n  }\n  return passed;\n};\n","module.exports = function( he ) {\n  var startHalfEdge = he;\n  while ( he.getNextHalfEdge() != startHalfEdge ) {\n    he = he.getNextHalfEdge();    \n  }\n  return he;\n};\n","var Integrity = require('./Integrity');\n\nmodule.exports = function( mesh ) {\n  var passed = true;\n  console.log( 'checking faces' );\n  if( !Integrity.checkFaces( mesh.getFaces() ) ) {\n    console.log( 'faces are messed up' );\n    passed = false;\n  }\n\n  console.log( 'checking edges' );\n  if( !Integrity.checkEdges( mesh.getEdges() ) ) {\n    console.log( 'edges are messed up' );\n    passed = false;\n  }\n\n  console.log( 'checking vertices' );\n  if( !Integrity.checkVertices( mesh.getVertices() ) ) {\n    console.log( 'vertices are messed up' );\n    passed = false;\n  }\n\n  console.log( 'checking halfedges' );\n  if( !Integrity.checkHalfEdges( mesh.getHalfEdges() ) ) {\n    console.log( 'half edges are messed up' );\n    passed = false;\n  }\n\n  console.log( 'mesh is valid!' );\n  return passed;\n};\n","module.exports = function( edge ) {\n    var results = [];\n    var he = edge.getHalfEdge();\n    results.push( he.getVertex() );\n    he = he.getFlipHalfEdge();\n    results.push( he.getVertex() );\n    return results; \n};\n","module.exports = function( face ) {\n  var originalHalfEdge = he = face.getHalfEdge();\n  var halfEdges = [];\n  do {\n    halfEdges.push( he );\n    he = he.getNextHalfEdge();\n  } while ( he != originalHalfEdge );\n  return halfEdges;\n};\n","module.exports = function( face ) {\n  var originalHalfEdge = he = face.getHalfEdge();\n  var vertices = [];\n  do {\n    vertices.push( he.getVertex() );\n    he = he.getNextHalfEdge();\n  } while ( he != originalHalfEdge );\n  return vertices;\n};\n","module.exports = function( vertex ) {\n  var startHalfEdge = originalHalfEdge = he = vertex.getHalfEdge();\n  var faces = [];\n  do {\n    if( he.getNextHalfEdge() === startHalfEdge ) {\n      faces.push( he.getFace() );\n      he = he.getFlipHalfEdge();\n      startHalfEdge = he;\n    }\n    else {\n      he = he.getNextHalfEdge();\n    }\n  } while ( he != originalHalfEdge );\n  return faces;\n};\n","module.exports = function( vertex ) {\n  var startHalfEdge = originalHalfEdge = he = vertex.getHalfEdge();\n  var halfEdges = [];\n  do {\n    if( he.getNextHalfEdge() === startHalfEdge ) {\n      he = he.getFlipHalfEdge();\n      startHalfEdge = he;\n      halfEdges.push( he );\n    }\n    else {\n      he = he.getNextHalfEdge();\n    }\n  } while ( he != originalHalfEdge );\n  return halfEdges;\n};\n","module.exports = function( vertex ) {\n  var startHalfEdge = originalHalfEdge = he = vertex.getHalfEdge();\n  var neighbors = [];\n  do {\n    if( he.getNextHalfEdge() === startHalfEdge ) {\n      neighbors.push( he.getVertex() );\n      he = he.getFlipHalfEdge();\n      startHalfEdge = he;\n    }\n    else {\n      he = he.getNextHalfEdge();\n    }\n  } while ( he != originalHalfEdge );\n  return neighbors;\n};\n","var vec3 = require('gl-matrix').vec3;\n\nmodule.exports = function( mesh ) {\n  var center = vec3.create();\n  var positions = mesh.positions;\n  var plen = positions.length;\n  for( var i = 0; i < plen; i++ ) {\n    vec3.add( center, center, positions[ i ] );\n  }\n  vec3.scale( center, center, 1.0 / plen );\n  return center; \n};\n","var Face = require('./../Core/Face');\nvar Edge = require('./../Core/Edge');\nvar Vertex = require('./../Core/Vertex');\nvar HalfEdge = require('./../Core/HalfEdge');\n\nvar vec3 = require('gl-matrix').vec3;\n\nmodule.exports = function( mesh, edgeIndex, position ) {\n  // when you create a new vertex\n  // you create a new edge\n  // you create two new half edges\n  // you create a new vertex\n  var edges = mesh.getEdges();\n  var halfEdges = mesh.getHalfEdges();\n  var edgeMap = mesh.getEdgeMap();\n  var vertices = mesh.getVertices();\n  var positions = mesh.positions;                 //hack fix this <-\n\n  var originalEdge = edges[ edgeIndex ];\n  var originalHalfEdge = originalEdge.getHalfEdge();\n  var originalHalfEdgeFace = originalHalfEdge.getFace();\n  var originalHalfEdgeNext = originalHalfEdge.getNextHalfEdge();\n  var originalHalfEdgeFlip = originalHalfEdge.getFlipHalfEdge();\n\n  var originalVertex = originalHalfEdge.getVertex();\n  var originalVertexIndex = originalVertex.getIndex();\n  var originalVertexPosition = positions[ originalVertexIndex ];\n\n  var originalVertexNext = originalHalfEdgeNext.getVertex();\n  var originalVertexNextIndex = originalVertexNext.getIndex();\n  var originalVertexNextPosition = positions[ originalVertexNextIndex ];\n\n  var newEdge = new Edge();\n  var newVertex = new Vertex();\n  var newHalfEdge = new HalfEdge();\n  var newHalfEdgeFlip = new HalfEdge();\n\n  //Set New Vertex Properties\n  var newVertexIndex = positions.length;\n  var newVertexPosition = vec3.create();\n  if( position !== undefined ) {\n    vec3.copy( newVertexPosition, position );\n  }\n  else {\n    vec3.add( newVertexPosition, originalVertexPosition, originalVertexNextPosition );\n    vec3.scale( newVertexPosition, newVertexPosition, 0.5 );\n  }\n\n  newVertex.setIndex( newVertexIndex );\n  newVertex.setHalfEdge( newHalfEdge );\n  positions.push( newVertexPosition );\n  vertices.push( newVertex );\n\n  //Set New Half Edge Properties\n  newHalfEdge.setVertex( newVertex );\n  newHalfEdge.setFace( originalHalfEdgeFace );\n  newHalfEdge.setNextHalfEdge( originalHalfEdgeNext );\n  newHalfEdge.setFlipHalfEdge( originalHalfEdgeFlip );\n  newHalfEdge.setEdge( newEdge );\n\n  // Set Original Half Edge Properties\n  originalHalfEdge.setNextHalfEdge( newHalfEdge );\n  originalHalfEdge.setFlipHalfEdge( newHalfEdgeFlip );\n\n  //fix Edge map\n  var originalEdgeKey0Old = originalVertexIndex + '-' + originalVertexNextIndex;\n  var originalEdgeKey1Old = originalVertexNextIndex + '-' + originalVertexIndex;\n  delete edgeMap[ originalEdgeKey0Old ];    //deletes edge key\n  delete edgeMap[ originalEdgeKey1Old ];    //deletes edge key\n\n  var originalEdgeKey0New = originalVertexIndex + '-' + newVertexIndex;\n  var originalEdgeKey1New = newVertexIndex + '-' + originalVertexIndex;\n\n  edgeMap[ originalEdgeKey0New ] = originalEdge;\n  edgeMap[ originalEdgeKey1New ] = originalEdge;\n\n  newEdge.setIndex( edges.length );\n  edges.push( newEdge );\n  newEdge.setHalfEdge( newHalfEdge );\n\n  var newEdgeKey0 = newVertexIndex + '-' + originalVertexNextIndex;\n  var newEdgeKey1 = originalVertexNextIndex + '-' + newVertexIndex;\n\n  edgeMap[ newEdgeKey0 ] = newEdge;\n  edgeMap[ newEdgeKey1 ] = newEdge;\n\n  // Set original half edge flip properties\n\n  var originalHalfEdgeFlipFace = originalHalfEdgeFlip.getFace();\n  var originalHalfEdgeFlipNext = originalHalfEdgeFlip.getNextHalfEdge();\n  originalHalfEdgeFlip.setNextHalfEdge( newHalfEdgeFlip );\n  originalHalfEdgeFlip.setFlipHalfEdge( newHalfEdge );\n  originalHalfEdgeFlip.setEdge( newEdge );\n\n  newHalfEdgeFlip.setNextHalfEdge( originalHalfEdgeFlipNext );\n  newHalfEdgeFlip.setFlipHalfEdge( originalHalfEdge );\n  newHalfEdgeFlip.setVertex( newVertex );\n  newHalfEdgeFlip.setEdge( originalEdge );\n  newHalfEdgeFlip.setFace( originalHalfEdgeFlipFace );\n  halfEdges.push( newHalfEdgeFlip );\n\n  return newVertex;\n}\n","var Face = require('./../Core/Face');\nvar Edge = require('./../Core/Edge');\nvar HalfEdge = require('./../Core/HalfEdge');\nvar HalfEdgePrev = require('./../Queries/HalfEdgePrev');\nvar VertexHalfEdges = require('./../Queries/VertexHalfEdges');\n\nmodule.exports = function( mesh, startVertexIndex, endVertexIndex ) {\n  // console.log( 'faceIndex:', faceIndex );\n  // console.log( 'startVertexIndex:', startVertexIndex );\n  // console.log( 'endVertexIndex:', endVertexIndex );\n\n  if( startVertexIndex === endVertexIndex ) {\n    throw 'illegal edge inseration: ' + startVertexIndex + ' , ' + endVertexIndex;\n  }\n\n  var edges = mesh.getEdges();\n  var halfEdges = mesh.getHalfEdges();\n  var edgeMap = mesh.getEdgeMap();\n  var vertices = mesh.getVertices();\n  var faces = mesh.getFaces();\n  var edge = mesh.getEdge( startVertexIndex, endVertexIndex );\n\n  if( edge ) {\n    // console.log( 'mesh already contains edge: ', mesh.getEdgeKeys( startVertexIndex, endVertexIndex ) );\n    return; //{ edge: edge, face: faces[ edge.getHalfEdge().getFace().getIndex() ] };\n  }\n\n  var startVertex = vertices[ startVertexIndex ];\n  var endVertex = vertices[ endVertexIndex ];\n\n  var cfaces = commonFaces( startVertex, endVertex );\n  var clen = cfaces.length;\n\n  var halfEdgeA, halfEdgeB, halfEdgeC, halfEdgeD;\n\n  for( var i = 0; i < clen; i++ ) {\n    var face = faces[ cfaces[ i ] ];\n    var faceHalfEdge = face.getHalfEdge();\n    var he = faceHalfEdge;\n    do {\n      var vertexIndex = he.getVertex().getIndex();\n      // var vertexIndexNext = hef.getVertex().getIndex();\n\n      if( vertexIndex === startVertexIndex ) {\n        halfEdgeA = he;\n      }\n\n      if( vertexIndex === endVertexIndex ) {\n        halfEdgeC = he;\n      }\n\n      he = he.getNextHalfEdge();\n    } while ( he != faceHalfEdge );\n\n    if( halfEdgeC != undefined || halfEdgeA != undefined ) {\n      break;\n    }\n\n    halfEdgeC = undefined;\n    halfEdgeA = undefined;\n  }\n\n  // console.log( halfEdgeC );\n  // console.log( halfEdgeA );\n  halfEdgeB = HalfEdgePrev( halfEdgeC );\n  halfEdgeD = HalfEdgePrev( halfEdgeA );\n\n  if( halfEdgeA === undefined || halfEdgeB === undefined ||\n      halfEdgeC === undefined || halfEdgeD === undefined ) {\n        throw 'error finding neighboring half edges when inserting edge';\n      }\n\n  // Set New Edge Properties\n  var newEdge = new Edge();\n  newEdge.setIndex( edges.length );\n  var edgeKeys = mesh.getEdgeKeys( startVertexIndex, endVertexIndex );\n  edgeMap[ edgeKeys[ 0 ] ] = newEdge;\n  edgeMap[ edgeKeys[ 1 ] ] = newEdge;\n  edges.push( newEdge );\n\n  var newFace = new Face();\n  newFace.setIndex( faces.length );\n  faces.push( newFace );\n\n  //create new half edges\n  var newHalfEdgeAB = new HalfEdge();\n  var newHalfEdgeCD = new HalfEdge();\n\n  newHalfEdgeAB.setNextHalfEdge( halfEdgeA );\n  newHalfEdgeAB.setFlipHalfEdge( newHalfEdgeCD );\n  newHalfEdgeAB.setVertex( endVertex );\n  newHalfEdgeAB.setEdge( newEdge );\n  newHalfEdgeAB.setFace( face );\n  halfEdges.push( newHalfEdgeAB );\n\n  newHalfEdgeCD.setNextHalfEdge( halfEdgeC );\n  newHalfEdgeCD.setFlipHalfEdge( newHalfEdgeAB );\n  newHalfEdgeCD.setVertex( startVertex );\n  newHalfEdgeCD.setEdge( newEdge );\n  newHalfEdgeCD.setFace( newFace );\n  halfEdges.push( newHalfEdgeCD );\n\n  //set all other edge & halfedge & face properties so they are accurate\n  newEdge.setHalfEdge( newHalfEdgeAB );\n  face.setHalfEdge( newHalfEdgeAB );\n  newFace.setHalfEdge( newHalfEdgeCD );\n  halfEdgeD.setNextHalfEdge( newHalfEdgeCD );\n  halfEdgeB.setNextHalfEdge( newHalfEdgeAB );\n  setHalfEdgeLoopFace( newHalfEdgeCD, newFace );\n  setHalfEdgeLoopFace( newHalfEdgeAB, face );\n  return { edge: newEdge, face: newFace };\n};\n\nfunction commonFaces( vertex0, vertex1 ) {\n  var results = {};\n  var hes0 = VertexHalfEdges( vertex0 );\n  var hes0l = hes0.length;\n  var hes1 = VertexHalfEdges( vertex1 );\n  var hes1l = hes1.length;\n\n  for( var i = 0; i < hes0l; i++ ) {\n    var he0f = hes0[ i ].getFace();\n    for( var j = 0; j < hes1l; j++ ) {\n      var he1f = hes1[ j ].getFace();\n      if( he0f.getIndex() === he1f.getIndex() ) {\n        results[ he0f.getIndex() ] = he1f;\n      }\n    }\n  }\n  return Object.keys( results );\n}\n\nfunction setHalfEdgeLoopFace( he, face ) {\n  var starthe = he;\n  do {\n    he.setFace( face );\n    he = he.getNextHalfEdge();\n  } while ( he != starthe );\n}\n","var Face = require('./../Core/Face');\nvar Edge = require('./../Core/Edge');\nvar HalfEdge = require('./../Core/HalfEdge');\nvar HalfEdgePrev = require('./../Queries/HalfEdgePrev');\n\nmodule.exports = function( mesh, edgeIndex ) {\n  var edges = mesh.getEdges();\n  var edge = edges[ edgeIndex ];\n  \n  var edgeHalfEdge = edge.getHalfEdge();\n  var edgeHalfEdgePrev = HalfEdgePrev( edgeHalfEdge );\n  var edgeHalfEdgeNext = edgeHalfEdge.getNextHalfEdge();\n  var edgeHalfEdgeVertex = edgeHalfEdge.getVertex();\n  var edgeHalfEdgeFace = edgeHalfEdge.getFace();\n\n  var edgeHalfEdgeFlip = edgeHalfEdge.getFlipHalfEdge();\n  var edgeHalfEdgeFlipPrev = HalfEdgePrev( edgeHalfEdgeFlip );\n  var edgeHalfEdgeFlipNext = edgeHalfEdgeFlip.getNextHalfEdge();\n  var edgeHalfEdgeFlipVertex = edgeHalfEdgeFlip.getVertex();\n  var edgeHalfEdgeFlipFace = edgeHalfEdgeFlip.getFace();\n\n  // Set Face Half Edge\n  edgeHalfEdgeFace.setHalfEdge( edgeHalfEdgeNext );\n  //Set Half Edge Face Properties\n  edgeHalfEdgePrev.setNextHalfEdge( edgeHalfEdgeFlipNext );\n  edgeHalfEdgeVertex.setHalfEdge( edgeHalfEdgeFlipNext );\n\n  // Set Half Edge Flip Face Properties\n  edgeHalfEdgeFlipPrev.setNextHalfEdge( edgeHalfEdgeNext );\n  edgeHalfEdgeFlipVertex.setHalfEdge( edgeHalfEdgeNext );\n\n  // Remove Half Edge Flip Face\n  var faces = mesh.getFaces();\n  faces.splice( edgeHalfEdgeFlipFace.getIndex(), 1 );\n  var flen = faces.length;\n  for( var i = 0; i < flen; i++ ) {\n    faces[ i ].setIndex( i );\n  }\n\n  // Remove Edge from Edges Array\n  edges.splice( edgeIndex, 1 );\n  var elen = edges.length;\n  for( var i = 0; i < elen; i++ ) {\n    edges[ i ].setIndex( i );\n  }\n\n  // Remove Edge from Edge Hash Map\n  var keys = mesh.getEdgeKeys( edgeHalfEdgeVertex.getIndex(), edgeHalfEdgeFlipVertex.getIndex() );\n  var edgeMap = mesh.getEdgeMap();\n  delete edgeMap[ keys[ 0 ] ];\n  delete edgeMap[ keys[ 1 ] ];\n};\n","var vec3 = require('gl-matrix').vec3;\nvar FaceVertices = require('./../Queries/FaceVertices');\nvar VertexNeighbors = require('./../Queries/VertexNeighbors');\nvar InsertVertex = require('./InsertVertex');\nvar InsertEdge = require('./InsertEdge');\n\nmodule.exports = function( mesh ) {\n  var positions = mesh.positions;\n  var plen = positions.length;\n  var newPositions = [];\n  for( var i = 0; i < plen; i++ ) {\n    newPositions.push( vec3.create() );\n  }\n\n  var vertices = mesh.getVertices();\n  var vlen = vertices.length;\n  var beta;\n  for( var i = 0; i < vlen; i++ ) {\n    var vertex = vertices[ i ];\n    var vertexIndex = vertex.getIndex();\n    var vertexPos = positions[ vertexIndex ];\n    var newPos = newPositions[ vertexIndex ];\n\n    var neighbors = VertexNeighbors( vertex );\n    var nlen = neighbors.length;\n\n    if( nlen === 3 ) {\n      beta = 3.0 / 16.0;\n    }\n    else if( nlen > 3 ) {\n      beta = ( ( 5.0 / 8.0 ) - Math.pow( ( 0.375 + 0.25 * Math.cos( ( Math.PI * 2.0 ) / nlen ) ), 2.0 ) ) / nlen;\n    }\n\n    vec3.scaleAndAdd( newPos, newPos, vertexPos, ( 1.0 - nlen * beta ) );\n\n    for( var j = 0; j < nlen; j++ ) {\n      var neighborPos = positions[ neighbors[ j ].getIndex() ];\n      vec3.scaleAndAdd( newPos, newPos, neighborPos, beta );\n    }\n  }\n\n  var edges = mesh.getEdges();\n  var len = edges.length;\n  var newVerts = [];\n  var vertexAdjacentFactor = 0.375;\n  var vertexOppositeFactor = 0.125;\n\n  var newPos = vec3.create();\n  for( var i = 0; i < len; i++ ) {\n    vec3.set( newPos, 0, 0, 0 );\n    var edge = edges[ i ];\n    var halfEdge = edge.getHalfEdge();\n    var halfEdgeFlip = halfEdge.getFlipHalfEdge();\n    var halfEdgeTop = halfEdge.getNextHalfEdge().getNextHalfEdge();\n    var halfEdgeFlipTop = halfEdgeFlip.getNextHalfEdge().getNextHalfEdge();\n\n    var halfEdgeVertex = halfEdge.getVertex();\n    var halfEdgeFlipVertex = halfEdgeFlip.getVertex();\n    var halfEdgeTopVertex = halfEdgeTop.getVertex();\n    var halfEdgeFlipTopVertex = halfEdgeFlipTop.getVertex();\n\n    var halfEdgeVertexPos = positions[ halfEdgeVertex.getIndex() ];\n    var halfEdgeFlipVertexPos = positions[ halfEdgeFlipVertex.getIndex() ];\n    var halfEdgeTopVertexPos = positions[ halfEdgeTopVertex.getIndex() ];\n    var halfEdgeFlipTopVertexPos = positions[ halfEdgeFlipTopVertex.getIndex() ];\n\n    vec3.scaleAndAdd( newPos, newPos, halfEdgeVertexPos, vertexAdjacentFactor );\n    vec3.scaleAndAdd( newPos, newPos, halfEdgeFlipVertexPos, vertexAdjacentFactor );\n    vec3.scaleAndAdd( newPos, newPos, halfEdgeTopVertexPos, vertexOppositeFactor );\n    vec3.scaleAndAdd( newPos, newPos, halfEdgeFlipTopVertexPos, vertexOppositeFactor );\n\n    newVerts.push( InsertVertex( mesh, edge.getIndex(), newPos ) );\n  }\n\n  var faces = mesh.getFaces();\n  var flen = faces.length;\n  var result;\n  for( var i = 0; i < flen; i++ ) {\n    var face = faces[ i ];\n    var vertices = FaceVertices( face );\n    var vlen = vertices.length;\n\n    var v1 = vertices[ 1 ];\n    var v3 = vertices[ 3 ];\n    var v5 = vertices[ 5 ];\n\n    result = InsertEdge( mesh, v1.getIndex(), v3.getIndex() );\n    result = InsertEdge( mesh, v3.getIndex(), v5.getIndex() );\n    result = InsertEdge( mesh, v5.getIndex(), v1.getIndex() );\n  }\n\n  for( var i = 0; i < plen; i++ ) {\n    vec3.copy( positions[ i ], newPositions[ i ] );\n  }\n};\n","var VertexNeighbors = require('./../Queries/VertexNeighbors');\nvar FaceVertices = require('./../Queries/FaceVertices');\nvar FaceHalfEdges = require('./../Queries/FaceHalfEdges');\nvar VertexHalfEdges = require('./../Queries/VertexHalfEdges');\nvar InsertVertex = require('./InsertVertex');\nvar InsertEdge = require('./InsertEdge');\n\nvar vec3 = require('gl-matrix').vec3;\n\nmodule.exports = function( mesh ) {\n  var newPositions = [];\n  var positions = mesh.positions;\n  var plen = positions.length;\n  for( var i = 0; i < plen; i++ ) {\n    newPositions.push( vec3.clone( positions[ i ] ) );\n  }\n\n  var tmp = vec3.create();\n  var newPos = vec3.create();\n  //calculate new original vertex positions\n  var vertices = mesh.getVertices();\n  var vlen = vertices.length;\n  var kmap = {};\n\n  for( var i = 0; i < 32; i++ ) {\n    var beta = 3.0 / ( 2.0 * i );\n    var rho = 1.0 / ( 4.0 * i );\n    kmap[ i ] = [ 1.0 - beta - rho, beta / i, rho / i ];\n  }\n\n  for( var i = 0; i < vlen; i++ ) {\n      var vertex = vertices[ i ];\n      var vertexIndex = vertex.getIndex();\n      var vertexPos = positions[ vertexIndex ];\n\n      var neighbors = VertexHalfEdges( vertex );\n      var nlen = neighbors.length;\n\n      var kernel = kmap[ nlen ];\n      vec3.copy( newPos, vertexPos );\n      vec3.scale( newPos, newPos, kernel[ 0 ] );\n\n      for( var j = 0; j < nlen; j++ ) {\n        var he = neighbors[ j ];\n\n        var hen = he.getNextHalfEdge();\n        var v0iPos = positions[ hen.getVertex().getIndex() ];\n        vec3.scaleAndAdd( newPos, newPos, v0iPos, kernel[ 1 ] );\n\n        var henn = hen.getNextHalfEdge();\n        var v1iPos = positions[ henn.getVertex().getIndex() ];\n        vec3.scaleAndAdd( newPos, newPos, v1iPos, kernel[ 2 ] );\n      }\n      vec3.copy( newPositions[ vertexIndex ], newPos );\n  }\n\n  //Calculate Face Verts\n  var faceVerticesPosHash = {};\n  var faces = mesh.getFaces();\n  var flen = faces.length;\n  for( var i = 0; i < flen; i++ ) {\n    var face = faces[ i ];\n    var faceVertices = FaceVertices( face );\n    var vlen = faceVertices.length;\n    var faceVertexPos = vec3.create();\n    faceVerticesPosHash[ face.getIndex() ] = faceVertexPos;\n\n    for( var j = 0; j < vlen; j++ ) {\n      var vertex = faceVertices[ j ];\n      var vertexIndex = vertex.getIndex();\n      var vertexPos = positions[ vertexIndex ];\n      vec3.scaleAndAdd( faceVertexPos, faceVertexPos, vertexPos, 1.0 / 4.0 );\n    }\n  }\n\n  //Calculate Edge Verts\n  var edgeVerticesPosHash = {};\n  var edges = mesh.getEdges();\n  var elen = edges.length;\n  for( var i = 0; i < elen; i++ ) {\n    var edge = edges[ i ];\n\n    var edgeVertexPos = vec3.create();\n    edgeVerticesPosHash[ edge.getIndex() ] = edgeVertexPos;\n\n    var he = edge.getHalfEdge();\n    var heVertex = he.getVertex();\n    var heVertexPos = positions[ heVertex.getIndex() ];\n    vec3.scaleAndAdd( edgeVertexPos, edgeVertexPos, heVertexPos, 6.0 / 16.0 );\n\n    var heVertexPos0 = positions[ he.getNextHalfEdge().getNextHalfEdge().getVertex().getIndex() ];\n    var heVertexPos1 = positions[ he.getNextHalfEdge().getNextHalfEdge().getNextHalfEdge().getVertex().getIndex() ];\n\n    vec3.scaleAndAdd( edgeVertexPos, edgeVertexPos, heVertexPos0, 1.0 / 16.0 );\n    vec3.scaleAndAdd( edgeVertexPos, edgeVertexPos, heVertexPos1, 1.0 / 16.0 );\n\n    var hef = he.getFlipHalfEdge();\n    var hefVertex = hef.getVertex();\n    var hefVertexPos = positions[ hefVertex.getIndex() ];\n    vec3.scaleAndAdd( edgeVertexPos, edgeVertexPos, hefVertexPos, 6.0 / 16.0 );\n\n    var hefVertexPos0 = positions[ hef.getNextHalfEdge().getNextHalfEdge().getVertex().getIndex() ];\n    var hefVertexPos1 = positions[ hef.getNextHalfEdge().getNextHalfEdge().getNextHalfEdge().getVertex().getIndex() ];\n\n    vec3.scaleAndAdd( edgeVertexPos, edgeVertexPos, hefVertexPos0, 1.0 / 16.0 );\n    vec3.scaleAndAdd( edgeVertexPos, edgeVertexPos, hefVertexPos1, 1.0 / 16.0 );\n  }\n\n  // console.log( edgeVerticesPosHash );\n  // insert edges and set vertex positions\n\n\n  for( var i = 0; i < elen; i++ ) {\n    var edge = edges[ i ];\n    var edgeIndex = edge.getIndex();\n    InsertVertex( mesh, edge.getIndex(), edgeVerticesPosHash[ edgeIndex ] );\n  }\n\n  var edgeVertices = {};\n  for( var i = 0; i < flen; i++ ) {\n    var face = faces[ i ];\n    edgeVertices[ face.getIndex() ] = [];\n    var vertices = FaceVertices( face );\n    var vlen = vertices.length;\n    for( var j = 0; j < vlen; j++ ) {\n      var vertex = vertices[ j ];\n      var neighbors = VertexNeighbors( vertex );\n      if( neighbors.length == 2 ) {\n        edgeVertices[ face.getIndex() ].push( vertex );\n      }\n    }\n  }\n\n  var keys = Object.keys( edgeVertices );\n  for( var i = 0; i < keys.length; i++ ) {\n    var faceIndex = keys[ i ];\n    var vertices = edgeVertices[ faceIndex ];\n    var v0 = vertices[ 0 ];\n    var v1 = vertices[ 1 ];\n    var v2 = vertices[ 2 ];\n    var v3 = vertices[ 3 ];\n    var result = InsertEdge( mesh, v0.getIndex(), v2.getIndex() );\n    var cv = InsertVertex( mesh, result.edge.getIndex(), faceVerticesPosHash[ faceIndex ] );\n    edgeVertices[ faceIndex ].push( cv );\n    InsertEdge( mesh, v1.getIndex(), cv.getIndex() );\n    InsertEdge( mesh, v3.getIndex(), cv.getIndex() );\n  }\n\n  for( var i = 0; i < plen; i++ ) {\n    vec3.copy( positions[ i ], newPositions[ i ] );\n  }\n};\n","var vec3 = require('gl-matrix').vec3;\nvar VertexNeighbors = require('./../Queries/VertexNeighbors');\nvar FaceVertices = require('./../Queries/FaceVertices');\nvar InsertVertex = require('./InsertVertex');\nvar InsertEdge = require('./InsertEdge');\n\nmodule.exports = function( mesh ) {\n  var edges = mesh.getEdges();\n  var elen = edges.length;\n  var edgeVertices = {};\n\n  for( var i = 0; i < elen; i++ ) {\n    var edge = edges[ i ];\n    InsertVertex( mesh, edge.getIndex() );\n  }\n\n  var faces = mesh.getFaces();\n  var flen = faces.length;\n  for( var i = 0; i < flen; i++ ) {\n    var face = faces[ i ];\n    edgeVertices[ face.getIndex() ] = [];\n    var vertices = FaceVertices( face );\n    var vlen = vertices.length;\n    for( var j = 0; j < vlen; j++ ) {\n      var vertex = vertices[ j ];\n      var neighbors = VertexNeighbors( vertex );\n      if( neighbors.length == 2 ) {\n        edgeVertices[ face.getIndex() ].push( vertex );\n      }\n    }\n  }\n\n  var keys = Object.keys( edgeVertices );\n  for( var i = 0; i < keys.length; i++ ) {\n    var faceIndex = keys[ i ];\n    var vertices = edgeVertices[ faceIndex ];\n    var v0 = vertices[ 0 ];\n    var v1 = vertices[ 1 ];\n    var v2 = vertices[ 2 ];\n    var v3 = vertices[ 3 ];\n    var result = InsertEdge( mesh, v0.getIndex(), v2.getIndex() );\n    var cv = InsertVertex( mesh, result.edge.getIndex() );\n    edgeVertices[ faceIndex ].push( cv );\n    InsertEdge( mesh, v1.getIndex(), cv.getIndex() );\n    InsertEdge( mesh, v3.getIndex(), cv.getIndex() );\n  }\n};\n","var FaceVertices = require('./../Queries/FaceVertices');\nvar calculateNormal = require('guf').calculateNormal;\nvar triangulatePolygon = require('cga').triangulatePolygon2;\nvar vec3 = require('gl-matrix').vec3;\nvar quat = require('gl-matrix').quat;\nvar InsertEdge = require('./InsertEdge');\n\nmodule.exports = function( mesh ) {\n  // console.log( 'starting triangulation' );\n  var positions = mesh.positions;\n  var faces = mesh.getFaces();\n  var flen = faces.length;\n  var zAxis = vec3.fromValues( 0.0, 0.0, 1.0 );\n  var res = {};\n  for( var i = 0; i < flen; i++ ) {\n    var face = faces[ i ];\n    var vertices = FaceVertices( face );\n    var vlen = vertices.length;\n    if( vlen === 3 ) { continue; }\n\n    var v0 = positions[ vertices[ 0 ].getIndex() ];\n    var v1 = positions[ vertices[ 1 ].getIndex() ];\n    var v2 = positions[ vertices[ 2 ].getIndex() ];\n\n    var normal = calculateNormal( v0, v1, v2 );\n    var faceOri = quat.create();\n    quat.rotationTo( faceOri, normal, zAxis );\n\n    var polygon = [];\n    var indicies = [];\n    for( var j = 0; j < vlen; j++ ) {\n      var vertex = vertices[ j ];\n      var vertexIndex = vertex.getIndex();\n      var vertexPos = vec3.clone( positions[ vertexIndex ] );\n      vec3.transformQuat( vertexPos, vertexPos, faceOri );\n      polygon.push( [ vertexPos[ 0 ], vertexPos[ 1 ] ] );\n      indicies.push( vertexIndex );\n    }\n\n    var results = triangulatePolygon( polygon );\n    var rlen = results.length;\n    for( var k = 0; k < rlen; k++ ) {\n      var result = results[ k ];\n\n      var i1 = indicies[ result[ 1 ] ];\n      var i2 = indicies[ result[ 2 ] ];\n\n      InsertEdge( mesh, i1, i2 );\n    }\n  }\n};\n","\n//ARRAYS\nexports.normalizeArray = require('./guf/normalize-array');\n\n//NORMALS\nexports.faceNormals = require('./guf/face-normals');\nexports.vertexNormals = require('./guf/vertex-normals');\n\n//ONE NORMAL\nexports.calculateNormal = require('./guf/calculate-normal');\n\n//HELPFUL UTILS\nexports.cross = require('./guf/cross');\nexports.normalize = require('./guf/normalize');\n","module.exports = function( a ) {\n  var result = [];\n  var len = a.length;\n  var slen = a[ 0 ].length;\n  var addZ = slen < 3 ? true : false;\n  for( var i = 0; i < len; i++ ) {\n    for( var j = 0; j < slen; j++ ) { result.push( a[ i ][ j ] ); }\n    if( addZ ) { result.push( 0.0 ); }\n  }\n  return result;\n};\n","var normalize = require('guf').normalizeArray;\nvar calculateNormal = require('./calculate-normal');\n\nmodule.exports = function( verts, faces ) {\n  var positions = verts;\n  var con = verts[ 0 ].constructor;\n  if( con === Array || con == Float32Array ) {\n    positions = normalize( verts );\n  }\n  var cells = faces[ 0 ].constructor === Array ? normalize( faces ) : faces;\n  var normals = [];\n  var i0, i1, i2;\n  var a = [];\n  var b = [];\n  var c = [];\n  var d = [];\n  for( var i = 0; i < cells.length; i += 3 ) {\n    i0 = cells[ i ] * 3;\n\t  i1 = cells[ i + 1 ] * 3;\n\t  i2 = cells[ i + 2 ] * 3;\n    a[ 0 ] = positions[ i0 ]; a[ 1 ] = positions[ i0 + 1 ]; a[ 2 ] = positions[ i0 + 2 ];\n    b[ 0 ] = positions[ i1 ]; b[ 1 ] = positions[ i1 + 1 ]; b[ 2 ] = positions[ i1 + 2 ];\n    c[ 0 ] = positions[ i2 ]; c[ 1 ] = positions[ i2 + 1 ]; c[ 2 ] = positions[ i2 + 2 ];\n    d = calculateNormal( a, b, c );\n    normals[ i ] = d[ 0 ];\n    normals[ i + 1 ] = d[ 1 ];\n    normals[ i + 2 ] = d[ 2 ];\n  }\n  return normals;\n};\n","var cross = require('./cross');\nvar normalize = require('./normalize');\n\nmodule.exports = function( a, b, c ) {\n  var r = [ 0.0, 0.0, 0.0 ];\n  cross( r, a, b, c );\n  normalize( r, r );\n  return r;\n};\n","module.exports = function( out, a, b, c ) {\n  var abx = b[ 0 ] - a[ 0 ], aby = b[ 1 ] - a[ 1 ], abz = b[ 2 ] - a[ 2 ],\n      acx = c[ 0 ] - a[ 0 ], acy = c[ 1 ] - a[ 1 ], acz = c[ 2 ] - a[ 2 ];\n  out[ 0 ] = aby * acz - abz * acy;\n  out[ 1 ] = abz * acx - abx * acz;\n  out[ 2 ] = abx * acy - aby * acx;\n  return out;\n};\n","module.exports = function( out, v ) {\n  var length = Math.sqrt( v[ 0 ] * v[ 0 ] + v[ 1 ] * v[ 1 ] + v[ 2 ] * v[ 2 ] );\n  out[ 0 ] = v[ 0 ] / length;\n  out[ 1 ] = v[ 1 ] / length;\n  out[ 2 ] = v[ 2 ] / length;\n  return out;\n};\n","var cross = require('./cross');\nvar normalize = require('./normalize');\nvar normalizeArray = require('./normalize-array');\n\nmodule.exports = function( verts, faces ) {\n  var positions = verts[0].constructor === Array ? normalizeArray( verts ) : verts;\n  var cells = faces[0].constructor === Array ? normalizeArray( faces ) : faces;\n\n  //Create Vertex Face Map ( tells you which vert belong to what faces )\n  var map = {};\n  var plen = positions.length / 3;\n  for( var i = 0; i < plen; i++ ) { map[ i ] = []; }\n\n  //Fill in Map\n  var clen = cells.length;\n  var i0, i1, i2, index;\n  for( var i = 0; i < clen; i += 3 ) {\n    index = i;\n    i0 = index; i1 = index + 1; i2 = index + 2;\n      map[ cells[ i0 ] ].push( i );\n      map[ cells[ i1 ] ].push( i );\n      map[ cells[ i2 ] ].push( i );\n  }\n\n  //Calculate Vertex Normals\n  var normals = [];\n  var temp = [ 0.0, 0.0, 0.0 ];\n  var norm = [ 0.0, 0.0, 0.0 ];\n  var keys = Object.keys( map );\n  var v0, v1, v2, a = [ 0.0, 0.0, 0.0 ], b = [ 0.0, 0.0, 0.0 ], c = [ 0.0, 0.0, 0.0 ];\n  for( var i = 0; i < keys.length; i++ ) {\n    var faces = map[ keys[ i ] ];\n    for( var j = 0; j < faces.length; j++ ) {\n      var index = faces[ j ];\n\n      v0 = cells[ index ];\n      v1 = cells[ index + 1 ];\n      v2 = cells[ index + 2 ];\n\n      a[ 0 ] = positions[ v0 * 3 ];\n      a[ 1 ] = positions[ v0 * 3 + 1 ];\n      a[ 2 ] = positions[ v0 * 3 + 2 ];\n\n      b[ 0 ] = positions[ v1 * 3 ];\n      b[ 1 ] = positions[ v1 * 3 + 1 ];\n      b[ 2 ] = positions[ v1 * 3 + 2 ];\n\n      c[ 0 ] = positions[ v2 * 3 ];\n      c[ 1 ] = positions[ v2 * 3 + 1 ];\n      c[ 2 ] = positions[ v2 * 3 + 2 ];\n\n      cross( temp, a, b, c );\n\n      norm[ 0 ] += temp[ 0 ];\n      norm[ 1 ] += temp[ 1 ];\n      norm[ 2 ] += temp[ 2 ];\n    }\n    normalize( norm, norm );\n    normals.push( norm[ 0 ] , norm[ 1 ], norm[ 2 ] );\n    norm[ 0 ] = 0.0; norm[ 1 ] = 0.0; norm[ 2 ] = 0.0;\n  }\n  return normals;\n};\n","//1D Functions\nexports.greaterThanZero       = require(\"./cga/greater-than-zero-1d.js\");\nexports.isEqual               = require(\"./cga/is-equal-1d.js\");\nexports.isZero                = require(\"./cga/is-zero-1d.js\");\n\n//2D Functions\nexports.area2                 = require(\"./cga/area2-2d.js\");\nexports.convexHull2           = require(\"./cga/convex-hull-2d.js\");\nexports.cross2                = require(\"./cga/cross-2d.js\");\nexports.expandPolygon2        = require(\"./cga/expand-polygon-2d.js\");\nexports.inCone2               = require(\"./cga/in-cone-2d.js\");\nexports.intersection2         = require(\"./cga/intersection-2d.js\");\nexports.intersects2           = require(\"./cga/intersects-2d.js\");\nexports.intersectsProper2     = require(\"./cga/intersects-proper-2d.js\");\nexports.isBetween2            = require(\"./cga/is-between-2d.js\");\nexports.isColinear2           = require(\"./cga/is-colinear-2d.js\");\nexports.isDiagonal2           = require(\"./cga/is-diagonal-2d.js\");\nexports.isDiagonalie2         = require(\"./cga/is-diagonalie-2d.js\");\nexports.isEqual2              = require(\"./cga/is-equal-2d.js\");\nexports.isLeft2               = require(\"./cga/is-left-2d.js\");\nexports.isLeftOn2             = require(\"./cga/is-left-on-2d.js\");\nexports.triangulatePolygon2   = require(\"./cga/triangulate-polygon-2d.js\");\n\n//3D Functions\nexports.isColinear3           = require(\"./cga/is-colinear-3d.js\");\n","module.exports = function( a ) {\n  return a > 0.00001;\n};\n","var isZero = require('./is-zero-1d');\n\nmodule.exports = function( a, b ) {\n  return ( a === b || isZero( a - b ) );\n};\n","module.exports = function( a ) {\n  return ( a === 0 || Math.abs( a ) < 0.000001 );\n};\n","module.exports = function( a, b, c ) {\n  return ( b[ 0 ] - a[ 0 ] ) * ( c[ 1 ] - a[ 1 ] ) -\n         ( c[ 0 ] - a[ 0 ] ) * ( b[ 1 ] - a[ 1 ] );\n};\n","var isEqual = require('./is-equal-1d');\nvar isLeft = require('./is-left-2d');\n\nmodule.exports = function( polygon ) {\n  // find the lowest rightmost point\n  var ri = -1;\n  var rx = -1000000, ry = 10000000;\n  var len = polygon.length;\n  var x, y;\n  for( var i = 0; i < len; i++ ) {\n    x = polygon[ i ][ 0 ];\n    y = polygon[ i ][ 1 ];\n    if( y < ry || ( ( y == ry ) && ( x > rx ) ) ) {\n      ri = i;\n      rx = x;\n      ry = y;\n    }\n  }\n\n  // calculate the angles (relative to the positive x-axis) from bottom\n  // right most point and every other point\n  var angles = [];\n  for( var i = 0; i < len; i++ ) {\n      x = polygon[ i ][ 0 ] - rx;\n      y = polygon[ i ][ 1 ] - ry;\n      angles[ i ] = { 'key' : i, 'value' : Math.atan2( y, x ), 'length' : ( x*x + y*y ) };\n  }\n\n  // sort the angles, keep the indicies of the original points for referece\n  angles.sort( function( a, b ) {\n    if( isEqual( a.value, b.value ) ) { return 0; }\n    else if( a.value < b.value ) { return -1; }\n    return 1; }\n  );\n\n  // remove points that have the same angle ( only remove the one closest to\n  // the bottom right most point )\n  var a, b;\n  for( var i = 1; i < angles.length; i++ ) {\n    a = angles[ i - 1 ];\n    b = angles[ i ];\n    if( isEqual( a.value, b.value ) ) {\n        if( a.length > b.length ) {\n          angles.splice( i, 1 );      //remove b ( 1 )\n        }\n        else {\n          angles.splice( i - 1, 1 );  //remove a ( 0 )\n        }\n        i--;\n    }\n  }\n\n  // use graham's algorithm to find the convex hull ( checks\n  // to see if the next point on the stack turns left or right\n  // if it turns right, the remove it and test again till you turn left\n  var i = 1;\n  var limit = angles.length;\n  var index;\n  var stack = [ angles[ limit - 1 ].key, ri ];\n  while( i < limit ) {\n    index = angles[ i ].key;\n    var s = stack.length - 1;\n    var sl = s - 1;\n    if( isLeft( polygon[ stack[ sl ] ], polygon[ stack[ s ] ], polygon[ index ] ) ) {\n      stack.push( index );\n      i++;\n    }\n    else {\n      stack.pop();\n    }\n  }\n  return stack;\n};\n","var greaterThanZero = require('./greater-than-zero-1d');\nvar area2 = require('./area2-2d');\n\nmodule.exports = function( a, b, c ) {\n  return greaterThanZero( area2( a, b, c ) );\n};\n","module.exports = function( a, b ) {\n  return a[ 0 ] * b[ 1 ] - b[ 0 ] * a[ 1 ];\n};\n","var vec2 = require('gl-matrix').vec2;\nvar vec3 = require('gl-matrix').vec3;\nvar intersection = require('./intersection-2d');\n\nmodule.exports = function( polygon, amount ) {\n  amount = amount == undefined ? 0.5 : amount;\n  var result = [];\n  var len = polygon.length;\n  var cpr = vec3.create();\n  var zdir = vec3.fromValues( 0.0, 0.0, 1.0 );\n  var cdir = vec3.create();\n  var a = vec2.create();\n  var b = vec2.create();\n  var c = vec2.create();\n  var d = vec2.create();\n\n  var dir = vec2.create();\n  var at, bt, ct, t;\n  // Preform first a, b, calculation so we optimise loop\n  at = polygon[ len - 1 ];\n  bt = polygon[ 0 ];\n  vec2.copy( a, at );\n  vec2.copy( b, bt );\n  vec2.subtract( dir, b, a );\n  vec3.set( cdir, dir[ 0 ], dir[ 1 ], 0.0 );\n  vec3.cross( cpr, cdir, zdir );\n  vec3.normalize( cpr, cpr );\n  vec3.scale( cpr, cpr, amount );\n  vec2.copy( dir, cpr );\n  vec2.add( a, a, dir );\n  vec2.add( b, b, dir );\n\n  for( var i = 0; i < len; i++ ) {\n    bt = polygon[ i ];\n    ct = polygon[ ( i + 1 ) % len ];\n\n    vec2.copy( c, bt );\n    vec2.copy( d, ct );\n\n    vec2.subtract( dir, d, c );\n    vec3.set( cdir, dir[ 0 ], dir[ 1 ], 0.0 );\n    vec3.cross( cpr, cdir, zdir );\n    vec3.normalize( cpr, cpr );\n    vec3.scale( cpr, cpr, amount );\n    vec2.copy( dir, cpr );\n    vec2.add( c, c, dir );\n    vec2.add( d, d, dir );\n\n    result.push( intersection( a, b, c, d ) );\n\n    vec2.copy( a, c );\n    vec2.copy( b, d );\n  }\n  return result;\n};\n","import * as glMatrix from \"./gl-matrix/common.js\";\r\nimport * as mat2 from \"./gl-matrix/mat2.js\";\r\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\r\nimport * as mat3 from \"./gl-matrix/mat3.js\";\r\nimport * as mat4 from \"./gl-matrix/mat4.js\";\r\nimport * as quat from \"./gl-matrix/quat.js\";\r\nimport * as quat2 from \"./gl-matrix/quat2.js\";\r\nimport * as vec2 from \"./gl-matrix/vec2.js\";\r\nimport * as vec3 from \"./gl-matrix/vec3.js\";\r\nimport * as vec4 from \"./gl-matrix/vec4.js\";\r\n\r\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","var vec2 = require('gl-matrix').vec2;\nvar cross = require('./cross-2d');\nvar isZero = require('./is-zero-1d');\n\nmodule.exports = function( a, b, c, d ) {\n  var p = vec2.clone( a );\n  var r = vec2.clone( b );\n  vec2.subtract( r, r, p );\n\n  var q = vec2.clone( c );\n  var s = vec2.clone( d );\n  vec2.subtract( s, s, q );\n\n  var dqp = vec2.create();\n  vec2.subtract( dqp, q, p );\n\n  var t = -1.0;\n  var rxs = cross( r, s );\n  var qpxr = cross( dqp, r );\n  var qpxs = cross( dqp, s );\n  if( rxs != 0 ) {\n    t = qpxs / rxs ;\n  }\n  else if( isZero( qpxr ) && isZero( rxs ) ) {\n    var t = vec2.dot( dqp, r ) / vec2.dot( r, r );\n  }\n  else if( !isZero( qpxr ) && isZero( rxs ) ) {\n    throw 'lines are parallel and do no intersect';\n  }\n  return vec2.fromValues( p[ 0 ] + t * r[ 0 ], p[ 1 ] + t * r[ 1 ] );\n};\n","var isLeftOn = require('./is-left-on-2d');\nvar isLeft = require('./is-left-2d');\n\nmodule.exports = function( a0, a, a1, b ) {\n  if( isLeftOn( a, a1, a0 ) ) {\n    return isLeft( a, b, a0 ) && isLeft( b, a, a1 );;\n  }\n  return !( isLeftOn( b, a, a0 ) && isLeftOn( a, b, a1 ) );\n};\n","var area2 = require('./area2-2d');\nvar greaterThanZero = require('./greater-than-zero-1d');\nvar isZero = require('./is-zero-1d');\n\nmodule.exports = function( a, b, c ) {\n  var res = area2( a, b, c );\n  return greaterThanZero( res ) || isZero( res );\n};\n","var intersectsProper = require('./intersects-proper-2d');\nvar isBetween = require('./is-between-2d');\n\nmodule.exports = function( a, b, c, d )\n{\n  if( intersectsProper( a, b, c, d ) ) {\n    return true;\n  }\n  else if( isBetween( a, b, c ) || isBetween( a, b, d ) ||\n           isBetween( c, d, a ) || isBetween( c, d, b ) ) {\n    return true;\n  }\n  return false;\n};\n","var isColinear = require('./is-colinear-2d');\nvar isLeft = require('./is-left-2d');\n\nmodule.exports = function( a, b, c, d ) {\n  if( isColinear( a, b, c ) || isColinear( a, b, d ) || isColinear( c, d, a ) || isColinear( c, d, b ) ) {\n    return false;\n  }\n  if( isLeft( a, b, c ) != isLeft( a, b, d ) &&\n      isLeft( c, d, a ) != isLeft( c, d, b ) ) {\n      return true;\n  }\n  return false;\n};\n","var isZero = require('./is-zero-1d');\nvar area2 = require('./area2-2d');\n\nmodule.exports = function( a, b, c ) {\n  return isZero( area2( a, b, c ) );\n};\n","var isColinear = require('./is-colinear-2d');\n\nmodule.exports = function( a, b, c ) {\n  if( !isColinear( a, b, c ) ) {\n    return false;\n  }\n  if( a[0] !== b[0] ) {\n      return ( ( a[ 0 ] <= c[ 0 ] ) && ( c[ 0 ] <= b[ 0 ] ) ) ||\n             ( ( a[ 0 ] >= c[ 0 ] ) && ( c[ 0 ] >= b[ 0 ] ) );\n  }\n  else {\n    return ( ( a[ 1 ] <= c[ 1 ] ) && ( c[ 1 ] <= b[ 1 ] ) ) ||\n           ( ( a[ 1 ] >= c[ 1 ] ) && ( c[ 1 ] >= b[ 1 ] ) );\n  }\n  return false;\n};\n","var inCone = require('./in-cone-2d');\nvar isDiagonalie = require('./is-diagonalie-2d');\n\nmodule.exports = function( i, j, polygon ) {\n  var len = polygon.length;\n  var a0 = polygon[ ( i - 1 < 0 ) ? len - 1 : i - 1 ];\n  var a = polygon[ i ];\n  var a1 = polygon[ ( i + 1 ) % len ];\n\n  var b0 = polygon[ ( j - 1 < 0 ) ? len - 1 : j - 1 ];\n  var b = polygon[ j ];\n  var b1 = polygon[ ( j + 1 ) % len ];\n  \n  if( inCone( a0, a, a1, b ) && inCone( b0, b, b1, a ) && isDiagonalie( a, b, polygon ) ) {\n    return true;\n  }\n  return false;\n};\n","var isEqual = require('./is-equal-2d');\nvar intersectsProper = require('./intersects-proper-2d');\n\nmodule.exports = function( a, b, polygon ) {\n  var c, c1, len = polygon.length;\n  for( var i = 0; i < len; i++ ) {\n    c = polygon[ i ];\n    c1 = polygon[ ( i + 1 ) % len ];\n    if( !isEqual( c, a ) && !isEqual( c1, a ) && !isEqual( c, b ) && !isEqual( c1, b ) &&\n        intersectsProper( a, b, c, c1 ) ) {\n          return false;\n        }\n  }\n  return true;\n};\n","var isZero = require('./is-zero-1d');\nvar isEqual = require('./is-equal-1d');\n\nmodule.exports = function( a, b ) {\n  if( isEqual( a[0], b[0] ) && isEqual( a[1], b[1] ) ) {\n    return true;\n  }\n  return false;\n};\n","var isDiagonal = require('./is-diagonal-2d');\n\nmodule.exports = function( polygon ) {\n  var len = polygon.length;\n  var ears = [];\n  for( var i = 0; i < len; i++ ) {\n    var i0 = i - 1 < 0 ? len - 1 : i - 1;\n    var i1 = ( i + 1 ) % len;\n    ears.push( isDiagonal( i0, i1, polygon ) );\n  }\n  var polys = polygon.slice( 0 );\n  var v0, v1, v2 = 0, v3, v4, n = polys.length, end = 0;\n  var lookups = [];\n  var llen = 0;\n  for( var i = 0; i < len; i++ ) { lookups[ i ] = i; }\n  var cells = [];\n  while( n > 3 ) {\n    do {\n      llen = lookups.length;\n      v2 = v2 % llen;\n      if( ears[ lookups[ v2 ] ] ) {\n        v4 = ( v2 + 2 ) % llen;\n        v3 = ( v2 + 1 ) % llen;\n        //v2//\n        v1 = ( v2 - 1 );\n        v1 = v1 < 0 ? llen + v1 : v1;\n        v0 = v1 - 1;\n        v0 = v0 < 0 ? llen + v0 : v0;\n\n        v0 = v0 % llen;\n        v1 = v1 % llen;\n        v2 = v2 % llen;\n        v3 = v3 % llen;\n        v4 = v4 % llen;\n\n        ears[ lookups[ v1 ] ] = isDiagonal( lookups[ v0 ], lookups[ v3 ], polys );\n        ears[ lookups[ v3 ] ] = isDiagonal( lookups[ v1 ], lookups[ v4 ], polys );\n        cells.push( [ lookups[ v2 ], lookups[ v3 ], lookups[ v1 ] ] );\n        lookups.splice( v2, 1 );        \n        end = v3;\n        n--;\n        break;\n      }\n      v2++;\n    } while ( v2 != end );\n  }\n  cells.push( [ lookups[ 1 ], lookups[ 2 ], lookups[ 0 ] ] )\n  return cells;\n};\n","var isZero = require('./is-zero-1d');\n\nmodule.exports = function( a, b, c ) {\n  var cax = c[ 0 ] - a[ 0 ];\n  var cay = c[ 1 ] - a[ 1 ];\n  var caz = c[ 2 ] - a[ 2 ];\n  var bax = b[ 0 ] - a[ 0 ];\n  var bay = b[ 1 ] - a[ 1 ];\n  var baz = b[ 2 ] - a[ 2 ];\n  return isZero( ( caz * bay ) - ( baz * cay ) ) &&\n         isZero( ( baz * cax ) - ( bax * caz ) ) &&\n         isZero( ( bax * cay ) - ( bay * cax ) );\n};\n","var Vertex = require('./../Core/Vertex');\nvar Edge = require('./../Core/Edge');\nvar HalfEdge = require('./../Core/HalfEdge');\nvar Face = require('./../Core/Face');\n\nvar FaceHalfEdges = require('./../Queries/FaceHalfEdges');\nvar MeshCentroid = require('./../Queries/MeshCentroid');\nvar calculateNormal = require('guf').calculateNormal;\nvar expandPolygon = require('cga').expandPolygon2;\n\nvar vec3 = require('gl-matrix').vec3;\nvar quat = require('gl-matrix').quat;\n\nvar zAxis = vec3.fromValues( 0.0, 0.0, 1.0 );\n\nmodule.exports = function( mesh, faceIndex, distance, scale ) {\n  var meshVerts = mesh.getVertices();\n  var meshHalfEdges = mesh.getHalfEdges();\n  var meshEdges = mesh.getEdges();\n  var meshEdgeMap = mesh.getEdgeMap();\n  var meshFaces = mesh.getFaces();\n  var meshPositions = mesh.positions;\n\n  var originalFace = meshFaces[ faceIndex ];\n  var faceHalfEdges = FaceHalfEdges( originalFace );\n  var flen = faceHalfEdges.length;\n  var originalVertices = [];\n  for( var i = 0; i < flen; i++ ) {\n    var he = faceHalfEdges[ i ];\n    var vertex = he.getVertex();\n    var vertexIndex = vertex.getIndex();\n    originalVertices.push( vertex );\n  }\n\n  var vlen = originalVertices.length;\n  var v0 = meshPositions[ originalVertices[ 0 ].getIndex() ];\n  var v1 = meshPositions[ originalVertices[ 1 ].getIndex() ];\n  var v2 = meshPositions[ originalVertices[ 2 ].getIndex() ];\n\n  var normal = calculateNormal( v0, v1, v2 );\n  var faceOri = quat.create();\n  quat.rotationTo( faceOri, normal, zAxis );\n\n  var newVertices = [];\n  var polygon = [];\n  var indicies = [];\n  var zOffset = 0.0;\n  for( var j = 0; j < vlen; j++ ) {\n    var vertex = originalVertices[ j ];\n    var vertexIndex = vertex.getIndex();\n    var vertexPos = vec3.clone( meshPositions[ vertexIndex ] );\n    vec3.transformQuat( vertexPos, vertexPos, faceOri );\n    zOffset = vertexPos[ 2 ];\n    polygon.push( [ vertexPos[ 0 ], vertexPos[ 1 ] ] );\n    indicies.push( vertexIndex );\n    newVertices.push( new Vertex() );\n  }\n  // console.log( zOffset );\n\n  quat.rotationTo( faceOri, zAxis, normal );\n\n  var results = expandPolygon( polygon, - ( scale ? scale : 0.00001 ) );\n\n  var rlen = results.length;\n  var newPositions = [];\n  var newEdges = [];\n  var newHalfEdges = [];\n\n  zOffset += ( distance != undefined ? distance : 0.0 );\n\n  for( var i = 0; i < rlen; i++ ) {\n    var pos = results[ i ];\n    var vpos = vec3.fromValues( pos[ 0 ], pos[ 1 ], zOffset );\n    vec3.transformQuat( vpos, vpos, faceOri );\n    // vec3.add( vpos, vpos, [0,0,zOffset]);\n    newPositions.push( vpos );\n    var vertex = newVertices[ i ];\n    vertex.setIndex( meshPositions.length );\n    meshPositions.push( vpos );\n    meshVerts.push( vertex );\n  }\n\n  var lhe = undefined;\n  var lhef = undefined;\n  for( var i = 0; i < rlen; i++ ) {\n    var f = originalFace;\n    var v = newVertices[ i ];\n    var vn = newVertices[ ( i + 1 ) % rlen ];\n\n    var e = new Edge();\n    var he = new HalfEdge();\n    var hef = new HalfEdge();\n\n    //he\n    he.setFlipHalfEdge( hef );\n    he.setEdge( e );\n    he.setVertex( v );\n    he.setFace( f );\n    meshHalfEdges.push( he );\n    //hef\n    hef.setFlipHalfEdge( he );\n    hef.setEdge( e );\n    hef.setVertex( vn );\n    meshHalfEdges.push( hef );\n\n    //e\n    e.setIndex( meshEdges.length );\n    e.setHalfEdge( he );\n    meshEdges.push( e );\n    var keys = mesh.getEdgeKeys( v.getIndex(), vn.getIndex() );\n    meshEdgeMap[ keys[ 0 ] ] = e;\n    meshEdgeMap[ keys[ 1 ] ] = e;\n\n    //v\n    v.setHalfEdge( he );\n    newEdges.push( e );\n    newHalfEdges.push( he );\n\n    if( lhe ) {\n      lhe.setNextHalfEdge( he );\n      hef.setNextHalfEdge( lhef );\n    }\n    lhe = he;\n    lhef = hef;\n  }\n\n  var he = newHalfEdges[ 0 ];\n  var hef = he.getFlipHalfEdge();\n  lhe.setNextHalfEdge( he );\n  hef.setNextHalfEdge( lhef );\n  originalFace.setHalfEdge( he );\n\n  var newFaces = [];\n  var holeHalfEdges = [];\n  var lf = undefined;\n  var lhe = undefined;\n\n  for( var i = 0; i < rlen; i++ ) {\n    var v = newVertices[ i ];\n    var vo = originalVertices[ i ];\n    var heo = v.getHalfEdge();\n    var heof = heo.getFlipHalfEdge();\n\n    var ofhe = faceHalfEdges[ i ];\n    var li = i - 1;\n    li = li < 0 ? rlen + li : li;\n    var ofhep = faceHalfEdges[ li ];\n\n    var f = new Face();\n    var e = new Edge();\n    var he = new HalfEdge();\n    var hef = new HalfEdge();\n\n    //he\n    he.setFlipHalfEdge( hef );\n    he.setNextHalfEdge( ofhe );\n    he.setEdge( e );\n    he.setVertex( v );\n    he.setFace( f );\n\n    //hef\n    hef.setFlipHalfEdge( he );\n    hef.setNextHalfEdge( heof.getNextHalfEdge() );\n    hef.setEdge( e );\n    hef.setVertex( vo );\n    hef.setFace( lf );\n\n    //e\n    e.setIndex( meshEdges.length );\n    meshEdges.push( e );\n    e.setHalfEdge( he );\n\n    //f\n    f.setIndex( meshFaces.length );\n    f.setHalfEdge( he );\n    meshFaces.push( f );\n    newFaces.push( f );\n\n    //vo\n    vo.setHalfEdge( hef );\n\n    //old connections\n    heof.setNextHalfEdge( he );\n    heof.setFace( f );\n    ofhe.setFace( f );\n    ofhep.setNextHalfEdge( hef );\n\n    holeHalfEdges.push( he );\n    lf = f;\n  }\n\n  var he = holeHalfEdges[ 0 ];\n  var hef = he.getFlipHalfEdge();\n  hef.setFace( newFaces[ newFaces.length - 1 ] );\n\n\n\n\n  // //didn't work for more than 1\n  // for( var i = 0; i < rlen; i++ ) {\n  //   var vn0 = newVertices[ i ];\n  //   var vn1 = newVertices[ ( i + 1 ) % rlen ];\n  //\n  //   var vo0 = originalVertices[ i ];\n  //   var vo1 = originalVertices[ ( i + 1 ) % rlen ];\n  //\n  //   meshFaces.push( createFace( mesh, [ vo0, vo1, vn1, vn0 ] ) );\n  // }\n\n  return originalFace;\n};\n\nfunction createFace( mesh, vertices, face ) {\n  var meshEdgeMap = mesh.getEdgeMap();\n  var meshFaces = mesh.getFaces();\n  var meshHalfEdges = mesh.getHalfEdges();\n  var meshEdges = mesh.getEdges();\n\n  if( !face ) {\n    face = new Face();\n    face.setIndex( meshFaces.length );\n  }\n\n  var vlen = vertices.length;\n  var lhe;\n  var hes = [];\n  for( var i = 0; i < vlen; i++ ) {\n    var v0 = vertices[ i ];\n    var v1 = vertices[ ( i + 1 ) % vlen ];\n    var i0 = v0.getIndex();\n    var i1 = v1.getIndex();\n\n    var he = new HalfEdge();\n    var edge = mesh.getEdge( i0, i1 );\n    if( edge ) {\n      var het = edge.getHalfEdge();\n      var hetv = het.getVertex();\n      if( hetv == v0 ) {\n        he = het;\n      }\n      else {\n        he.setFlipHalfEdge( het );\n        het.setFlipHalfEdge( he );\n      }\n    }\n    else {\n      edge = new Edge();\n      var keys = mesh.getEdgeKeys( i0, i1 );\n      edge.setIndex( meshEdges.length );\n      meshEdges.push( edge );\n      edge.setHalfEdge( he );\n      meshEdgeMap[ keys[ 0 ] ] = edge;\n      meshEdgeMap[ keys[ 1 ] ] = edge;\n    }\n\n    //he\n    he.setEdge( edge );\n    he.setFace( face );\n    he.setVertex( v0 );\n    if( lhe ) {\n      lhe.setNextHalfEdge( he );\n    }\n    hes.push( he );\n    lhe = he;\n    meshHalfEdges.push( he );\n  }\n  face.setHalfEdge( lhe );\n  lhe.setNextHalfEdge( hes[ 0 ] );\n  return face;\n}\n","var Vertex = require('./../Core/Vertex');\nvar Edge = require('./../Core/Edge');\nvar HalfEdge = require('./../Core/HalfEdge');\nvar Face = require('./../Core/Face');\n\nvar FaceHalfEdges = require('./../Queries/FaceHalfEdges');\nvar FaceVertices = require('./../Queries/FaceVertices');\nvar HalfEdgePrev = require('./../Queries/HalfEdgePrev');\n\nvar createFace = require('./CreateFace');\n\nmodule.exports = function( mesh, faceIndex0, faceIndex1, vertexOffset ) {\n  var meshFaces = mesh.getFaces();\n\n  var f0 = meshFaces[ faceIndex0 ];\n  var f0HalfEdges = FaceHalfEdges( f0 );\n  var f0Vertices = FaceVertices( f0 );\n  var f0len = f0Vertices.length;\n\n  var f1 = meshFaces[ faceIndex1 ];\n  var f1HalfEdges = FaceHalfEdges( f1 );\n  var f1Vertices = FaceVertices( f1 );\n  var f1len = f1Vertices.length;\n\n  if( f0len != f1len ) {\n    throw 'faces do not have the same number of vertices, can not create pipe';\n  }\n\n  var faces = [ f0, f1 ];\n  var offset = vertexOffset != undefined ? vertexOffset : 2;\n  for( var i = 0; i < f0len; i++ ) {\n\n    var v0i0 = i - offset;\n    v0i0 = v0i0 >= f0len ? v0i0 % f0len : v0i0;\n    v0i0 = v0i0 < 0 ? f0len + v0i0 : v0i0;\n    var v0i1 = ( ( i + 1 ) % f0len ) - offset;\n    v0i1 = v0i1 >= f0len ? v0i1 % f0len : v0i1;\n    v0i1 = v0i1 < 0 ? f0len + v0i1 : v0i1;\n\n    var v1i0 = ( f0len - i ) % f0len;\n    var v1i1 = ( f0len - ( i + 1 ) );\n    var oldFace = faces[ i ];\n    var inputFace = oldFace ? true : false;\n    var result = createFace( mesh, [\n      f0Vertices[ v0i0 ],\n      f0Vertices[ v0i1 ],\n      f1Vertices[ v1i1 ],\n      f1Vertices[ v1i0 ] ], oldFace );\n\n    if( !inputFace ) {\n      meshFaces.push( result );\n    }\n  }\n};\n","var Edge = require('./../Core/Edge');\nvar HalfEdge = require('./../Core/HalfEdge');\nvar Face = require('./../Core/Face');\n\nmodule.exports = function( mesh, vertices, face ) {\n  var meshEdgeMap = mesh.getEdgeMap();\n  var meshFaces = mesh.getFaces();\n  var meshHalfEdges = mesh.getHalfEdges();\n  var meshEdges = mesh.getEdges();\n\n  if( !face ) {\n    face = new Face();\n    face.setIndex( meshFaces.length );\n  }\n\n  var vlen = vertices.length;\n  var hel;\n  var hes = [];\n  for( var i = 0; i < vlen; i++ ) {\n    var v0 = vertices[ i ];\n    var v1 = vertices[ ( i + 1 ) % vlen ];\n    var i0 = v0.getIndex();\n    var i1 = v1.getIndex();\n\n    var he = new HalfEdge();\n    var edge = mesh.getEdge( i0, i1 );\n    if( edge ) {\n      var het = edge.getHalfEdge();\n      var hetv = het.getVertex();\n      if( hetv == v0 ) {\n        he = het;\n      }\n      else {\n        he.setFlipHalfEdge( het );\n        het.setFlipHalfEdge( he );\n      }\n    }\n    else {\n      edge = new Edge();\n      var keys = mesh.getEdgeKeys( i0, i1 );\n      edge.setIndex( meshEdges.length );\n      meshEdges.push( edge );\n      edge.setHalfEdge( he );\n      meshEdgeMap[ keys[ 0 ] ] = edge;\n      meshEdgeMap[ keys[ 1 ] ] = edge;\n    }\n\n    //he\n    he.setEdge( edge );\n    he.setFace( face );\n    he.setVertex( v0 );\n    if( hel ) {\n      hel.setNextHalfEdge( he );\n    }\n\n    //v\n    v0.setHalfEdge( he );\n\n    hes.push( he );\n    hel = he;\n    meshHalfEdges.push( he );\n  }\n  face.setHalfEdge( hes[ 0 ] );\n  hel.setNextHalfEdge( hes[ 0 ] );\n  return face;\n}\n","var Mesh = require('./../Core/Mesh');\n\nvar vec3 = require('gl-matrix').vec3;\n\nmodule.exports = function( mesh ) {\n  var newMesh = new Mesh();\n  var newPositions = [];\n  var positions = mesh.getPositions();\n  var plen = positions.length;\n  for( var i = 0; i < plen; i++ ) {\n    newPositions.push( vec3.clone( positions[ i ] ) );\n  }\n  newMesh.setPositions( newPositions );\n  newMesh.setCells( mesh.getCells() );\n  newMesh.process();\n  return newMesh;\n};\n","var Mesh = require('./../Core/Mesh');\nvar Vertex = require('./../Core/Vertex');\nvar Edge = require('./../Core/Edge');\nvar HalfEdge = require('./../Core/HalfEdge');\nvar Face = require('./../Core/Face');\nvar FaceHalfEdges = require('./../Queries/FaceHalfEdges');\n\nvar vec3 = require('gl-matrix').vec3;\n\nmodule.exports = function( mesh, other ) {\n  var meshPositions = mesh.positions;\n  var mplen = meshPositions.length;\n  var meshVerticies = mesh.getVertices();\n  var mvlen = meshVerticies.length;\n  var meshFaces = mesh.getFaces();\n  var mflen = meshFaces.length;\n  var meshEdges = mesh.getEdges();\n  var melen = meshEdges.length;\n  var meshEdgeMap = mesh.getEdgeMap();\n\n  var otherPositions = other.positions;\n  var oplen = otherPositions.length;\n  var otherVertices = other.getVertices();\n  var ovlen = otherVertices.length;\n\n  var otherCells = other.getCells();\n  var oclen = otherCells.length;\n\n  for( var i = 0; i < oplen; i++ ) {\n    var v = new Vertex();\n    v.setIndex( meshVerticies.length );\n    meshVerticies.push( v );\n    var p = vec3.clone( otherPositions[ i ] );\n    meshPositions.push( p );\n  }\n\n  for( var i = 0; i < oclen; i++ ) {\n    var cell = otherCells[ i ];\n    var clen = cell.length;\n    var face = new Face();\n    face.setIndex( meshFaces.length );\n    meshFaces.push( face );\n    var lhe = undefined;\n    var hes = [];\n    for( var j = 0; j < clen; j++ ) {\n      var i0 = mvlen + cell[ j ];\n      var i1 = mvlen + cell[ ( j + 1 ) % clen ];\n\n      var vertex = meshVerticies[ i0 ];\n      var edge = mesh.getEdge( i0, i1 );\n      var hasEdge = edge ? true : false;\n      var he = new HalfEdge();\n\n      if( !hasEdge ) {\n        edge = new Edge();\n        edge.setIndex( meshEdges.length );\n        edge.setHalfEdge( he );\n        meshEdges.push( edge );\n        var keys = mesh.getEdgeKeys( i0, i1 );\n        meshEdgeMap[ keys[ 0 ] ] = edge;\n        meshEdgeMap[ keys[ 1 ] ] = edge;\n      }\n      else {\n        var hef = edge.getHalfEdge();\n        hef.setFlipHalfEdge( he );\n        he.setFlipHalfEdge( hef );\n      }\n\n      //he\n      he.setFace( face );\n      he.setEdge( edge );\n\n      he.setVertex( vertex );\n      if( lhe ) {\n        lhe.setNextHalfEdge( he );\n      }\n      hes.push( he );\n      lhe = he;\n\n      //vertex\n      vertex.setHalfEdge( he );\n    }\n    face.setHalfEdge( lhe );\n    lhe.setNextHalfEdge( hes[ 0 ] );\n  }\n};\n","var MeshCentroid = require('./../Queries/MeshCentroid');\n\nvar vec3 = require('gl-matrix').vec3;\n\nvar tmp = vec3.create();\n\nmodule.exports = function( mesh, scale ) {\n  if( scale.constructor != Array ) {\n    scale = [ scale, scale, scale ];\n  }\n  vec3.set( tmp, 0.0, 0.0, 0.0 );\n  var centroid = MeshCentroid( mesh );\n  var positions = mesh.positions;\n  var plen = positions.length;\n  for( var i = 0; i < plen; i++ ) {\n    var pos = positions[ i ];\n    vec3.subtract( pos, pos, centroid );\n    vec3.multiply( pos, pos, scale );\n    vec3.add( pos, pos, centroid );\n  }\n};\n","var Mesh = require('./../Core/Mesh');\n\nvar vec3 = require('gl-matrix').vec3;\n\nvar tmp = vec3.create();\n\nmodule.exports = function( mesh, displacement ) {\n  vec3.set( tmp, 0.0, 0.0, 0.0 );\n  var positions = mesh.positions;\n  var plen = positions.length;\n  for( var i = 0; i < plen; i++ ) {\n    var pos = positions[ i ];\n    vec3.subtract( pos, pos, displacement );\n  }\n};\n","var Mesh = require('./../Core/Mesh');\nvar FaceHalfEdges = require('./../Queries/FaceHalfEdges');\nvar FaceVertices = require('./../Queries/FaceVertices');\n\nvar vec3 = require('gl-matrix').vec3;\n\nmodule.exports = function( mesh ) {\n  var faces = mesh.getFaces();\n  var flen = faces.length;\n  for( var i = 0; i < flen; i++ ) {\n    var hes = FaceHalfEdges( faces[ i ] );\n    var vts = FaceVertices( faces[ i ] );\n    var hlen = hes.length;\n    for( var j = 0; j < hlen; j++ ) {\n      var i0 = j;\n      var i1 = ( j + 1 ) % hlen;\n\n      var v0 = vts[ i0 ];\n      var v1 = vts[ i1 ];\n\n      var h0 = hes[ i0 ];\n      var h1 = hes[ i1 ];\n      h1.setNextHalfEdge( h0 );\n      h0.setVertex( v1 );\n      v1.setHalfEdge( h0 );\n    }\n  }\n};\n","var Vertex = require('./../Core/Vertex');\nvar FaceHalfEdges = require('./../Queries/FaceHalfEdges');\nvar FaceVertices = require('./../Queries/FaceVertices');\nvar VertexHalfEdges = require('./../Queries/VertexHalfEdges');\nvar CreateFace = require('./CreateFace');\nvar Cross = require('guf').cross;\nvar CalculateNormal = require('guf').calculateNormal;\nvar ExpandPolygon = require('cga').expandPolygon2;\n\nvar vec3 = require('gl-matrix').vec3;\nvar quat = require('gl-matrix').quat;\n\nvar tmp = vec3.create();\nvar tmp2 = vec3.create();\nvar p0p1 = vec3.create();\nvar p2p1 = vec3.create();\n\nvar zAxis = vec3.fromValues( 0.0, 0.0, 1.0 );\n\nmodule.exports = function( mesh, offset, depth ) {\n  var meshPositions = mesh.positions;\n  var meshVertices = mesh.getVertices();\n  var mvlen = meshVertices.length;\n\n  var meshFaces = mesh.getFaces();\n  var mflen = meshFaces.length;\n\n  offset = offset != undefined ? offset : 1.0;\n  depth = depth != undefined ? depth : offset;\n\n  for( var i = 0; i < mvlen; i++ ) {\n    var vertex = meshVertices[ i ];\n    var vertexPosition = meshPositions[ vertex.getIndex() ];\n    var vertexHalfEdges = VertexHalfEdges( vertex );\n    var hlen = vertexHalfEdges.length;\n    vec3.set( tmp, 0, 0, 0 );\n    for( var j = 0; j < hlen; j++ ) {\n      var h0 = vertexHalfEdges[ j ];\n      var h1 = vertexHalfEdges[ ( j + 1 ) % hlen ];\n\n      var h0n = h0.getNextHalfEdge();\n      var h1n = h1.getNextHalfEdge();\n\n      var v0 = h0n.getVertex();\n      var v1 = h1n.getVertex();\n\n      var p0 = meshPositions[ v0.getIndex() ];\n      var p1 = meshPositions[ v1.getIndex() ];\n\n      Cross( tmp2, p0, vertexPosition, p1 );\n      vec3.add( tmp, tmp, tmp2 );\n    }\n\n    vec3.normalize( tmp, tmp );\n    vec3.scale( tmp, tmp, depth );\n    var newPosition = vec3.create();\n    vec3.add( newPosition, vertexPosition, tmp );\n\n    var vertex = new Vertex();\n    vertex.setIndex( meshVertices.length );\n    meshVertices.push( vertex );\n    meshPositions.push( newPosition );\n  }\n\n  for( var k = 0; k < mflen; k++ ) {\n    var face = meshFaces[ k ];\n    var faceVertices = FaceVertices( face );\n    var vlen = faceVertices.length;\n    var v0 = meshPositions[ faceVertices[ 0 ].getIndex() ];\n    var v1 = meshPositions[ faceVertices[ 1 ].getIndex() ];\n    var v2 = meshPositions[ faceVertices[ 2 ].getIndex() ];\n\n    var normal = CalculateNormal( v0, v1, v2 );\n    var faceOri = quat.create();\n    quat.rotationTo( faceOri, normal, zAxis );\n\n    var newFaceVertices = [];\n    var polygon = [];\n    var zOffset = 0.0;\n    for( var j = 0; j < vlen; j++ ) {\n      var vertex = faceVertices[ j ];\n      var vertexIndex = vertex.getIndex();\n      var vertexPos = vec3.clone( meshPositions[ vertexIndex ] );\n      vec3.transformQuat( vertexPos, vertexPos, faceOri );\n      zOffset = vertexPos[ 2 ];\n      polygon.push( [ vertexPos[ 0 ], vertexPos[ 1 ] ] );\n      newFaceVertices.push( new Vertex() );\n    }\n\n    quat.rotationTo( faceOri, zAxis, normal );\n\n    var results = ExpandPolygon( polygon, - offset );\n    var rlen = results.length;\n\n    for( var i = 0; i < rlen; i++ ) {\n      var pos = results[ i ];\n      var vpos = vec3.fromValues( pos[ 0 ], pos[ 1 ], zOffset );\n      vec3.transformQuat( vpos, vpos, faceOri );\n      var vertex = newFaceVertices[ i ];\n      vertex.setIndex( meshVertices.length );\n      meshPositions.push( vpos );\n      meshVertices.push( vertex );\n    }\n\n    var faces = [ face ];\n    for( var i = 0; i < vlen; i++ ) {\n      var i0 = i;\n      var i1 = ( i + 1 ) % vlen;\n      var v0 = faceVertices[ i0 ];\n      var v1 = faceVertices[ i1 ];\n\n      var v0e = meshVertices[ v0.getIndex() + mvlen ];\n      var v1e = meshVertices[ v1.getIndex() + mvlen ];\n\n      var v2 = newFaceVertices[ i1 ];\n      var v3 = newFaceVertices[ i0 ];\n\n      var f = faces[ i ];\n      var add = f == undefined ? true : false;\n      var result;\n\n      if( depth > 0.0 ) {\n        result = CreateFace( mesh, [ v0, v1, v2, v3 ], f );\n        meshFaces.push( CreateFace( mesh, [ v0e, v3, v2, v1e ] ) );\n      }\n      else {\n        result = CreateFace( mesh, [ v3, v2, v1, v0 ], f );\n        meshFaces.push( CreateFace( mesh, [ v1e, v2, v3, v0e ] ) );\n      }\n\n      if( add ) {\n        meshFaces.push( result );\n      }\n    }\n  }\n};\n","var Mesh = require('./../Core/Mesh');\n\nmodule.exports = function( profile ) {\n  if( profile.length < 0 || profile[ 0 ].length < 2 ) {\n    throw \"profile must be a non-zero array of atleast 3 2D positions [ [ x0, y0 ], [ x1, y1 ], [ x2, y2 ] ]\";\n  }\n\n  var mesh = new Mesh();\n  var positions = [];\n  var frontFace = [];\n  var backFace = [];\n\n  var len = profile.length;\n  for( var i = 0; i < len; i++ ) {\n    positions.push( [ profile[ i ][ 0 ], profile[ i ][ 1 ], 0.0 ] );\n    frontFace.push( i );\n    backFace.push( len - 1 - i );\n  }\n  var cells = [ frontFace, backFace ];\n\n  mesh = new Mesh();\n  mesh.setPositions( positions );\n  mesh.setCells( cells );\n  mesh.process();\n  return mesh;\n};\n"],"names":[],"version":3,"file":"tessellation-worker.b5cf35a0.js.map","sourceRoot":"/__parcel_source_root/"}