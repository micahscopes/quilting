{"mappings":"AEUA,OAAO,MAAM,QAAS,CAAC;AAEvB,OAAO,MAAM,gCAAiC,MAAM,gBAAe,MAAM;;;;CAOxE,CAAA;AAGD,OAAO,MAAM,eAEH,MAAM,SAAS,MAAM,mBAAmB,GAAG,EAAE,EAAE,aAAa,GAAG,EAAE,EAAE,SAK9D,MAAM,KAAK,MAAM,QAmB7B,CAAC","sources":["src/src/bernstein.ts","src/src/ga-helpers.mjs","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,"import Algebra from \"ganja.js\";\nimport { range, reduce } from \"lodash-es\";\nimport { BxB } from \"./bernstein\";\n\nimport { CGA, pointWeight, up, Mul3, ni } from \"./ga-helpers.mjs\";\n\nconst product = (...a: any[][]) =>\n  a.reduce((a, b) => a.flatMap((d) => b.map((e) => [d, e].flat())));\n\n// todo: abstract this out\nexport const Alg = CGA;\n\nexport const barePatchIndices = (uResolution: number, vResolution: number=-1) => {\n  vResolution = vResolution < 0 ? uResolution : vResolution\n  const U = range(0, 1, 1/uResolution) //.map((u, i) => ({i, u}))\n  const V = range(0, 1, 1/vResolution) //.map((v, j) => ({j, v}))\n  const UV = product(U, V)\n\n  return {UV, U, V}\n}\n\n\nexport const fquad =\n  // todo: (Alg: any = CGA) =>\n  (deg_u: number, deg_v: number, pointsVectorsUV: any[][], weightsUV: any[][]) => {\n    const patchIndices = product(range(deg_u), range(deg_v));\n    const points = patchIndices.map(([i, j]: [number, number]) => up(pointsVectorsUV[i][j]));\n    const weights = patchIndices.map(([i, j]: [number, number]) => pointWeight(pointsVectorsUV[i][j], weightsUV[i][j]));\n\n    return (u: number, v: number) => {\n      const top = reduce(\n        patchIndices.map(\n          ([i, j]: [number, number], k: number) => Alg.Mul(points[k], weights[k])\n          // Alg.Mul(Alg.Mul(points[i][j], weights[i][j]), Alg.Scalar(BxB(deg_u, deg_v, i, j, u, v)))\n        ),\n        (x, y) => Alg.Add(x, y),\n        Alg.Scalar(0)\n      );\n      const bottom = reduce(\n        patchIndices.map(([i, j]: [number, number], k: number) =>\n          Alg.Mul(weights[k], Alg.Scalar(BxB(deg_u, deg_v, i, j, u, v)))\n        ),\n        (x, y) => Alg.Add(x, y),\n        Alg.Scalar(0)\n      );\n\n      return Alg.Div(top, bottom);\n    };\n  };"],"names":[],"version":3,"file":"types.d.ts.map","sourceRoot":"../"}